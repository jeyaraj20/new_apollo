{"ast":null,"code":"var _jsxFileName = \"D:\\\\Question_cloud\\\\question_cloud_admin_web_new\\\\pages\\\\announcements\\\\view\\\\index.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Modal, Button, Checkbox, Spin, notification, Pagination, Tabs, Select } from 'antd';\nimport HeaderDashboard from '../../../components/header/HeaderDashboard';\nimport Sidebar from '../../../components/sections/sidebar';\nimport TableAnnouncements from '../../../components/tables/Announcements';\nimport { getAllAnnouncements, getInactiveAnnouncements } from '../../../store/Announcements/action';\nimport TestimonialsRepository from '../../../repositories/TestimonialsRepository';\n\nconst Home = props => {\n  const {\n    TabPane\n  } = Tabs;\n  const {\n    Option\n  } = Select;\n  const dispatch = useDispatch();\n  const valueRef = /*#__PURE__*/React.createRef();\n  const {\n    auth\n  } = useSelector(({\n    auth\n  }) => auth);\n  const {\n    allAnnouncements,\n    totalActiveCount,\n    inactiveAnnouncements,\n    totalInactiveCount\n  } = useSelector(({\n    Announcements\n  }) => Announcements);\n  const {\n    0: showModal,\n    1: setShowModal\n  } = useState(false);\n  const {\n    0: name,\n    1: setName\n  } = useState('');\n  const {\n    0: position,\n    1: setPosition\n  } = useState('');\n  const {\n    0: image,\n    1: setImage\n  } = useState('');\n  const {\n    0: selectedHomeCatId,\n    1: setSelectedHomeCatId\n  } = useState('');\n  const {\n    0: errors,\n    1: setErrors\n  } = useState({});\n  const {\n    0: loader,\n    1: setLoader\n  } = useState(false);\n  const {\n    0: currentPage,\n    1: setCurrentPage\n  } = useState(1);\n  const {\n    0: pageSizeTotal,\n    1: setPageSizeTotal\n  } = useState(10);\n  const {\n    0: tab,\n    1: setTab\n  } = useState('active');\n  const {\n    0: selectAll,\n    1: setSelectAll\n  } = useState(false);\n  const {\n    0: selectedHomeCatIds,\n    1: setSelectedHomeCatIds\n  } = useState([]);\n  const {\n    0: action,\n    1: setAction\n  } = useState('');\n  const {\n    0: Content,\n    1: setContent\n  } = useState('');\n  const {\n    0: Designation,\n    1: setDesignation\n  } = useState('');\n  const {\n    0: posotionChangeCategorys,\n    1: setPosotionChangeCategorys\n  } = useState([]);\n  const {\n    0: buttonLoader,\n    1: setBttonLoader\n  } = useState(false);\n  useEffect(() => {\n    let local = JSON.parse(localStorage.getItem('persist:QuestionCloudAdmin'));\n    let localAuth = local && local.auth ? JSON.parse(local.auth) : {};\n\n    if (localAuth && !localAuth.isLoggedIn) {\n      window.location.href = \"/\";\n    }\n  }, [auth]);\n  useEffect(() => {\n    setLoader(true);\n    let ctr = {};\n    ctr._start = currentPage === 1 ? 0 : (currentPage - 1) * pageSizeTotal;\n    ctr._limit = pageSizeTotal;\n    dispatch(getAllAnnouncements(ctr));\n    dispatch(getInactiveAnnouncements(ctr));\n  }, []);\n  useEffect(() => {\n    setLoader(false);\n  }, [allAnnouncements, inactiveAnnouncements]);\n\n  const addModalOnClick = async () => {\n    setLoader(true);\n    setName('');\n    setPosition('');\n    setSelectedHomeCatId('');\n    setImage('');\n    setLoader(false);\n    setShowModal(true);\n  };\n\n  const deleteOneAnnouncements = data => {\n    Modal.confirm({\n      title: 'Confirm',\n      content: 'Do you want to delete this Testimonials.',\n      okText: 'Yes',\n      onOk: () => deleteOneCategory(data),\n      cancelText: 'No'\n    });\n  };\n\n  const deleteOneCategory = async data => {\n    let obj = {\n      \"catId\": [data.testimonials_id]\n    };\n    await TestimonialsRepository.deleteCategory(obj);\n    Modal.success({\n      title: 'Testimonials Deleted Successfully.'\n    });\n    let ctr = {};\n    ctr._start = currentPage === 1 ? 0 : (currentPage - 1) * pageSizeTotal;\n    ctr._limit = pageSizeTotal;\n    dispatch(getAllAnnouncements(ctr));\n    dispatch(getInactiveAnnouncements(ctr));\n  };\n\n  const editModalOnClick = async data => {\n    setLoader(true);\n    setName(data.testimonials_name);\n    setPosition(data.testimonials_pos);\n    setSelectedHomeCatId(data.testimonials_id);\n    setImage(data.testimonials_image);\n    setContent(data.testimonials_content);\n    setDesignation(data.testimonials_dis);\n    setLoader(false);\n    setShowModal(true);\n  };\n\n  const closeModalOnClick = () => {\n    setName('');\n    setPosition('');\n    setSelectedHomeCatId('');\n    setDesignation('');\n    setImage('');\n    setContent('');\n    setErrors({});\n    setShowModal(false);\n  };\n\n  const nameOnChange = name => {\n    let errorObj = _objectSpread({}, errors);\n\n    errorObj['name'] = '';\n    setName(name);\n    setErrors(errorObj);\n  };\n\n  const ContentOnChange = Content => {\n    let errorObj = _objectSpread({}, errors);\n\n    errorObj['Content'] = '';\n    setContent(Content);\n    setErrors(errorObj);\n  };\n\n  const DesignationOnChange = Designation => {\n    let errorObj = _objectSpread({}, errors);\n\n    errorObj['Designation'] = '';\n    setDesignation(Designation);\n    setErrors(errorObj);\n  };\n\n  const positionOnChange = position => {\n    const re = /^[0-9\\b]+$/; //rules\n\n    if (position === \"\" || re.test(position)) {\n      let errorObj = _objectSpread({}, errors);\n\n      errorObj['position'] = '';\n      setPosition(position);\n      setErrors(errorObj);\n    }\n  };\n\n  const addImage = () => {\n    valueRef.current.click();\n  };\n\n  const imageOnChange = async file => {\n    let errorObj = _objectSpread({}, errors);\n\n    setBttonLoader(true);\n    setImage('');\n    const formData = new FormData();\n    formData.append('testimonials', file);\n    let result = await TestimonialsRepository.imageUpload(formData);\n\n    if (result && result.statusCode === 200) {\n      setImage(result.data);\n      setBttonLoader(false);\n    }\n\n    errorObj['CatImage'] = '';\n    setErrors(errorObj);\n  };\n\n  const saveOnClick = () => {\n    if (selectedHomeCatId) {\n      edit();\n    } else {\n      save();\n    }\n  };\n\n  const save = async () => {\n    if (name && position && Content && image) {\n      setLoader(true);\n      let obj = {\n        \"testimonials_image\": image,\n        \"testimonials_name\": name,\n        \"testimonials_dis\": Designation,\n        \"testimonials_pos\": position,\n        \"testimonials_content\": Content\n      };\n\n      try {\n        await TestimonialsRepository.saveTestimonials(obj);\n        notification.success({\n          message: 'Testimonials Added Successfully.'\n        });\n        let ctr = {};\n        ctr._start = currentPage === 1 ? 0 : (currentPage - 1) * pageSizeTotal;\n        ctr._limit = pageSizeTotal;\n        dispatch(getAllAnnouncements(ctr));\n        dispatch(getInactiveAnnouncements(ctr));\n        closeModalOnClick();\n      } catch (e) {\n        notification.error({\n          message: 'Testimonials Added Failed.'\n        });\n      }\n    } else {\n      let errorObj = _objectSpread({}, errors);\n\n      if (!name) errorObj['name'] = \"Please Enter Title\";\n      if (!position) errorObj['position'] = \"Please Enter Position\";\n      if (!image) errorObj['CatImage'] = \"Please Select Image\";\n      setErrors(errorObj);\n    }\n  };\n\n  const edit = async () => {\n    if (name && position && selectedHomeCatId && Content && image) {\n      setLoader(true);\n      let obj = {\n        \"testimonials_id\": selectedHomeCatId,\n        \"testimonials_image\": image,\n        \"testimonials_name\": name,\n        \"testimonials_dis\": Designation,\n        \"testimonials_pos\": position,\n        \"testimonials_content\": Content\n      };\n\n      try {\n        await TestimonialsRepository.editTestimonials(selectedHomeCatId, obj);\n        notification.success({\n          message: 'Testimonials Updated Successfully.'\n        });\n        let ctr = {};\n        ctr._start = currentPage === 1 ? 0 : (currentPage - 1) * pageSizeTotal;\n        ctr._limit = pageSizeTotal;\n        dispatch(getAllAnnouncements(ctr));\n        dispatch(getInactiveAnnouncements(ctr));\n        closeModalOnClick();\n      } catch (e) {\n        notification.error({\n          message: 'Testimonials  Updated Failed.'\n        });\n      }\n    } else {\n      let errorObj = _objectSpread({}, errors);\n\n      if (!name) errorObj['name'] = \"Please Enter Title\";\n      if (!position) errorObj['position'] = \"Please Enter Position\";\n      setErrors(errorObj);\n    }\n  };\n\n  const pageSizeChange = async (page, pageSize) => {\n    setLoader(true);\n    let ctr = {};\n    ctr._start = page === 1 ? 0 : (page - 1) * pageSize;\n    ctr._limit = pageSize;\n\n    if (tab === \"active\") {\n      dispatch(getAllAnnouncements(ctr));\n    } else {\n      dispatch(getInactiveAnnouncements(ctr));\n    }\n\n    setCurrentPage(page);\n    setPageSizeTotal(pageSize);\n  };\n\n  const changeTab = tab => {\n    setLoader(true);\n    let ctr = {};\n    ctr._start = 0;\n    ctr._limit = 10;\n\n    if (tab === \"active\") {\n      dispatch(getAllAnnouncements(ctr));\n    } else {\n      dispatch(getInactiveAnnouncements(ctr));\n    }\n\n    setCurrentPage(1);\n    setPageSizeTotal(10);\n    setSelectedHomeCatIds([]);\n    setSelectAll(false);\n    setAction('');\n    setPosotionChangeCategorys([]);\n    setTab(tab);\n  };\n\n  const onSelectAll = value => {\n    let array = [];\n\n    if (value) {\n      if (tab === 'active') {\n        array = allAnnouncements.map(h => h.cat_id);\n      } else {\n        array = inactiveAnnouncements.map(h => h.cat_id);\n      }\n    }\n\n    setSelectedHomeCatIds(array);\n    setSelectAll(value);\n  };\n\n  const onSelectOne = id => {\n    let array = [...selectedHomeCatIds];\n    let array1 = tab === 'active' ? [...allAnnouncements] : [...inactiveAnnouncements];\n    let index = array.indexOf(id);\n\n    if (index >= 0) {\n      array.splice(index, 1);\n    } else {\n      array.push(id);\n    }\n\n    if (array.length === array1.length) {\n      setSelectAll(true);\n    } else {\n      setSelectAll(false);\n    }\n\n    setSelectedHomeCatIds(array);\n  };\n\n  const mainPositionOnChange = (id, position) => {\n    let array = [...posotionChangeCategorys];\n    const re = /^[0-9\\b]+$/; //rules\n\n    if (position === \"\" || re.test(position)) {\n      let index = array.findIndex(a => a.catId === id);\n\n      if (index >= 0) {\n        array[index]['position'] = position;\n      } else {\n        array.push({\n          catId: id,\n          position: position\n        });\n      }\n\n      setPosotionChangeCategorys(array);\n    }\n  };\n\n  const actionOnChange = action => {\n    setAction(action);\n  };\n\n  const goOnClick = async () => {\n    let selectedHomeCatIdsArr = [...selectedHomeCatIds];\n    let obj = {\n      catId: selectedHomeCatIdsArr\n    };\n\n    if (selectedHomeCatIdsArr && selectedHomeCatIdsArr.length > 0 && action) {\n      setLoader(true);\n\n      if (action === \"active\") {\n        obj['status'] = 'Y';\n        await TestimonialsRepository.inactiveCategory(obj);\n        notification.success({\n          message: 'Testimonials  Updated Successfully.'\n        });\n      }\n\n      if (action === \"inactive\") {\n        obj['status'] = 'N';\n        await TestimonialsRepository.inactiveCategory(obj);\n        notification.success({\n          message: 'Testimonials  Updated Successfully.'\n        });\n      }\n\n      if (action === \"delete\") {\n        await TestimonialsRepository.deleteCategory(obj);\n        notification.success({\n          message: 'Testimonials  Deleted Successfully.'\n        });\n      }\n\n      if (action === \"position\") {\n        let array = [...posotionChangeCategorys];\n        array = array.filter(a => selectedHomeCatIdsArr.indexOf(a.catId) >= 0);\n        await TestimonialsRepository.changePosition({\n          values: array\n        });\n        notification.success({\n          message: 'Testimonials  Updated Successfully.'\n        });\n      }\n\n      setSelectedHomeCatIds([]);\n      setPosotionChangeCategorys([]);\n      let ctr = {};\n      ctr._start = currentPage === 1 ? 0 : (currentPage - 1) * pageSizeTotal;\n      ctr._limit = pageSizeTotal;\n      dispatch(getAllAnnouncements(ctr));\n      dispatch(getInactiveAnnouncements(ctr));\n    } else {\n      if (!action) {\n        Modal.error({\n          title: 'Please Select Action'\n        });\n      } else if (!selectedHomeCatIdsArr.length) {\n        Modal.error({\n          title: 'Please Select One Category'\n        });\n      }\n    }\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 9\n    }\n  }, __jsx(Spin, {\n    spinning: loader,\n    tip: 'Loading...',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 13\n    }\n  }, __jsx(HeaderDashboard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    className: \"dashboard-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"row no-gutters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    id: \"sidebar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 29\n    }\n  }, __jsx(Sidebar, {\n    page: 'Testimonials',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 33\n    }\n  }))), __jsx(\"div\", {\n    className: \"col-md-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    className: \"content content-width\",\n    id: \"style-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 29\n    }\n  }, __jsx(Tabs, {\n    defaultActiveKey: tab,\n    onChange: changeTab,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 33\n    }\n  }, __jsx(TabPane, {\n    tab: `Active ${totalActiveCount}`,\n    key: \"active\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 37\n    }\n  }), __jsx(TabPane, {\n    tab: `Inactive ${totalInactiveCount}`,\n    key: \"inactive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 37\n    }\n  })), __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 33\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 37\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 41\n    }\n  }, __jsx(Select, {\n    onChange: actionOnChange,\n    placeholder: \"Select Action\",\n    className: \"ps-ant-dropdown\",\n    style: {\n      width: 200\n    },\n    value: action,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 45\n    }\n  }, tab === 'active' && __jsx(Option, {\n    value: \"inactive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 70\n    }\n  }, \"Inactive\"), tab === 'inactive' && __jsx(Option, {\n    value: \"active\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 72\n    }\n  }, \"Active\"), __jsx(Option, {\n    value: \"position\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 49\n    }\n  }, \"Position\"), __jsx(Option, {\n    value: \"delete\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 49\n    }\n  }, \"Delete\")))), __jsx(\"div\", {\n    className: \"col-md-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 37\n    }\n  }, __jsx(\"button\", {\n    onClick: goOnClick,\n    style: {\n      backgroundColor: '#cd4040',\n      width: 100,\n      height: 35,\n      color: '#fff',\n      border: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 41\n    }\n  }, \"Go\")), __jsx(\"div\", {\n    className: \"col-md-6 text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 37\n    }\n  }, __jsx(\"button\", {\n    onClick: addModalOnClick,\n    style: {\n      backgroundColor: '#80bc00',\n      width: 100,\n      height: 35,\n      color: '#fff',\n      border: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 41\n    }\n  }, __jsx(\"i\", {\n    className: \"fas fa-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 45\n    }\n  }), \" Add\"))), __jsx(\"div\", {\n    style: {\n      marginTop: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 33\n    }\n  }, __jsx(TableAnnouncements, {\n    allAnnouncements: tab === \"active\" ? allAnnouncements : inactiveAnnouncements,\n    editModalOnClick: editModalOnClick,\n    deleteOneAnnouncements: deleteOneAnnouncements,\n    onSelectAll: onSelectAll,\n    onSelectOne: onSelectOne,\n    selectAll: selectAll,\n    selectedHomeCatIds: selectedHomeCatIds,\n    mainPositionOnChange: mainPositionOnChange,\n    posotionChangeCategorys: posotionChangeCategorys,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 37\n    }\n  })), __jsx(\"div\", {\n    style: totalActiveCount > 0 ? {\n      margin: '10px auto',\n      textAlign: 'right'\n    } : {\n      display: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 33\n    }\n  }, __jsx(Pagination, {\n    total: tab === \"active\" ? totalActiveCount : totalInactiveCount,\n    defaultCurrent: 1,\n    current: currentPage,\n    defaultPageSize: 10,\n    pageSize: pageSizeTotal,\n    pageSizeOptions: ['10', '20', '30'],\n    onChange: pageSizeChange,\n    showSizeChanger: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 37\n    }\n  })))))), __jsx(Modal, {\n    visible: showModal,\n    okText: 'Save',\n    onCancel: closeModalOnClick,\n    title: selectedHomeCatId ? \"Edit Testimonials \" : \"Add New Testimonials \",\n    width: 800,\n    onOk: saveOnClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 17\n    }\n  }, __jsx(Spin, {\n    spinning: loader,\n    tip: 'Loading...',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 29\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 33\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 37\n    }\n  }, \"Content \", __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 52\n    }\n  }, \"*\")), __jsx(\"textarea\", {\n    style: {\n      height: '100px'\n    },\n    className: \"form-control\",\n    type: \"text\",\n    value: Content,\n    placeholder: \"\",\n    onChange: e => ContentOnChange(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 37\n    }\n  }, \" \"), errors['Content'] && __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 41\n    }\n  }, errors['Content'])), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 33\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 37\n    }\n  }, \"Position \", __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 53\n    }\n  }, \"*\")), __jsx(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    value: position,\n    placeholder: \"\",\n    onChange: e => positionOnChange(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 37\n    }\n  }), errors['position'] && __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 41\n    }\n  }, errors['position']))))))));\n};\n\nexport default Home;","map":{"version":3,"sources":["D:/Question_cloud/question_cloud_admin_web_new/pages/announcements/view/index.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","Modal","Button","Checkbox","Spin","notification","Pagination","Tabs","Select","HeaderDashboard","Sidebar","TableAnnouncements","getAllAnnouncements","getInactiveAnnouncements","TestimonialsRepository","Home","props","TabPane","Option","dispatch","valueRef","createRef","auth","allAnnouncements","totalActiveCount","inactiveAnnouncements","totalInactiveCount","Announcements","showModal","setShowModal","name","setName","position","setPosition","image","setImage","selectedHomeCatId","setSelectedHomeCatId","errors","setErrors","loader","setLoader","currentPage","setCurrentPage","pageSizeTotal","setPageSizeTotal","tab","setTab","selectAll","setSelectAll","selectedHomeCatIds","setSelectedHomeCatIds","action","setAction","Content","setContent","Designation","setDesignation","posotionChangeCategorys","setPosotionChangeCategorys","buttonLoader","setBttonLoader","local","JSON","parse","localStorage","getItem","localAuth","isLoggedIn","window","location","href","ctr","_start","_limit","addModalOnClick","deleteOneAnnouncements","data","confirm","title","content","okText","onOk","deleteOneCategory","cancelText","obj","testimonials_id","deleteCategory","success","editModalOnClick","testimonials_name","testimonials_pos","testimonials_image","testimonials_content","testimonials_dis","closeModalOnClick","nameOnChange","errorObj","ContentOnChange","DesignationOnChange","positionOnChange","re","test","addImage","current","click","imageOnChange","file","formData","FormData","append","result","imageUpload","statusCode","saveOnClick","edit","save","saveTestimonials","message","e","error","editTestimonials","pageSizeChange","page","pageSize","changeTab","onSelectAll","value","array","map","h","cat_id","onSelectOne","id","array1","index","indexOf","splice","push","length","mainPositionOnChange","findIndex","a","catId","actionOnChange","goOnClick","selectedHomeCatIdsArr","inactiveCategory","filter","changePosition","values","width","backgroundColor","height","color","border","marginTop","margin","textAlign","display","target"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Modal, Button, Checkbox, Spin, notification, Pagination, Tabs, Select } from 'antd';\r\nimport HeaderDashboard from '../../../components/header/HeaderDashboard';\r\nimport Sidebar from '../../../components/sections/sidebar';\r\nimport TableAnnouncements from '../../../components/tables/Announcements';\r\nimport { getAllAnnouncements, getInactiveAnnouncements } from '../../../store/Announcements/action';\r\nimport TestimonialsRepository from '../../../repositories/TestimonialsRepository';\r\n\r\nconst Home = (props) => {\r\n\r\n    const { TabPane } = Tabs;\r\n    const { Option } = Select;\r\n    const dispatch = useDispatch();\r\n    const valueRef = React.createRef()\r\n    const { auth } = useSelector(({ auth }) => auth);\r\n    const { allAnnouncements, totalActiveCount, inactiveAnnouncements, totalInactiveCount } = useSelector(({ Announcements }) => Announcements);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [name, setName] = useState('');\r\n    const [position, setPosition] = useState('');\r\n    const [image, setImage] = useState('');\r\n    const [selectedHomeCatId, setSelectedHomeCatId] = useState('');\r\n    const [errors, setErrors] = useState({});\r\n    const [loader, setLoader] = useState(false);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [pageSizeTotal, setPageSizeTotal] = useState(10);\r\n    const [tab, setTab] = useState('active');\r\n    const [selectAll, setSelectAll] = useState(false);\r\n    const [selectedHomeCatIds, setSelectedHomeCatIds] = useState([]);\r\n    const [action, setAction] = useState('');\r\n    const [Content, setContent] = useState('');\r\n    const [Designation, setDesignation] = useState('')\r\n    const [posotionChangeCategorys, setPosotionChangeCategorys] = useState([]);\r\n    const [buttonLoader, setBttonLoader] = useState(false);\r\n\r\n    useEffect(() => {\r\n        let local = JSON.parse(localStorage.getItem('persist:QuestionCloudAdmin'));\r\n        let localAuth = local && local.auth ? JSON.parse(local.auth) : {};\r\n        if (localAuth && !localAuth.isLoggedIn) {\r\n            window.location.href = \"/\";\r\n        }\r\n    }, [auth]);\r\n\r\n    useEffect(() => {\r\n        setLoader(true);\r\n        let ctr = {};\r\n        ctr._start = currentPage === 1 ? 0 : ((currentPage - 1) * pageSizeTotal);\r\n        ctr._limit = pageSizeTotal;\r\n        dispatch(getAllAnnouncements(ctr));\r\n        dispatch(getInactiveAnnouncements(ctr));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setLoader(false);\r\n    }, [allAnnouncements, inactiveAnnouncements]);\r\n\r\n    const addModalOnClick = async () => {\r\n        setLoader(true);\r\n        setName('');\r\n        setPosition('');\r\n        setSelectedHomeCatId('');\r\n        setImage('');\r\n        setLoader(false);\r\n        setShowModal(true);\r\n    }\r\n\r\n    const deleteOneAnnouncements = (data) => {\r\n        Modal.confirm({\r\n            title: 'Confirm',\r\n            content: 'Do you want to delete this Testimonials.',\r\n            okText: 'Yes',\r\n            onOk: () => deleteOneCategory(data),\r\n            cancelText: 'No',\r\n        });\r\n    }\r\n\r\n    const deleteOneCategory = async (data) => {\r\n        let obj = { \"catId\": [data.testimonials_id] };\r\n        await TestimonialsRepository.deleteCategory(obj);\r\n        Modal.success({\r\n            title: 'Testimonials Deleted Successfully.'\r\n        });\r\n        let ctr = {};\r\n        ctr._start = currentPage === 1 ? 0 : ((currentPage - 1) * pageSizeTotal);\r\n        ctr._limit = pageSizeTotal;\r\n        dispatch(getAllAnnouncements(ctr));\r\n        dispatch(getInactiveAnnouncements(ctr));\r\n    }\r\n\r\n    const editModalOnClick = async (data) => {\r\n        setLoader(true);\r\n        setName(data.testimonials_name);\r\n        setPosition(data.testimonials_pos);\r\n        setSelectedHomeCatId(data.testimonials_id);\r\n        setImage(data.testimonials_image);\r\n        setContent(data.testimonials_content);\r\n        setDesignation(data.testimonials_dis)\r\n        setLoader(false);\r\n        setShowModal(true);\r\n    }\r\n\r\n    const closeModalOnClick = () => {\r\n        setName('');\r\n        setPosition('');\r\n        setSelectedHomeCatId('');\r\n        setDesignation('')\r\n        setImage('');\r\n        setContent('');\r\n        setErrors({});\r\n        setShowModal(false);\r\n    }\r\n\r\n    const nameOnChange = (name) => {\r\n        let errorObj = { ...errors };\r\n        errorObj['name'] = '';\r\n        setName(name);\r\n        setErrors(errorObj);\r\n    }\r\n    const ContentOnChange = (Content) => {\r\n        let errorObj = { ...errors };\r\n        errorObj['Content'] = '';\r\n        setContent(Content);\r\n        setErrors(errorObj);\r\n    }\r\n    const DesignationOnChange = (Designation) => {\r\n        let errorObj = { ...errors };\r\n        errorObj['Designation'] = '';\r\n        setDesignation(Designation);\r\n        setErrors(errorObj);\r\n    }\r\n\r\n    const positionOnChange = (position) => {\r\n        const re = /^[0-9\\b]+$/; //rules\r\n        if (position === \"\" || re.test(position)) {\r\n            let errorObj = { ...errors };\r\n            errorObj['position'] = '';\r\n            setPosition(position);\r\n            setErrors(errorObj);\r\n        }\r\n    }\r\n\r\n    const addImage = () => {\r\n        valueRef.current.click();\r\n    }\r\n\r\n    const imageOnChange = async (file) => {\r\n        let errorObj = { ...errors };\r\n        setBttonLoader(true);\r\n        setImage('');\r\n        const formData = new FormData();\r\n        formData.append('testimonials', file);\r\n        let result = await TestimonialsRepository.imageUpload(formData);\r\n        if (result && result.statusCode === 200) {\r\n            setImage(result.data);\r\n            setBttonLoader(false);\r\n        }\r\n        errorObj['CatImage'] = '';\r\n        setErrors(errorObj);\r\n    }\r\n\r\n\r\n    const saveOnClick = () => {\r\n        if (selectedHomeCatId) {\r\n            edit();\r\n        } else {\r\n            save();\r\n        }\r\n    }\r\n\r\n    const save = async () => {\r\n        if (name && position && Content && image) {\r\n            setLoader(true);\r\n            let obj = {\r\n                \"testimonials_image\": image,\r\n                \"testimonials_name\": name,\r\n                \"testimonials_dis\": Designation,\r\n                \"testimonials_pos\": position,\r\n                \"testimonials_content\": Content\r\n            }\r\n            try {\r\n            await TestimonialsRepository.saveTestimonials(obj);\r\n               notification.success({\r\n                    message: 'Testimonials Added Successfully.'\r\n                })\r\n                let ctr = {};\r\n                ctr._start = currentPage === 1 ? 0 : ((currentPage - 1) * pageSizeTotal);\r\n                ctr._limit = pageSizeTotal;\r\n                dispatch(getAllAnnouncements(ctr));\r\n                dispatch(getInactiveAnnouncements(ctr));\r\n                closeModalOnClick();\r\n            } catch (e) {\r\n                notification.error({\r\n                    message: 'Testimonials Added Failed.'\r\n                });\r\n            }\r\n        } else {\r\n            let errorObj = { ...errors };\r\n            if (!name) errorObj['name'] = \"Please Enter Title\";\r\n            if (!position) errorObj['position'] = \"Please Enter Position\";\r\n            if (!image) errorObj['CatImage'] = \"Please Select Image\";\r\n            setErrors(errorObj);\r\n        }\r\n    }\r\n\r\n    const edit = async () => {\r\n        if (name && position && selectedHomeCatId && Content && image) {\r\n            setLoader(true);\r\n            let obj = {\r\n                \"testimonials_id\": selectedHomeCatId,\r\n                \"testimonials_image\": image,\r\n                \"testimonials_name\": name,\r\n                \"testimonials_dis\": Designation,\r\n                \"testimonials_pos\": position,\r\n                \"testimonials_content\": Content\r\n            }\r\n            try {\r\n                await TestimonialsRepository.editTestimonials(selectedHomeCatId, obj);\r\n                notification.success({\r\n                    message: 'Testimonials Updated Successfully.'\r\n                });\r\n                let ctr = {};\r\n                ctr._start = currentPage === 1 ? 0 : ((currentPage - 1) * pageSizeTotal);\r\n                ctr._limit = pageSizeTotal;\r\n                dispatch(getAllAnnouncements(ctr));\r\n                dispatch(getInactiveAnnouncements(ctr));\r\n                closeModalOnClick();\r\n            } catch (e) {\r\n                notification.error({\r\n                    message: 'Testimonials  Updated Failed.'\r\n                });\r\n            }\r\n        } else {\r\n            let errorObj = { ...errors };\r\n            if (!name) errorObj['name'] = \"Please Enter Title\";\r\n            if (!position) errorObj['position'] = \"Please Enter Position\";\r\n            setErrors(errorObj);\r\n        }\r\n    }\r\n\r\n    const pageSizeChange = async (page, pageSize) => {\r\n        setLoader(true);\r\n        let ctr = {};\r\n        ctr._start = page === 1 ? 0 : ((page - 1) * pageSize);\r\n        ctr._limit = pageSize;\r\n        if (tab === \"active\") {\r\n            dispatch(getAllAnnouncements(ctr));\r\n        } else {\r\n            dispatch(getInactiveAnnouncements(ctr));\r\n        }\r\n        setCurrentPage(page);\r\n        setPageSizeTotal(pageSize);\r\n    }\r\n\r\n    const changeTab = (tab) => {\r\n        setLoader(true);\r\n        let ctr = {};\r\n        ctr._start = 0;\r\n        ctr._limit = 10;\r\n        if (tab === \"active\") {\r\n            dispatch(getAllAnnouncements(ctr));\r\n        } else {\r\n            dispatch(getInactiveAnnouncements(ctr));\r\n        }\r\n        setCurrentPage(1);\r\n        setPageSizeTotal(10);\r\n        setSelectedHomeCatIds([]);\r\n        setSelectAll(false);\r\n        setAction('');\r\n        setPosotionChangeCategorys([]);\r\n        setTab(tab);\r\n    }\r\n\r\n    const onSelectAll = (value) => {\r\n        let array = [];\r\n        if (value) {\r\n            if (tab === 'active') {\r\n                array = allAnnouncements.map(h => h.cat_id);\r\n            } else {\r\n                array = inactiveAnnouncements.map(h => h.cat_id);\r\n            }\r\n        }\r\n        setSelectedHomeCatIds(array);\r\n        setSelectAll(value);\r\n    }\r\n\r\n    const onSelectOne = (id) => {\r\n        let array = [...selectedHomeCatIds];\r\n        let array1 = tab === 'active' ? [...allAnnouncements] : [...inactiveAnnouncements];\r\n        let index = array.indexOf(id);\r\n        if (index >= 0) {\r\n            array.splice(index, 1);\r\n        } else {\r\n            array.push(id);\r\n        }\r\n        if (array.length === array1.length) {\r\n            setSelectAll(true);\r\n        } else {\r\n            setSelectAll(false);\r\n        }\r\n        setSelectedHomeCatIds(array);\r\n    }\r\n\r\n    const mainPositionOnChange = (id, position) => {\r\n        let array = [...posotionChangeCategorys];\r\n        const re = /^[0-9\\b]+$/; //rules\r\n        if (position === \"\" || re.test(position)) {\r\n            let index = array.findIndex(a => a.catId === id);\r\n            if (index >= 0) {\r\n                array[index]['position'] = position;\r\n            } else {\r\n                array.push({\r\n                    catId: id,\r\n                    position: position\r\n                });\r\n            }\r\n            setPosotionChangeCategorys(array);\r\n        }\r\n    }\r\n\r\n    const actionOnChange = (action) => {\r\n        setAction(action);\r\n    }\r\n\r\n    const goOnClick = async () => {\r\n        let selectedHomeCatIdsArr = [...selectedHomeCatIds];\r\n        let obj = {\r\n            catId: selectedHomeCatIdsArr\r\n        };\r\n        if (selectedHomeCatIdsArr && selectedHomeCatIdsArr.length > 0 && action) {\r\n            setLoader(true);\r\n            if (action === \"active\") {\r\n                obj['status'] = 'Y';\r\n                await TestimonialsRepository.inactiveCategory(obj);\r\n                notification.success({\r\n                    message: 'Testimonials  Updated Successfully.'\r\n                });\r\n            }\r\n            if (action === \"inactive\") {\r\n                obj['status'] = 'N';\r\n                await TestimonialsRepository.inactiveCategory(obj);\r\n                notification.success({\r\n                    message: 'Testimonials  Updated Successfully.'\r\n                });\r\n            }\r\n            if (action === \"delete\") {\r\n                await TestimonialsRepository.deleteCategory(obj);\r\n                notification.success({\r\n                    message: 'Testimonials  Deleted Successfully.'\r\n                });\r\n            }\r\n            if (action === \"position\") {\r\n                let array = [...posotionChangeCategorys];\r\n                array = array.filter(a => selectedHomeCatIdsArr.indexOf(a.catId) >= 0);\r\n                await TestimonialsRepository.changePosition({ values: array });\r\n                notification.success({\r\n                    message: 'Testimonials  Updated Successfully.'\r\n                });\r\n            }\r\n            setSelectedHomeCatIds([]);\r\n            setPosotionChangeCategorys([]);\r\n            let ctr = {};\r\n            ctr._start = currentPage === 1 ? 0 : ((currentPage - 1) * pageSizeTotal);\r\n            ctr._limit = pageSizeTotal;\r\n            dispatch(getAllAnnouncements(ctr));\r\n            dispatch(getInactiveAnnouncements(ctr));\r\n        } else {\r\n            if (!action) {\r\n                Modal.error({\r\n                    title: 'Please Select Action'\r\n                });\r\n            } else if (!selectedHomeCatIdsArr.length) {\r\n                Modal.error({\r\n                    title: 'Please Select One Category'\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Spin spinning={loader} tip={'Loading...'}>\r\n                <HeaderDashboard />\r\n                <div className=\"dashboard-container\">\r\n                    <div className=\"row no-gutters\">\r\n                        <div className=\"col-md-2\">\r\n                            <div id=\"sidebar\">\r\n                                <Sidebar page={'Testimonials'} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-10\">\r\n                            <div className=\"content content-width\" id=\"style-2\">\r\n                                <Tabs defaultActiveKey={tab} onChange={changeTab}>\r\n                                    <TabPane tab={`Active ${totalActiveCount}`} key=\"active\">\r\n                                    </TabPane>\r\n                                    <TabPane tab={`Inactive ${totalInactiveCount}`} key=\"inactive\">\r\n                                    </TabPane>\r\n                                </Tabs>\r\n                                <div className='row'>\r\n                                    <div className=\"col-md-4\">\r\n                                        <div className=\"form-group\">\r\n                                            <Select\r\n                                                onChange={actionOnChange}\r\n                                                placeholder=\"Select Action\"\r\n                                                className=\"ps-ant-dropdown\"\r\n                                                style={{ width: 200 }}\r\n                                                value={action}\r\n                                            >\r\n                                                {tab === 'active' && <Option value=\"inactive\">Inactive</Option>}\r\n                                                {tab === 'inactive' && <Option value=\"active\">Active</Option>}\r\n                                                <Option value=\"position\">Position</Option>\r\n                                                <Option value=\"delete\">Delete</Option>\r\n                                            </Select>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-2\">\r\n                                        <button onClick={goOnClick} style={{ backgroundColor: '#cd4040', width: 100, height: 35, color: '#fff', border: 'none' }}>\r\n                                            Go\r\n                                        </button>\r\n                                    </div>\r\n                                    <div className=\"col-md-6 text-right\">\r\n                                        <button onClick={addModalOnClick} style={{ backgroundColor: '#80bc00', width: 100, height: 35, color: '#fff', border: 'none' }}>\r\n                                            <i className=\"fas fa-plus\" /> Add\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                                <div style={{ marginTop: 20 }}>\r\n                                    <TableAnnouncements\r\n                                        allAnnouncements={tab === \"active\" ? allAnnouncements : inactiveAnnouncements}\r\n                                        editModalOnClick={editModalOnClick}\r\n                                        deleteOneAnnouncements={deleteOneAnnouncements}\r\n                                        onSelectAll={onSelectAll}\r\n                                        onSelectOne={onSelectOne}\r\n                                        selectAll={selectAll}\r\n                                        selectedHomeCatIds={selectedHomeCatIds}\r\n                                        mainPositionOnChange={mainPositionOnChange}\r\n                                        posotionChangeCategorys={posotionChangeCategorys}\r\n                                    />\r\n                                </div>\r\n                                <div style={totalActiveCount > 0 ? { margin: '10px auto', textAlign: 'right' } : { display: 'none' }}>\r\n                                    <Pagination\r\n                                        total={tab === \"active\" ? totalActiveCount : totalInactiveCount}\r\n                                        defaultCurrent={1}\r\n                                        current={currentPage}\r\n                                        defaultPageSize={10}\r\n                                        pageSize={pageSizeTotal}\r\n                                        pageSizeOptions={['10', '20', '30']}\r\n                                        onChange={pageSizeChange}\r\n                                        showSizeChanger={true}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Modal\r\n                    visible={showModal}\r\n                    okText={'Save'}\r\n                    onCancel={closeModalOnClick}\r\n                    title={selectedHomeCatId ? \"Edit Testimonials \" : \"Add New Testimonials \"}\r\n                    width={800}\r\n                    onOk={saveOnClick}\r\n                >\r\n                    <Spin spinning={loader} tip={'Loading...'}>\r\n                        <div className='row'>\r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Content <span style={{ color: 'red' }}>*</span></label>\r\n                                    <textarea style={{ height: '100px' }}\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        value={Content}\r\n                                        placeholder=\"\"\r\n                                        onChange={(e) => ContentOnChange(e.target.value)}\r\n                                    > </textarea>\r\n                                    {errors['Content'] &&\r\n                                        <span style={{ color: 'red' }}>{errors['Content']}</span>\r\n                                    }\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Position <span style={{ color: 'red' }}>*</span></label>\r\n                                    <input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        value={position}\r\n                                        placeholder=\"\"\r\n                                        onChange={(e) => positionOnChange(e.target.value)}\r\n                                    />\r\n                                    {errors['position'] &&\r\n                                        <span style={{ color: 'red' }}>{errors['position']}</span>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </Spin>\r\n                </Modal>\r\n            </Spin>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}