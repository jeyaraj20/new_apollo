{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Repository, { apiUrl } from './Repository';\n\nclass AuthRepository {\n  constructor(callback) {\n    _defineProperty(this, \"apiEndpoint\", `${apiUrl}/coupon`);\n\n    this.callback = callback;\n  } //     // getAlldashboardCategory\n  //     async getAllCoupon(status) {\n  //         console.log(\"1234\",payload)\n  //         const reponse = await Repository.get(`${apiUrl}/coupon/status/${'Y'}?_start=${payload._start}&_limit=${payload._limit}`)\n  //             .then(response => {\n  //                 return response.data;\n  //             })\n  //             .catch(error => ({ error: JSON.stringify(error) }));\n  //         return reponse;\n  //     }\n  //      //getInactivedashboardCategory\n  //     async getInactiveCoupon(status) {\n  //         const reponse = await Repository.get(`${apiUrl}/coupon/status/${'N'}?_start=${payload._start}&_limit=${payload._limit}`)\n  //             .then(response => {\n  //                 return response.data;\n  //             })\n  //             .catch(error => ({ error: JSON.stringify(error) }));\n  //         return reponse;\n  //     }\n  //     //savedashboardCategory\n  //     async saveCoupon(formdata) {\n  //         console.log(\"12345689\")\n  //         const reponse = await Repository.post(`${apiUrl}/coupon/`, formdata)\n  //             .then(response => {\n  //                 return response.data;\n  //             })\n  //             .catch(error => ({ error: JSON.stringify(error) }));\n  //         return reponse;\n  //     }\n  //     // editdashboardCategory\n  //     async updateCoupon(categoryId, formdata) {\n  //         console.log(\"12345689\")\n  //         const reponse = await Repository.put(`${apiUrl}/coupon/id/${categoryId}`, formdata)\n  //             .then(response => {\n  //                 return response.data;\n  //             })\n  //             .catch(error => ({ error: JSON.stringify(error) }));\n  //         return reponse;\n  //     }\n  //     // inactiveCategory\n  //     async changeStatus(data) {\n  //         const reponse = await Repository.put(`${apiUrl}/coupon/status`, data)\n  //             .then(response => {\n  //                 return response.data;\n  //             })\n  //             .catch(error => ({ error: JSON.stringify(error) }));\n  //         return reponse;\n  //     }\n  //    // deleteCategory\n  //     async deleteCoupon(data) {\n  //         const reponse = await Repository.delete(`${apiUrl}/coupon/`, {\n  //             headers: {\n  //                 \"Content-Type\": \"application/json\"\n  //             },\n  //             data: data\n  //         }).then(response => {\n  //             return response.data;\n  //         }).catch(error => ({ error: JSON.stringify(error) }));;\n  //         return reponse;\n  //     }\n  //   //getAllCoupon\n  //     async getAlldurations(payload) {\n  //         console.log(\"1234\",payload)\n  //         const reponse = await Repository.get(`${apiUrl}/coupon/duration/?_start=${payload._start}&_limit=${payload._limit}`)\n  //             .then(response => {\n  //                 return response.data;\n  //             })\n  //             .catch(error => ({ error: JSON.stringify(error) }));\n  //         return reponse;\n  //     }\n\n\n  async getAllCoupon(status) {\n    return await http.get(apiEndpoint + '/status/' + status);\n  }\n\n  async saveCoupon(data) {\n    return await http.post(apiEndpoint + '/', data);\n  }\n\n  async updateCoupon(id, data) {\n    return http.put(apiEndpoint + '/id/' + id, data);\n  }\n\n  async changeStatus(idArr) {\n    return http.put(apiEndpoint + '/status', idArr);\n  }\n\n  async getAlldurations() {\n    return http.get(apiEndpoint + '/duration');\n  }\n\n}\n\nexport default new AuthRepository();","map":{"version":3,"sources":["D:/Question_cloud/question_cloud_admin_web_new/repositories/CouponRepository.js"],"names":["Repository","apiUrl","AuthRepository","constructor","callback","getAllCoupon","status","http","get","apiEndpoint","saveCoupon","data","post","updateCoupon","id","put","changeStatus","idArr","getAlldurations"],"mappings":";;AAGC,OAAOA,UAAP,IAAqBC,MAArB,QAAmC,cAAnC;;AAED,MAAMC,cAAN,CAAqB;AACjBC,EAAAA,WAAW,CAACC,QAAD,EAAW;AAAA,yCA0EV,GAAEH,MAAO,SA1EC;;AAClB,SAAKG,QAAL,GAAgBA,QAAhB;AACH,GAHgB,CAIrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGkB,QAAZC,YAAY,CAACC,MAAD,EAAS;AACvB,WAAQ,MAAMC,IAAI,CAACC,GAAL,CAASC,WAAW,GAAG,UAAd,GAA2BH,MAApC,CAAd;AACH;;AACe,QAAVI,UAAU,CAACC,IAAD,EAAO;AACnB,WAAQ,MAAOJ,IAAI,CAACK,IAAL,CAAUH,WAAW,GAAG,GAAxB,EAA6BE,IAA7B,CAAf;AACH;;AAEiB,QAAZE,YAAY,CAACC,EAAD,EAAKH,IAAL,EAAW;AACzB,WAAOJ,IAAI,CAACQ,GAAL,CAASN,WAAW,GAAG,MAAd,GAAuBK,EAAhC,EAAoCH,IAApC,CAAP;AACH;;AAEiB,QAAZK,YAAY,CAACC,KAAD,EAAQ;AACtB,WAAOV,IAAI,CAACQ,GAAL,CAASN,WAAW,GAAG,SAAvB,EAAkCQ,KAAlC,CAAP;AACH;;AAEoB,QAAfC,eAAe,GAAG;AACpB,WAAOX,IAAI,CAACC,GAAL,CAASC,WAAW,GAAG,WAAvB,CAAP;AACH;;AA9FoB;;AAkGrB,eAAe,IAAIP,cAAJ,EAAf","sourcesContent":["\r\n\r\n\r\n import Repository, { apiUrl } from './Repository';\r\n\r\nclass AuthRepository {\r\n    constructor(callback) {\r\n        this.callback = callback;\r\n    }\r\n//     // getAlldashboardCategory\r\n//     async getAllCoupon(status) {\r\n//         console.log(\"1234\",payload)\r\n//         const reponse = await Repository.get(`${apiUrl}/coupon/status/${'Y'}?_start=${payload._start}&_limit=${payload._limit}`)\r\n//             .then(response => {\r\n//                 return response.data;\r\n//             })\r\n//             .catch(error => ({ error: JSON.stringify(error) }));\r\n//         return reponse;\r\n//     }\r\n//      //getInactivedashboardCategory\r\n//     async getInactiveCoupon(status) {\r\n//         const reponse = await Repository.get(`${apiUrl}/coupon/status/${'N'}?_start=${payload._start}&_limit=${payload._limit}`)\r\n//             .then(response => {\r\n//                 return response.data;\r\n//             })\r\n        \r\n//             .catch(error => ({ error: JSON.stringify(error) }));\r\n//         return reponse;\r\n//     }\r\n//     //savedashboardCategory\r\n//     async saveCoupon(formdata) {\r\n//         console.log(\"12345689\")\r\n//         const reponse = await Repository.post(`${apiUrl}/coupon/`, formdata)\r\n//             .then(response => {\r\n//                 return response.data;\r\n//             })\r\n//             .catch(error => ({ error: JSON.stringify(error) }));\r\n//         return reponse;\r\n//     }\r\n//     // editdashboardCategory\r\n//     async updateCoupon(categoryId, formdata) {\r\n//         console.log(\"12345689\")\r\n//         const reponse = await Repository.put(`${apiUrl}/coupon/id/${categoryId}`, formdata)\r\n//             .then(response => {\r\n//                 return response.data;\r\n//             })\r\n//             .catch(error => ({ error: JSON.stringify(error) }));\r\n//         return reponse;\r\n//     }\r\n//     // inactiveCategory\r\n//     async changeStatus(data) {\r\n//         const reponse = await Repository.put(`${apiUrl}/coupon/status`, data)\r\n//             .then(response => {\r\n//                 return response.data;\r\n//             })\r\n//             .catch(error => ({ error: JSON.stringify(error) }));\r\n//         return reponse;\r\n//     }\r\n//    // deleteCategory\r\n//     async deleteCoupon(data) {\r\n//         const reponse = await Repository.delete(`${apiUrl}/coupon/`, {\r\n//             headers: {\r\n//                 \"Content-Type\": \"application/json\"\r\n//             },\r\n//             data: data\r\n//         }).then(response => {\r\n//             return response.data;\r\n//         }).catch(error => ({ error: JSON.stringify(error) }));;\r\n//         return reponse;\r\n//     }\r\n//   //getAllCoupon\r\n//     async getAlldurations(payload) {\r\n//         console.log(\"1234\",payload)\r\n//         const reponse = await Repository.get(`${apiUrl}/coupon/duration/?_start=${payload._start}&_limit=${payload._limit}`)\r\n//             .then(response => {\r\n//                 return response.data;\r\n//             })\r\n//             .catch(error => ({ error: JSON.stringify(error) }));\r\n//         return reponse;\r\n//     }\r\n apiEndpoint = `${apiUrl}/coupon`;\r\n\r\nasync getAllCoupon(status) {\r\n    return  await http.get(apiEndpoint + '/status/' + status);\r\n}\r\nasync saveCoupon(data) {\r\n    return  await  http.post(apiEndpoint + '/', data);\r\n}\r\n\r\nasync updateCoupon(id, data) {\r\n    return http.put(apiEndpoint + '/id/' + id, data);\r\n}\r\n\r\nasync changeStatus(idArr) {\r\n    return http.put(apiEndpoint + '/status', idArr);\r\n}\r\n\r\nasync getAlldurations() {\r\n    return http.get(apiEndpoint + '/duration');\r\n}\r\n\r\n}\r\n\r\nexport default new AuthRepository();\r\n"]},"metadata":{},"sourceType":"module"}