{"ast":null,"code":"var _jsxFileName = \"D:\\\\Question_cloud\\\\question_cloud_admin_web_new\\\\pages\\\\changepassword\\\\view\\\\index.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nconst ChangePasswordForm = props => {\n  const [showMessage, setShowMessage] = useState(false);\n  const [alertMessage, setAlertMessage] = useState(\"\");\n  const [userName, setUserName] = useState(\"\");\n  const [userType, setUserType] = useState(\"\");\n  const [userLoginType, setUserLoginType] = useState(\"\");\n  const [oldPassword, setOldPassword] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [loader, setLoader] = useState(false);\n  const [errors, setErrors] = useState({}); // useEffect(() => {\n  //     let local = JSON.parse(localStorage.getItem('persist:QuestionCloudAdmin'));\n  //     let localAuth = local && local.auth ? JSON.parse(local.auth) : {};\n  //     if (localAuth && !localAuth.isLoggedIn) {\n  //         window.location.href = \"/\";\n  //     }\n  // }, [auth]);\n\n  __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 1\n    }\n  }, __jsx(Spin, {\n    spinning: loader,\n    tip: 'Loading...',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 1\n    }\n  }, __jsx(HeaderDashboard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }), __jsx(\"div\", {\n    className: \"dashboard-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"row no-gutters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    id: \"sidebar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, __jsx(Sidebar, {\n    page: 'Change Password',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  }))), __jsx(\"div\", {\n    className: \"col-md-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"content content-width\",\n    id: \"style-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    style: {\n      marginTop: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }, __jsx(TableCity, {\n    allCity: tab === \"active\" ? allCity : inactiveCity,\n    editModalOnClick: editModalOnClick,\n    onSelectAll: onSelectAll,\n    onSelectOne: onSelectOne,\n    selectAll: selectAll,\n    selectedHomeCatIds: selectedHomeCatIds,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 25\n    }\n  })), __jsx(\"div\", {\n    style: totalActiveCount > 0 ? {\n      margin: '10px auto',\n      textAlign: 'right'\n    } : {\n      display: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, __jsx(Pagination, {\n    total: tab === \"active\" ? totalActiveCount : totalInactiveCount,\n    defaultCurrent: 1,\n    current: currentPage,\n    defaultPageSize: 10,\n    pageSize: pageSizeTotal,\n    pageSizeOptions: ['10', '20', '30'],\n    onChange: pageSizeChange,\n    showSizeChanger: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }\n  })))))), __jsx(Modal, {\n    visible: showModal,\n    okText: 'Save',\n    onCancel: closeModalOnClick,\n    title: selectedHomeCatId ? \"Edit Announcements \" : \"Add New Announcements \",\n    width: 800,\n    onOk: saveOnClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, __jsx(Spin, {\n    spinning: loader,\n    tip: 'Loading...',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }\n  }, \"Country \", __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 40\n    }\n  }, \"*\")), __jsx(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    value: Country,\n    placeholder: \"\",\n    onChange: e => CountryOnChange(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 25\n    }\n  }), errors['Country'] && __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 29\n    }\n  }, errors['Country'])), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  }, \"statename \", __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 42\n    }\n  }, \"*\")), __jsx(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    value: statename,\n    placeholder: \"\",\n    onChange: e => statenameOnChange(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }\n  }), errors['statename'] && __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 29\n    }\n  }, errors['statename'])), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 25\n    }\n  }, \"countrycode \", __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 44\n    }\n  }, \"*\")), __jsx(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    value: countrycode,\n    placeholder: \"\",\n    onChange: e => countrycodeOnChange(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    }\n  }), errors['countrycode'] && __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 29\n    }\n  }, errors['countrycode']))))))));\n};","map":{"version":3,"sources":["D:/Question_cloud/question_cloud_admin_web_new/pages/changepassword/view/index.jsx"],"names":["ChangePasswordForm","props","showMessage","setShowMessage","useState","alertMessage","setAlertMessage","userName","setUserName","userType","setUserType","userLoginType","setUserLoginType","oldPassword","setOldPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","loader","setLoader","errors","setErrors","marginTop","tab","allCity","inactiveCity","editModalOnClick","onSelectAll","onSelectOne","selectAll","selectedHomeCatIds","totalActiveCount","margin","textAlign","display","totalInactiveCount","currentPage","pageSizeTotal","pageSizeChange","showModal","closeModalOnClick","selectedHomeCatId","saveOnClick","color","Country","e","CountryOnChange","target","value","statename","statenameOnChange","countrycode","countrycodeOnChange"],"mappings":"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","sourcesContent":["const ChangePasswordForm = (props) => {\r\n    const [showMessage, setShowMessage] = useState(false);\r\n    const [alertMessage, setAlertMessage] = useState(\"\");\r\n    const [userName, setUserName] = useState(\"\");\r\n    const [userType, setUserType] = useState(\"\");\r\n    const [userLoginType, setUserLoginType] = useState(\"\");\r\n    const [oldPassword, setOldPassword] = useState(\"\");\r\n    const [newPassword, setNewPassword] = useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n    const [loader, setLoader] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n  \r\n// useEffect(() => {\r\n//     let local = JSON.parse(localStorage.getItem('persist:QuestionCloudAdmin'));\r\n//     let localAuth = local && local.auth ? JSON.parse(local.auth) : {};\r\n//     if (localAuth && !localAuth.isLoggedIn) {\r\n//         window.location.href = \"/\";\r\n//     }\r\n// }, [auth]);\r\n\r\n<div>\r\n<Spin spinning={loader} tip={'Loading...'}>\r\n    <HeaderDashboard />\r\n    <div className=\"dashboard-container\">\r\n        <div className=\"row no-gutters\">\r\n            <div className=\"col-md-2\">\r\n                <div id=\"sidebar\">\r\n                    <Sidebar page={'Change Password'} />\r\n                </div>\r\n            </div>\r\n            <div className=\"col-md-10\">\r\n                <div className=\"content content-width\" id=\"style-2\">\r\n                    <div style={{ marginTop: 20 }}>\r\n                        <TableCity\r\n                            allCity={tab === \"active\" ? allCity : inactiveCity}\r\n                            editModalOnClick={editModalOnClick}\r\n                            onSelectAll={onSelectAll}\r\n                            onSelectOne={onSelectOne}\r\n                            selectAll={selectAll}\r\n                            selectedHomeCatIds={selectedHomeCatIds}\r\n                        />\r\n                    </div>\r\n                    <div style={totalActiveCount > 0 ? { margin: '10px auto', textAlign: 'right' } : { display: 'none' }}>\r\n                        <Pagination\r\n                            total={tab === \"active\" ? totalActiveCount : totalInactiveCount}\r\n                            defaultCurrent={1}\r\n                            current={currentPage}\r\n                            defaultPageSize={10}\r\n                            pageSize={pageSizeTotal}\r\n                            pageSizeOptions={['10', '20', '30']}\r\n                            onChange={pageSizeChange}\r\n                            showSizeChanger={true}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <Modal\r\n        visible={showModal}\r\n        okText={'Save'}\r\n        onCancel={closeModalOnClick}\r\n        title={selectedHomeCatId ? \"Edit Announcements \" : \"Add New Announcements \"}\r\n        width={800}\r\n        onOk={saveOnClick}\r\n    >\r\n        <Spin spinning={loader} tip={'Loading...'}>\r\n            <div className='row'>\r\n                <div className=\"col-md-12\">\r\n                    <div className=\"form-group\">\r\n                        <label>Country <span style={{ color: 'red' }}>*</span></label>\r\n                        <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            value={Country}\r\n                            placeholder=\"\"\r\n                            onChange={(e) => CountryOnChange(e.target.value)}\r\n                        />\r\n                        {errors['Country'] &&\r\n                            <span style={{ color: 'red' }}>{errors['Country']}</span>\r\n                        }\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>statename <span style={{ color: 'red' }}>*</span></label>\r\n                        <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            value={statename}\r\n                            placeholder=\"\"\r\n                            onChange={(e) => statenameOnChange(e.target.value)}\r\n                        />\r\n                        {errors['statename'] &&\r\n                            <span style={{ color: 'red' }}>{errors['statename']}</span>\r\n                        }\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>countrycode <span style={{ color: 'red' }}>*</span></label>\r\n                        <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            value={countrycode}\r\n                            placeholder=\"\"\r\n                            onChange={(e) => countrycodeOnChange(e.target.value)}\r\n                        />\r\n                        {errors['countrycode'] &&\r\n                            <span style={{ color: 'red' }}>{errors['countrycode']}</span>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </Spin>\r\n    </Modal>\r\n</Spin>\r\n</div>\r\n}"]},"metadata":{},"sourceType":"script"}