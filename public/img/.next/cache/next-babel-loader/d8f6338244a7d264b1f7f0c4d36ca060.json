{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(getAllTestimonialsSaga),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(getInactiveTestimonialsSaga),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport { all, put, call, takeEvery } from 'redux-saga/effects';\nimport { actionTypes, getAllTestimonialsSuccess, getInactiveTestimonialsSuccess } from './action';\nimport TestimonialsRepository from '../../repositories/TestimonialsRepository';\n\nfunction getAllTestimonialsSaga(_ref) {\n  var payload, data;\n  return _regeneratorRuntime.wrap(function getAllTestimonialsSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          payload = _ref.payload;\n          console.log('11');\n          _context.prev = 2;\n          _context.next = 5;\n          return call(TestimonialsRepository.getAllTestimonials, payload);\n\n        case 5:\n          data = _context.sent;\n          console.log(data, '1111');\n          _context.next = 9;\n          return put(getAllTestimonialsSuccess(data));\n\n        case 9:\n          _context.next = 15;\n          break;\n\n        case 11:\n          _context.prev = 11;\n          _context.t0 = _context[\"catch\"](2);\n          _context.next = 15;\n          return put(getAllTestimonialsSuccess(null));\n\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[2, 11]]);\n}\n\nfunction getInactiveTestimonialsSaga(_ref2) {\n  var payload, data;\n  return _regeneratorRuntime.wrap(function getInactiveTestimonialsSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          payload = _ref2.payload;\n          _context2.prev = 1;\n          _context2.next = 4;\n          return call(TestimonialsRepository.getInactiveTestimonials, payload);\n\n        case 4:\n          data = _context2.sent;\n          _context2.next = 7;\n          return put(getInactiveTestimonialsSuccess(data));\n\n        case 7:\n          _context2.next = 13;\n          break;\n\n        case 9:\n          _context2.prev = 9;\n          _context2.t0 = _context2[\"catch\"](1);\n          _context2.next = 13;\n          return put(getInactiveTestimonialsSuccess(null));\n\n        case 13:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[1, 9]]);\n}\n\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return all([takeEvery(actionTypes.GET_ALL_TESTIMONIALS_REQUEST, getAllTestimonialsSaga)]);\n\n        case 2:\n          _context3.next = 4;\n          return all([takeEvery(actionTypes.GET_INACTIVE_TESTIMONIALS_REQUEST, getInactiveTestimonialsSaga)]);\n\n        case 4:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}","map":{"version":3,"sources":["D:/Question_cloud/question_cloud_admin_web_new/store/Testimonials/saga.js"],"names":["getAllTestimonialsSaga","getInactiveTestimonialsSaga","rootSaga","all","put","call","takeEvery","actionTypes","getAllTestimonialsSuccess","getInactiveTestimonialsSuccess","TestimonialsRepository","payload","console","log","getAllTestimonials","data","getInactiveTestimonials","GET_ALL_TESTIMONIALS_REQUEST","GET_INACTIVE_TESTIMONIALS_REQUEST"],"mappings":";;oDAMUA,sB;qDAWAC,2B;qDASeC,Q;;AA1BzB,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,SAAzB,QAA0C,oBAA1C;AAEA,SAASC,WAAT,EAAsBC,yBAAtB,EAAiDC,8BAAjD,QAAuF,UAAvF;AAEA,OAAOC,sBAAP,MAAmC,2CAAnC;;AAEA,SAAUV,sBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmCW,UAAAA,OAAnC,QAAmCA,OAAnC;AACIC,UAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AADJ;AAAA;AAGqB,iBAAMR,IAAI,CAACK,sBAAsB,CAACI,kBAAxB,EAA4CH,OAA5C,CAAV;;AAHrB;AAGcI,UAAAA,IAHd;AAIQH,UAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ,EAAmB,MAAnB;AAJR;AAKQ,iBAAMX,GAAG,CAACI,yBAAyB,CAACO,IAAD,CAA1B,CAAT;;AALR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAOQ,iBAAMX,GAAG,CAACI,yBAAyB,CAAC,IAAD,CAA1B,CAAT;;AAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWA,SAAUP,2BAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwCU,UAAAA,OAAxC,SAAwCA,OAAxC;AAAA;AAAA;AAEqB,iBAAMN,IAAI,CAACK,sBAAsB,CAACM,uBAAxB,EAAiDL,OAAjD,CAAV;;AAFrB;AAEcI,UAAAA,IAFd;AAAA;AAGQ,iBAAMX,GAAG,CAACK,8BAA8B,CAACM,IAAD,CAA/B,CAAT;;AAHR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAKQ,iBAAMX,GAAG,CAACK,8BAA8B,CAAC,IAAD,CAA/B,CAAT;;AALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASA,eAAe,SAAUP,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACX,iBAAMC,GAAG,CAAC,CAACG,SAAS,CAACC,WAAW,CAACU,4BAAb,EAA2CjB,sBAA3C,CAAV,CAAD,CAAT;;AADW;AAAA;AAEX,iBAAMG,GAAG,CAAC,CAACG,SAAS,CAACC,WAAW,CAACW,iCAAb,EAAgDjB,2BAAhD,CAAV,CAAD,CAAT;;AAFW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { all, put, call, takeEvery } from 'redux-saga/effects';\r\n\r\nimport { actionTypes, getAllTestimonialsSuccess, getInactiveTestimonialsSuccess } from './action';\r\n\r\nimport TestimonialsRepository from '../../repositories/TestimonialsRepository';\r\n\r\nfunction* getAllTestimonialsSaga({ payload }) {\r\n    console.log('11')\r\n    try {\r\n        const data = yield call(TestimonialsRepository.getAllTestimonials, payload);\r\n        console.log(data , '1111')\r\n        yield put(getAllTestimonialsSuccess(data));\r\n    } catch (err) {\r\n        yield put(getAllTestimonialsSuccess(null));\r\n    }\r\n}\r\n\r\nfunction* getInactiveTestimonialsSaga({ payload }) {\r\n    try {\r\n        const data = yield call(TestimonialsRepository.getInactiveTestimonials, payload);\r\n        yield put(getInactiveTestimonialsSuccess(data));\r\n    } catch (err) {\r\n        yield put(getInactiveTestimonialsSuccess(null));\r\n    }\r\n}\r\n\r\nexport default function* rootSaga() {\r\n    yield all([takeEvery(actionTypes.GET_ALL_TESTIMONIALS_REQUEST, getAllTestimonialsSaga)]);\r\n    yield all([takeEvery(actionTypes.GET_INACTIVE_TESTIMONIALS_REQUEST, getInactiveTestimonialsSaga)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}