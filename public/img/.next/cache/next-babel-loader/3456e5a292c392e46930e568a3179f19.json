{"ast":null,"code":"var _jsxFileName = \"D:\\\\Question_cloud\\\\question_cloud_admin_web_new\\\\pages\\\\changepassword\\\\view\\\\index.jsx\";\nvar __jsx = React.createElement;\n// import React, { useEffect, useState } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { Modal, Button, Checkbox, Spin, notification, Pagination, Tabs, Select } from 'antd';\n// import HeaderDashboard from '../../../components/header/HeaderDashboard';\n// import Sidebar from '../../../components/sections/sidebar';\n// import TableCity from '../../../components/tables/changepassword';\n// import { getAllCity, getInactiveCity } from '../../../store/City/action';\n// import LocationControllerRepository from '../../../repositories/LocationControllerRepository';\n// const Home = (props) => {\n//     const { TabPane } = Tabs;\n//     const { Option } = Select;\n//     const dispatch = useDispatch();\n//     const { auth } = useSelector(({ auth }) => auth);\n//     //const { allCity, totalActiveCount, inactiveCity, totalInactiveCount } = useSelector(({ City }) => City);\n//     const [errors, setErrors] = useState({});\n//     const [loader, setLoader] = useState(false);\n//     useEffect(() => {\n//         let local = JSON.parse(localStorage.getItem('persist:QuestionCloudAdmin'));\n//         let localAuth = local && local.auth ? JSON.parse(local.auth) : {};\n//         if (localAuth && !localAuth.isLoggedIn) {\n//             window.location.href = \"/\";\n//         }\n//     }, [auth]);\n//     // useEffect(() => {\n//     //     setLoader(true);\n//     //     let ctr = {};\n//     //     ctr._start = currentPage === 1 ? 0 : ((currentPage - 1) * pageSizeTotal);\n//     //     ctr._limit = pageSizeTotal;\n//     //     dispatch(getAllCity(ctr));\n//     //     dispatch(getInactiveCity(ctr));\n//     // }, []);\n//     // useEffect(() => {\n//     //     setLoader(false);\n//     // }, [allCity, inactiveCity]);\n//     return (\n//         <>\n//           <div style={{ marginBottom: '0rem', padding: '10px 30px', borderRadius: '0rem', backgroundColor: '#eee' }} className=\"page-heading d-sm-flex justify-content-sm-between align-items-sm-center\">\n//             <h2 className=\"title mb-3 mb-sm-0\">Change Password</h2>\n//           </div>\n//           <div style={{ padding: '5%' }} className=\"col-12\">\n//             {loader &&\n//               <div className=\"loader-view w-100\"\n//                 style={{ height: 'calc(100vh - 120px)' }}>\n//                 <HeaderDashboard />\n//               </div>\n//             }\n//             {!loader &&\n//               <div>\n//                 <div className=\"row no-gutters\">\n//                   <div className=\"col-lg-12 d-flex flex-column order-lg-1\">\n//                     <Tabs\n//                       required\n//                       disabled={true}\n//                       id=\"required\"\n//                       label={'Username'}\n//                       name={'Username'}\n//                       defaultValue={''}//jai\n//                       margin=\"none\" />\n//                     <Tabs\n//                       required\n//                       autoComplete={'off'}\n//                       id=\"required\"\n//                       type={'password'}\n//                       label={'Old Password'}\n//                       name={'OldPassword'}\n//                       onChange={(event) => onOldPasswordChange(event.target.value)}\n//                       onBlur={''}//valiadateProperty\n//                       value={''}//jai\n//                       margin=\"normal\" />\n//                     <h6 style={{ color: 'red' }}>{errors['OldPassword']}</h6>\n//                     <Tabs\n//                       required\n//                       autoComplete={'off'}\n//                       id=\"required\"\n//                       type={'password'}\n//                       label={'New Password'}\n//                       name={'NewPassword'}\n//                       onChange={(event) => onNewPasswordChange(event.target.value)}\n//                       onBlur={''}//valiadateProperty\n//                       value={''}//newPassword\n//                       margin=\"normal\" />\n//                     <h6 style={{ color: 'red' }}>{errors['NewPassword']}</h6>\n//                     <Tabs\n//                       required\n//                       type={'password'}\n//                       autoComplete={'off'}\n//                       id=\"required\"\n//                       label={'Confirm Password'}\n//                       name={'ConfirmPassword'}\n//                       onChange={(event) => onConfirmPasswordChange(event.target.value)}\n//                       onBlur={''}//valiadateProperty\n//                       value={''}//confirmPassword\n//                       margin=\"normal\" />\n//                     <h6 style={{ color: 'red' }}>{errors['ConfirmPassword']}</h6>\n//                     <div style={{ paddingTop: '2%', textAlign: 'center' }} className=\"col-lg-12 col-sm-12 col-12\">\n//                       <Button onClick={() => changePassword()} variant=\"contained\" color=\"primary\" className=\"jr-btn text-white\">Submit</Button>\n//                     </div>\n//                   </div>\n//                 </div>\n//                 <Spin\n//                   className=\"mb-3 bg-info\"\n//                   anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n//                   open={''}//showMessage\n//                   message={''}//alertMessage\n//                 />\n//               </div>\n//             }\n//           </div>\n//         </>\n//       );\n// };\nimport React from \"react\";\nimport ReactDOM from \"react-dom\"; //import Modal from \"./components/Modal\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false,\n      name: \"\",\n      modalInputName: \"\"\n    };\n  }\n\n  handleChange(e) {\n    const target = e.target;\n    const name = target.name;\n    const value = target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSubmit(e) {\n    this.setState({\n      name: this.state.modalInputName\n    });\n    this.modalClose();\n  }\n\n  modalOpen() {\n    this.setState({\n      modal: true\n    });\n  }\n\n  modalClose() {\n    this.setState({\n      modalInputName: \"\",\n      modal: false\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 7\n      }\n    }, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }\n    }, \"Hello!! \", this.state.name), __jsx(\"a\", {\n      href: \"javascript:;\",\n      onClick: e => this.modalOpen(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }\n    }, \"Open Modal\"), __jsx(Modal, {\n      show: this.state.modal,\n      handleClose: e => this.modalClose(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }\n    }, __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }\n    }, \"Hello Modal\"), __jsx(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }\n    }, __jsx(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }\n    }, \"Enter Name:\"), __jsx(\"input\", {\n      type: \"text\",\n      value: this.state.modalInputName,\n      name: \"modalInputName\",\n      onChange: e => this.handleChange(e),\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 13\n      }\n    })), __jsx(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }\n    }, __jsx(\"button\", {\n      onClick: e => this.handleSubmit(e),\n      type: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 13\n      }\n    }, \"Save\"))));\n  }\n\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(__jsx(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 194,\n    columnNumber: 17\n  }\n}), rootElement);","map":{"version":3,"sources":["D:/Question_cloud/question_cloud_admin_web_new/pages/changepassword/view/index.jsx"],"names":["React","ReactDOM","App","Component","constructor","props","state","modal","name","modalInputName","handleChange","e","target","value","setState","handleSubmit","modalClose","modalOpen","render","rootElement","document","getElementById"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CACA;;AAEA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,KADI;AAEXC,MAAAA,IAAI,EAAE,EAFK;AAGXC,MAAAA,cAAc,EAAE;AAHL,KAAb;AAKD;;AAEDC,EAAAA,YAAY,CAACC,CAAD,EAAI;AACd,UAAMC,MAAM,GAAGD,CAAC,CAACC,MAAjB;AACA,UAAMJ,IAAI,GAAGI,MAAM,CAACJ,IAApB;AACA,UAAMK,KAAK,GAAGD,MAAM,CAACC,KAArB;AAEA,SAAKC,QAAL,CAAc;AACZ,OAACN,IAAD,GAAQK;AADI,KAAd;AAGD;;AAEDE,EAAAA,YAAY,CAACJ,CAAD,EAAI;AACd,SAAKG,QAAL,CAAc;AAAEN,MAAAA,IAAI,EAAE,KAAKF,KAAL,CAAWG;AAAnB,KAAd;AACA,SAAKO,UAAL;AACD;;AAEDC,EAAAA,SAAS,GAAG;AACV,SAAKH,QAAL,CAAc;AAAEP,MAAAA,KAAK,EAAE;AAAT,KAAd;AACD;;AAEDS,EAAAA,UAAU,GAAG;AACX,SAAKF,QAAL,CAAc;AACZL,MAAAA,cAAc,EAAE,EADJ;AAEZF,MAAAA,KAAK,EAAE;AAFK,KAAd;AAID;;AAEDW,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAa,KAAKZ,KAAL,CAAWE,IAAxB,CADF,EAEE;AAAG,MAAA,IAAI,EAAC,cAAR;AAAuB,MAAA,OAAO,EAAEG,CAAC,IAAI,KAAKM,SAAL,CAAeN,CAAf,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,EAKE,MAAC,KAAD;AAAO,MAAA,IAAI,EAAE,KAAKL,KAAL,CAAWC,KAAxB;AAA+B,MAAA,WAAW,EAAEI,CAAC,IAAI,KAAKK,UAAL,CAAgBL,CAAhB,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,KAAK,EAAE,KAAKL,KAAL,CAAWG,cAFpB;AAGE,MAAA,IAAI,EAAC,gBAHP;AAIE,MAAA,QAAQ,EAAEE,CAAC,IAAI,KAAKD,YAAL,CAAkBC,CAAlB,CAJjB;AAKE,MAAA,SAAS,EAAC,cALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAFF,EAYE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,OAAO,EAAEA,CAAC,IAAI,KAAKI,YAAL,CAAkBJ,CAAlB,CAAtB;AAA4C,MAAA,IAAI,EAAC,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAZF,CALF,CADF;AA0BD;;AAhE+B;;AAmElC,MAAMQ,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB;AACApB,QAAQ,CAACiB,MAAT,CAAgB,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,WAAzB","sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n// import { Modal, Button, Checkbox, Spin, notification, Pagination, Tabs, Select } from 'antd';\r\n// import HeaderDashboard from '../../../components/header/HeaderDashboard';\r\n// import Sidebar from '../../../components/sections/sidebar';\r\n// import TableCity from '../../../components/tables/changepassword';\r\n// import { getAllCity, getInactiveCity } from '../../../store/City/action';\r\n// import LocationControllerRepository from '../../../repositories/LocationControllerRepository';\r\n\r\n// const Home = (props) => {\r\n\r\n//     const { TabPane } = Tabs;\r\n//     const { Option } = Select;\r\n//     const dispatch = useDispatch();\r\n//     const { auth } = useSelector(({ auth }) => auth);\r\n//     //const { allCity, totalActiveCount, inactiveCity, totalInactiveCount } = useSelector(({ City }) => City);\r\n//     const [errors, setErrors] = useState({});\r\n//     const [loader, setLoader] = useState(false);\r\n\r\n//     useEffect(() => {\r\n//         let local = JSON.parse(localStorage.getItem('persist:QuestionCloudAdmin'));\r\n//         let localAuth = local && local.auth ? JSON.parse(local.auth) : {};\r\n//         if (localAuth && !localAuth.isLoggedIn) {\r\n//             window.location.href = \"/\";\r\n//         }\r\n//     }, [auth]);\r\n    \r\n//     // useEffect(() => {\r\n//     //     setLoader(true);\r\n//     //     let ctr = {};\r\n//     //     ctr._start = currentPage === 1 ? 0 : ((currentPage - 1) * pageSizeTotal);\r\n//     //     ctr._limit = pageSizeTotal;\r\n//     //     dispatch(getAllCity(ctr));\r\n//     //     dispatch(getInactiveCity(ctr));\r\n//     // }, []);\r\n\r\n//     // useEffect(() => {\r\n//     //     setLoader(false);\r\n//     // }, [allCity, inactiveCity]);\r\n\r\n    \r\n\r\n\r\n\r\n//     return (\r\n//         <>\r\n//           <div style={{ marginBottom: '0rem', padding: '10px 30px', borderRadius: '0rem', backgroundColor: '#eee' }} className=\"page-heading d-sm-flex justify-content-sm-between align-items-sm-center\">\r\n//             <h2 className=\"title mb-3 mb-sm-0\">Change Password</h2>\r\n//           </div>\r\n//           <div style={{ padding: '5%' }} className=\"col-12\">\r\n//             {loader &&\r\n//               <div className=\"loader-view w-100\"\r\n//                 style={{ height: 'calc(100vh - 120px)' }}>\r\n//                 <HeaderDashboard />\r\n//               </div>\r\n//             }\r\n//             {!loader &&\r\n//               <div>\r\n//                 <div className=\"row no-gutters\">\r\n//                   <div className=\"col-lg-12 d-flex flex-column order-lg-1\">\r\n//                     <Tabs\r\n//                       required\r\n//                       disabled={true}\r\n//                       id=\"required\"\r\n//                       label={'Username'}\r\n//                       name={'Username'}\r\n//                       defaultValue={''}//jai\r\n//                       margin=\"none\" />\r\n//                     <Tabs\r\n//                       required\r\n//                       autoComplete={'off'}\r\n//                       id=\"required\"\r\n//                       type={'password'}\r\n//                       label={'Old Password'}\r\n//                       name={'OldPassword'}\r\n//                       onChange={(event) => onOldPasswordChange(event.target.value)}\r\n//                       onBlur={''}//valiadateProperty\r\n//                       value={''}//jai\r\n//                       margin=\"normal\" />\r\n//                     <h6 style={{ color: 'red' }}>{errors['OldPassword']}</h6>\r\n//                     <Tabs\r\n//                       required\r\n//                       autoComplete={'off'}\r\n//                       id=\"required\"\r\n//                       type={'password'}\r\n//                       label={'New Password'}\r\n//                       name={'NewPassword'}\r\n//                       onChange={(event) => onNewPasswordChange(event.target.value)}\r\n//                       onBlur={''}//valiadateProperty\r\n//                       value={''}//newPassword\r\n//                       margin=\"normal\" />\r\n//                     <h6 style={{ color: 'red' }}>{errors['NewPassword']}</h6>\r\n//                     <Tabs\r\n//                       required\r\n//                       type={'password'}\r\n//                       autoComplete={'off'}\r\n//                       id=\"required\"\r\n//                       label={'Confirm Password'}\r\n//                       name={'ConfirmPassword'}\r\n//                       onChange={(event) => onConfirmPasswordChange(event.target.value)}\r\n//                       onBlur={''}//valiadateProperty\r\n//                       value={''}//confirmPassword\r\n//                       margin=\"normal\" />\r\n//                     <h6 style={{ color: 'red' }}>{errors['ConfirmPassword']}</h6>\r\n//                     <div style={{ paddingTop: '2%', textAlign: 'center' }} className=\"col-lg-12 col-sm-12 col-12\">\r\n//                       <Button onClick={() => changePassword()} variant=\"contained\" color=\"primary\" className=\"jr-btn text-white\">Submit</Button>\r\n//                     </div>\r\n//                   </div>\r\n//                 </div>\r\n//                 <Spin\r\n//                   className=\"mb-3 bg-info\"\r\n//                   anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n//                   open={''}//showMessage\r\n//                   message={''}//alertMessage\r\n//                 />\r\n//               </div>\r\n//             }\r\n//           </div>\r\n//         </>\r\n//       );\r\n// };\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n//import Modal from \"./components/Modal\";\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      modal: false,\r\n      name: \"\",\r\n      modalInputName: \"\"\r\n    };\r\n  }\r\n\r\n  handleChange(e) {\r\n    const target = e.target;\r\n    const name = target.name;\r\n    const value = target.value;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    this.setState({ name: this.state.modalInputName });\r\n    this.modalClose();\r\n  }\r\n\r\n  modalOpen() {\r\n    this.setState({ modal: true });\r\n  }\r\n\r\n  modalClose() {\r\n    this.setState({\r\n      modalInputName: \"\",\r\n      modal: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>Hello!! {this.state.name}</h1>\r\n        <a href=\"javascript:;\" onClick={e => this.modalOpen(e)}>\r\n          Open Modal\r\n        </a>\r\n        <Modal show={this.state.modal} handleClose={e => this.modalClose(e)}>\r\n          <h2>Hello Modal</h2>\r\n          <div className=\"form-group\">\r\n            <label>Enter Name:</label>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.modalInputName}\r\n              name=\"modalInputName\"\r\n              onChange={e => this.handleChange(e)}\r\n              className=\"form-control\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <button onClick={e => this.handleSubmit(e)} type=\"button\">\r\n              Save\r\n            </button>\r\n          </div>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<App />, rootElement);"]},"metadata":{},"sourceType":"module"}