{"ast":null,"code":"import Repository, { apiUrl } from './Repository';\n\nclass AuthRepository {\n  constructor(callback) {\n    this.callback = callback;\n  }\n\n  async getAllStudent(payload) {\n    const reponse = await Repository.get(`${apiUrl}/student/status/Y?_start=${payload._start}&_limit=${payload._limit}`).then(response => {\n      return response.data;\n    }).catch(error => ({\n      error: JSON.stringify(error)\n    }));\n    return reponse;\n  }\n\n  async getInactiveStudent(payload) {\n    const reponse = await Repository.get(`${apiUrl}/student/status/N?_start=${payload._start}&_limit=${payload._limit}`).then(response => {\n      return response.data;\n    }).catch(error => ({\n      error: JSON.stringify(error)\n    }));\n    return reponse;\n  }\n\n  async saveCoupon(formdata) {\n    const reponse = await Repository.post(`${apiUrl}/student/`, formdata).then(response => {\n      return response.data;\n    }).catch(error => ({\n      error: JSON.stringify(error)\n    }));\n    return reponse;\n  }\n\n  async updateCoupon(categoryId, formdata) {\n    console.log(\"12345689\");\n    const reponse = await Repository.put(`${apiUrl}/student/id/${categoryId}`, formdata).then(response => {\n      return response.data;\n    }).catch(error => ({\n      error: JSON.stringify(error)\n    }));\n    return reponse;\n  }\n\n  async changeStatus(data) {\n    const reponse = await Repository.put(`${apiUrl}/student/status`, data).then(response => {\n      return response.data;\n    }).catch(error => ({\n      error: JSON.stringify(error)\n    }));\n    return reponse;\n  }\n\n  async deleteCoupon(data) {\n    const reponse = await Repository.delete(`${apiUrl}/coupon/`, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      data: data\n    }).then(response => {\n      return response.data;\n    }).catch(error => ({\n      error: JSON.stringify(error)\n    }));\n    ;\n    return reponse;\n  }\n\n  async getStudentsCount(payload) {\n    const reponse = await Repository.get(`${apiUrl}/student/stud-count/${stud_status}?_start=${payload._start}&_limit=${payload._limit}`).then(response => {\n      return response.data;\n    }).catch(error => ({\n      error: JSON.stringify(error)\n    }));\n    return reponse;\n  }\n\n}\n\nexport default new AuthRepository();","map":{"version":3,"sources":["D:/Question_cloud/question_cloud_admin_web_new/repositories/StudentRepository.js"],"names":["Repository","apiUrl","AuthRepository","constructor","callback","getAllStudent","payload","reponse","get","_start","_limit","then","response","data","catch","error","JSON","stringify","getInactiveStudent","saveCoupon","formdata","post","updateCoupon","categoryId","console","log","put","changeStatus","deleteCoupon","delete","headers","getStudentsCount","stud_status"],"mappings":"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","sourcesContent":["import Repository, { apiUrl } from './Repository';\r\n\r\nclass AuthRepository {\r\n    constructor(callback) {\r\n        this.callback = callback;\r\n    }\r\n    async getAllStudent(payload) {\r\n        const reponse = await Repository.get(`${apiUrl}/student/status/Y?_start=${payload._start}&_limit=${payload._limit}`)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n            .catch(error => ({ error: JSON.stringify(error) }));\r\n        return reponse;\r\n    }\r\n\r\n    async getInactiveStudent(payload) {\r\n        const reponse = await Repository.get(`${apiUrl}/student/status/N?_start=${payload._start}&_limit=${payload._limit}`)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n\r\n            .catch(error => ({ error: JSON.stringify(error) }));\r\n        return reponse;\r\n    }\r\n    \r\n    async saveCoupon(formdata) {\r\n        const reponse = await Repository.post(`${apiUrl}/student/`, formdata)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n            .catch(error => ({ error: JSON.stringify(error) }));\r\n        return reponse;\r\n    }\r\n    async updateCoupon(categoryId, formdata) {\r\n        console.log(\"12345689\")\r\n        const reponse = await Repository.put(`${apiUrl}/student/id/${categoryId}`, formdata)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n            .catch(error => ({ error: JSON.stringify(error) }));\r\n        return reponse;\r\n    }\r\n    async changeStatus(data) {\r\n        const reponse = await Repository.put(`${apiUrl}/student/status`, data)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n            .catch(error => ({ error: JSON.stringify(error) }));\r\n        return reponse;\r\n    }\r\n    async deleteCoupon(data) {\r\n        const reponse = await Repository.delete(`${apiUrl}/coupon/`, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            data: data\r\n        }).then(response => {\r\n            return response.data;\r\n        }).catch(error => ({ error: JSON.stringify(error) }));;\r\n        return reponse;\r\n    }\r\n\r\n\r\nasync getStudentsCount(payload) {\r\n    const reponse = await Repository.get(`${apiUrl}/student/stud-count/${stud_status}?_start=${payload._start}&_limit=${payload._limit}`)\r\n        .then(response => {\r\n            return response.data;\r\n        })\r\n        .catch(error => ({ error: JSON.stringify(error) }));\r\n    return reponse;\r\n}\r\n\r\n}\r\n\r\nexport default new AuthRepository();\r\n\r\n"]},"metadata":{},"sourceType":"module"}