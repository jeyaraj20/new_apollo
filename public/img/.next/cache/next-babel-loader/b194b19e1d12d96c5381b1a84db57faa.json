{"ast":null,"code":"var _jsxFileName = \"D:\\\\Question_cloud\\\\question_cloud_admin_web_new\\\\pages\\\\dashboardCategory\\\\view\\\\index.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Modal, Button, Checkbox, Spin, notification, Pagination, Tabs, Select } from 'antd';\nimport { useDropzone } from \"react-dropzone\";\nimport HeaderDashboard from '../../../components/header/HeaderDashboard';\nimport Sidebar from '../../../components/sections/sidebar';\nimport TableDashboardCategory from '../../../components/tables/DashboardCategory';\nimport { homeCategoryImageDir } from '../../../config';\nimport { getAllDashboardCategory, getInactiveDashboardCategory } from '../../../store/DashboardCategory/action';\nimport ExamMainCategoryRepository from '../../../repositories/ExamMainCategoryRepository';\nimport DashboardCategoryRepository from '../../../repositories/DashboardCategoryRepository';\n\nconst Home = props => {\n  const {\n    TabPane\n  } = Tabs;\n  const {\n    Option\n  } = Select;\n  const dispatch = useDispatch();\n  const valueRef = /*#__PURE__*/React.createRef();\n  const {\n    auth\n  } = useSelector(({\n    auth\n  }) => auth);\n  const {\n    allDashboardCategory,\n    totalActiveCount,\n    inactiveDashboardCategory,\n    totalInactiveCount\n  } = useSelector(({\n    DashboardCategory\n  }) => DashboardCategory);\n  const {\n    0: showModal,\n    1: setShowModal\n  } = useState(false);\n  const {\n    0: masterCategory,\n    1: setMasterCategory\n  } = useState([]);\n  const {\n    0: name,\n    1: setName\n  } = useState('');\n  const {\n    0: slug,\n    1: setSlug\n  } = useState('');\n  const {\n    0: position,\n    1: setPosition\n  } = useState('');\n  const {\n    0: image,\n    1: setImage\n  } = useState('');\n  const {\n    0: CatImage,\n    1: setCatImage\n  } = useState('');\n  const {\n    0: selectedMasterIds,\n    1: setSelectedMasterIds\n  } = useState([]);\n  const {\n    0: selectedHomeCatId,\n    1: setSelectedHomeCatId\n  } = useState('');\n  const {\n    0: errors,\n    1: setErrors\n  } = useState({});\n  const {\n    0: loader,\n    1: setLoader\n  } = useState(false);\n  const {\n    0: currentPage,\n    1: setCurrentPage\n  } = useState(1);\n  const {\n    0: pageSizeTotal,\n    1: setPageSizeTotal\n  } = useState(10);\n  const {\n    0: tab,\n    1: setTab\n  } = useState('active');\n  const {\n    0: selectAll,\n    1: setSelectAll\n  } = useState(false);\n  const {\n    0: selectedHomeCatIds,\n    1: setSelectedHomeCatIds\n  } = useState([]);\n  const {\n    0: action,\n    1: setAction\n  } = useState('');\n  const {\n    0: posotionChangeCategorys,\n    1: setPosotionChangeCategorys\n  } = useState([]);\n  useEffect(() => {\n    let local = JSON.parse(localStorage.getItem('persist:QuestionCloudAdmin'));\n    let localAuth = local && local.auth ? JSON.parse(local.auth) : {};\n\n    if (localAuth && !localAuth.isLoggedIn) {\n      window.location.href = \"/\";\n    }\n  }, [auth]);\n  useEffect(() => {\n    setLoader(true);\n    let ctr = {};\n    ctr._start = currentPage === 1 ? 0 : (currentPage - 1) * pageSizeTotal;\n    ctr._limit = pageSizeTotal;\n    dispatch(getAllDashboardCategory(ctr));\n    dispatch(getInactiveDashboardCategory(ctr));\n  }, []);\n  useEffect(() => {\n    setLoader(false);\n  }, [allDashboardCategory, inactiveDashboardCategory]);\n\n  const addModalOnClick = async () => {\n    setLoader(true);\n    let result = await ExamMainCategoryRepository.getExamMainCategory();\n\n    if (result && result.category && result.category.length > 0) {\n      setMasterCategory(result.category);\n      console.log(\"12345\", result);\n    }\n\n    setName('');\n    setSlug('');\n    setPosition('');\n    setSelectedMasterIds([]);\n    setSelectedHomeCatId('');\n    setImage('');\n    setCatImage('');\n    setLoader(false);\n    setShowModal(true);\n  };\n\n  const deleteOneDashboardCategory = async data => {\n    console.log(data.cat_id); // console.log(obj)\n    //setLoader(true);\n\n    let result = await DashboardCategoryRepository.deleteCategory(data.cat_id);\n    notification.success({\n      message: 'DashboardCategory Category Deleted Successfully.'\n    });\n  };\n\n  const editModalOnClick = async data => {\n    console.log(data);\n    setLoader(true);\n    let result = await ExamMainCategoryRepository.getExamMainCategory();\n\n    if (result && result.category && result.category.length > 0) {\n      setMasterCategory(result.category);\n    }\n\n    let masterCatResult = await ExamMainCategoryRepository.getHomeExamMasterCategory(data.exa_cat_id);\n\n    if (masterCatResult && masterCatResult.mastercategory && masterCatResult.mastercategory.length > 0) {\n      let masterIds = [];\n\n      if (masterCatResult.mastercategory[0].exa_cat_id) {\n        masterIds = masterCatResult.mastercategory[0].exa_cat_id.split(',').map(Number);\n      }\n\n      setSelectedMasterIds(masterIds);\n    }\n\n    setName(data.cat_name);\n    setSlug(data.cat_slug);\n    setPosition(data.cat_pos);\n    setSelectedHomeCatId(data.cat_id);\n    setImage(data.cat_image);\n    setLoader(false);\n    setShowModal(true);\n  };\n\n  const closeModalOnClick = () => {\n    setName('');\n    setSlug('');\n    setPosition('');\n    setSelectedMasterIds([]);\n    setSelectedHomeCatId('');\n    setImage('');\n    setCatImage('');\n    setErrors({});\n    setShowModal(false);\n  };\n\n  const nameOnChange = name => {\n    let errorObj = _objectSpread({}, errors);\n\n    let slug = name.replace(/ /g, \"-\").toLowerCase();\n    errorObj['name'] = '';\n    errorObj['slug'] = '';\n    setName(name);\n    setSlug(slug);\n    setErrors(errorObj);\n  };\n\n  const slugOnChange = slug => {\n    let errorObj = _objectSpread({}, errors);\n\n    slug = slug.replace(/ /g, \"-\").toLowerCase();\n    errorObj['slug'] = '';\n    setSlug(slug);\n    setErrors(errorObj);\n  };\n\n  const positionOnChange = position => {\n    const re = /^[0-9\\b]+$/; //rules\n\n    if (position === \"\" || re.test(position)) {\n      let errorObj = _objectSpread({}, errors);\n\n      errorObj['position'] = '';\n      setPosition(position);\n      setErrors(errorObj);\n    }\n  };\n\n  const addImage = () => {\n    valueRef.current.click();\n  };\n\n  const imageOnChange = async file => {\n    let errorObj = _objectSpread({}, errors);\n\n    const formData = new FormData();\n    formData.append('dashboard', file);\n    let result = await DashboardCategoryRepository.imageUpload(formData);\n\n    if (result && result.data && result.data.statusCode && result.data.statusCode === 200) {\n      setImage(result.data.data);\n    }\n\n    errorObj['CatImage'] = '';\n    setErrors(errorObj);\n  };\n\n  const onMasterSelect = id => {\n    let selectedMasters = [...selectedMasterIds];\n    let index = selectedMasters.indexOf(id);\n\n    if (index >= 0) {\n      selectedMasters.splice(index, 1);\n    } else {\n      selectedMasters.push(id);\n    }\n\n    setSelectedMasterIds(selectedMasters);\n  };\n\n  const saveOnClick = () => {\n    if (selectedHomeCatId) {\n      edit();\n    } else {\n      save();\n    }\n  };\n\n  const save = async () => {\n    if (name && slug && position >= 0 && CatImage !== \"\") {\n      setLoader(true);\n      const formData = new FormData();\n      formData.append(\"cat_image\", CatImage);\n      formData.append(\"cat_name\", name);\n      formData.append(\"cat_slug\", slug);\n      formData.append(\"cat_id\", 0);\n      formData.append(\"cat_pos\", position);\n      formData.append(\"cat_desc\", '');\n      formData.append(\"master_ids\", selectedMasterIds);\n\n      try {\n        await DashboardCategoryRepository.savedashboardCategory(formData);\n        notification.success({\n          message: 'Home Category Added Successfully.'\n        });\n        let ctr = {};\n        ctr._start = currentPage === 1 ? 0 : (currentPage - 1) * pageSizeTotal;\n        ctr._limit = pageSizeTotal;\n        dispatch(getAllDashboardCategory(ctr));\n        dispatch(getInactiveDashboardCategory(ctr));\n        closeModalOnClick();\n      } catch (e) {\n        notification.error({\n          message: 'Home Category Added Failed.'\n        });\n      }\n    } else {\n      let errorObj = _objectSpread({}, errors);\n\n      if (!name) errorObj['name'] = \"Please Enter Title\";\n      if (!slug) errorObj['slug'] = \"Please Enter Slug\";\n      if (!position >= 0) errorObj['position'] = \"Please Enter Position\";\n      if (!CatImage) errorObj['CatImage'] = \"Please Select Image\";\n      setErrors(errorObj);\n    }\n  };\n\n  const edit = async () => {\n    if (name && slug && position >= 0) {\n      setLoader(true);\n      const formData = new FormData();\n      formData.append(\"cat_image\", CatImage);\n      formData.append(\"cat_name\", name);\n      formData.append(\"cat_slug\", slug); // formData.append(\"cat_id\", 0);\n\n      formData.append(\"cat_pos\", position);\n      formData.append(\"cat_desc\", '');\n      formData.append(\"master_ids\", selectedMasterIds);\n\n      try {\n        await DashboardCategoryRepository.editdashboardCategory(selectedHomeCatId, formData);\n        notification.success({\n          message: 'Home Category Updated Successfully.'\n        });\n        let ctr = {};\n        ctr._start = currentPage === 1 ? 0 : (currentPage - 1) * pageSizeTotal;\n        ctr._limit = pageSizeTotal;\n        dispatch(getAllDashboardCategory(ctr));\n        dispatch(getInactiveDashboardCategory(ctr));\n        closeModalOnClick();\n      } catch (e) {\n        notification.error({\n          message: 'Home Category Updated Failed.'\n        });\n      }\n    } else {\n      let errorObj = _objectSpread({}, errors);\n\n      if (!name) errorObj['name'] = \"Please Enter Title\";\n      if (!slug) errorObj['slug'] = \"Please Enter Slug\";\n      if (!position >= 0) errorObj['position'] = \"Please Enter Position\";\n      setErrors(errorObj);\n    }\n  };\n\n  const pageSizeChange = async (page, pageSize) => {\n    setLoader(true);\n    let ctr = {};\n    ctr._start = page === 1 ? 0 : (page - 1) * pageSize;\n    ctr._limit = pageSize;\n\n    if (tab === \"active\") {\n      dispatch(getAllDashboardCategory(ctr));\n    } else {\n      dispatch(getInactiveDashboardCategory(ctr));\n    }\n\n    setCurrentPage(page);\n    setPageSizeTotal(pageSize);\n  };\n\n  const changeTab = tab => {\n    setLoader(true);\n    let ctr = {};\n    ctr._start = 0;\n    ctr._limit = 10;\n\n    if (tab === \"active\") {\n      dispatch(getAllDashboardCategory(ctr));\n    } else {\n      dispatch(getInactiveDashboardCategory(ctr));\n    }\n\n    setCurrentPage(1);\n    setPageSizeTotal(10);\n    setSelectedHomeCatIds([]);\n    setSelectAll(false);\n    setAction('');\n    setPosotionChangeCategorys([]);\n    setTab(tab);\n  };\n\n  const onSelectAll = value => {\n    let array = [];\n\n    if (value) {\n      if (tab === 'active') {\n        array = allDashboardCategory.map(h => h.cat_id);\n      } else {\n        array = inactiveDashboardCategory.map(h => h.cat_id);\n      }\n    }\n\n    setSelectedHomeCatIds(array);\n    setSelectAll(value);\n  };\n\n  const onSelectOne = id => {\n    let array = [...selectedHomeCatIds];\n    let array1 = tab === 'active' ? [...allDashboardCategory] : [...inactiveDashboardCategory];\n    let index = array.indexOf(id);\n\n    if (index >= 0) {\n      array.splice(index, 1);\n    } else {\n      array.push(id);\n    }\n\n    if (array.length === array1.length) {\n      setSelectAll(true);\n    } else {\n      setSelectAll(false);\n    }\n\n    setSelectedHomeCatIds(array);\n  };\n\n  const mainPositionOnChange = (id, position) => {\n    let array = [...posotionChangeCategorys];\n    const re = /^[0-9\\b]+$/; //rules\n\n    if (position === \"\" || re.test(position)) {\n      let index = array.findIndex(a => a.catId === id);\n\n      if (index >= 0) {\n        array[index]['position'] = position;\n      } else {\n        array.push({\n          catId: id,\n          position: position\n        });\n      }\n\n      setPosotionChangeCategorys(array);\n    }\n  };\n\n  const actionOnChange = action => {\n    setAction(action);\n  };\n\n  const goOnClick = async () => {\n    let selectedHomeCatIdsArr = [...selectedHomeCatIds];\n    let obj = {\n      catId: selectedHomeCatIdsArr\n    };\n\n    if (selectedHomeCatIdsArr && selectedHomeCatIdsArr.length > 0 && action) {\n      setLoader(true);\n\n      if (action === \"active\") {\n        obj['status'] = 'Y';\n        await DashboardCategoryRepository.inactiveCategory(obj);\n        notification.success({\n          message: 'Home Category Updated Successfully.'\n        });\n      }\n\n      if (action === \"inactive\") {\n        obj['status'] = 'N';\n        await DashboardCategoryRepository.inactiveCategory(obj);\n        notification.success({\n          message: 'Home Category Updated Successfully.'\n        });\n      }\n\n      if (action === \"delete\") {\n        await DashboardCategoryRepository.deleteCategory(obj);\n        notification.success({\n          message: 'Home Category Deleted Successfully.'\n        });\n      }\n\n      if (action === \"position\") {\n        let array = [...posotionChangeCategorys];\n        array = array.filter(a => selectedHomeCatIdsArr.indexOf(a.catId) >= 0);\n        await DashboardCategoryRepository.changePosition({\n          values: array\n        });\n        notification.success({\n          message: 'Home Category Deleted Successfully.'\n        });\n      }\n\n      setSelectedHomeCatIds([]);\n      setPosotionChangeCategorys([]);\n      let ctr = {};\n      ctr._start = currentPage === 1 ? 0 : (currentPage - 1) * pageSizeTotal;\n      ctr._limit = pageSizeTotal;\n      dispatch(getAllDashboardCategory(ctr));\n      dispatch(getInactiveDashboardCategory(ctr));\n    } else {\n      if (!action) {\n        Modal.error({\n          title: 'Please Select Action'\n        });\n      } else if (!selectedHomeCatIdsArr.length) {\n        Modal.error({\n          title: 'Please Select One Category'\n        });\n      }\n    }\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 9\n    }\n  }, __jsx(Spin, {\n    spinning: loader,\n    tip: 'Loading...',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 13\n    }\n  }, __jsx(HeaderDashboard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    className: \"dashboard-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"row no-gutters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    id: \"sidebar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 29\n    }\n  }, __jsx(Sidebar, {\n    page: 'Dashboard Category',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 33\n    }\n  }))), __jsx(\"div\", {\n    className: \"col-md-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    className: \"content content-width\",\n    id: \"style-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 29\n    }\n  }, __jsx(Tabs, {\n    defaultActiveKey: tab,\n    onChange: changeTab,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 33\n    }\n  }, __jsx(TabPane, {\n    tab: `Active ${totalActiveCount}`,\n    key: \"active\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 37\n    }\n  }), __jsx(TabPane, {\n    tab: `Inactive ${totalInactiveCount}`,\n    key: \"inactive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 37\n    }\n  })), __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 33\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 37\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 41\n    }\n  }, __jsx(Select, {\n    onChange: actionOnChange,\n    placeholder: \"Select Action\",\n    className: \"ps-ant-dropdown\",\n    style: {\n      width: 200\n    },\n    value: action,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 45\n    }\n  }, tab === 'active' && __jsx(Option, {\n    value: \"inactive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 70\n    }\n  }, \"Inactive\"), tab === 'inactive' && __jsx(Option, {\n    value: \"active\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 72\n    }\n  }, \"Active\"), __jsx(Option, {\n    value: \"position\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 49\n    }\n  }, \"Position\"), __jsx(Option, {\n    value: \"delete\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 49\n    }\n  }, \"Delete\")))), __jsx(\"div\", {\n    className: \"col-md-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 37\n    }\n  }, __jsx(\"button\", {\n    onClick: goOnClick,\n    style: {\n      backgroundColor: '#cd4040',\n      width: 100,\n      height: 35,\n      color: '#fff',\n      border: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 41\n    }\n  }, \"Go\")), __jsx(\"div\", {\n    className: \"col-md-6 text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 37\n    }\n  }, __jsx(\"button\", {\n    onClick: addModalOnClick,\n    style: {\n      backgroundColor: '#80bc00',\n      width: 100,\n      height: 35,\n      color: '#fff',\n      border: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 41\n    }\n  }, __jsx(\"i\", {\n    className: \"fas fa-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 45\n    }\n  }), \" Add\"))), __jsx(\"div\", {\n    style: {\n      marginTop: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 33\n    }\n  }, __jsx(TableDashboardCategory, {\n    allDashboardCategory: tab === \"active\" ? allDashboardCategory : inactiveDashboardCategory,\n    editModalOnClick: editModalOnClick,\n    deleteOneDashboardCategory: deleteOneDashboardCategory,\n    onSelectAll: onSelectAll,\n    onSelectOne: onSelectOne,\n    selectAll: selectAll,\n    selectedHomeCatIds: selectedHomeCatIds,\n    mainPositionOnChange: mainPositionOnChange,\n    posotionChangeCategorys: posotionChangeCategorys,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 37\n    }\n  })), __jsx(\"div\", {\n    style: totalActiveCount > 0 ? {\n      margin: '10px auto',\n      textAlign: 'right'\n    } : {\n      display: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 33\n    }\n  }, __jsx(Pagination, {\n    total: tab === \"active\" ? totalActiveCount : totalInactiveCount,\n    defaultCurrent: 1,\n    current: currentPage,\n    defaultPageSize: 10,\n    pageSize: pageSizeTotal,\n    pageSizeOptions: ['10', '20', '30'],\n    onChange: pageSizeChange,\n    showSizeChanger: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 37\n    }\n  })))))), __jsx(Modal, {\n    visible: showModal,\n    okText: 'Save',\n    onCancel: closeModalOnClick,\n    title: selectedHomeCatId ? \"Edit Home Category\" : \"Add New Home Category\",\n    width: 800,\n    onOk: saveOnClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 17\n    }\n  }, __jsx(Spin, {\n    spinning: loader,\n    tip: 'Loading...',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 29\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 33\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 37\n    }\n  }, \"Title \", __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 50\n    }\n  }, \"*\")), __jsx(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    value: name,\n    placeholder: \"\",\n    onChange: e => nameOnChange(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 37\n    }\n  }), errors['name'] && __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 41\n    }\n  }, errors['name'])), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 33\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 37\n    }\n  }, \"Slug \", __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 49\n    }\n  }, \"*\")), __jsx(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    value: slug,\n    placeholder: \"\",\n    onChange: e => slugOnChange(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 37\n    }\n  }), errors['slug'] && __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 41\n    }\n  }, errors['slug'])), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 33\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 37\n    }\n  }, \"Position \", __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 53\n    }\n  }, \"*\")), __jsx(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    value: position,\n    placeholder: \"\",\n    onChange: e => positionOnChange(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 37\n    }\n  }), errors['position'] && __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 41\n    }\n  }, errors['position']))), __jsx(\"div\", {\n    className: \"col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 532,\n      columnNumber: 29\n    }\n  }, image && __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 37\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 41\n    }\n  }, \"Logo \", __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 53\n    }\n  }, \"*\")), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 536,\n      columnNumber: 41\n    }\n  }, __jsx(\"img\", {\n    src: image,\n    onClick: addImage,\n    style: {\n      cursor: 'pointer'\n    },\n    width: '90%',\n    height: 200,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 45\n    }\n  }), __jsx(\"input\", {\n    ref: valueRef,\n    type: \"file\",\n    style: {\n      display: \"none\"\n    },\n    className: \"mb-1\",\n    accept: \"image/*\",\n    onChange: e => imageOnChange(e.target.files[0]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 544,\n      columnNumber: 45\n    }\n  }))), !image && __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 556,\n      columnNumber: 37\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 41\n    }\n  }, \"Logo \", __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 53\n    }\n  }, \"*\")), __jsx(Button, {\n    style: {\n      width: '100%',\n      height: 200,\n      borderRadius: 15,\n      border: 'none',\n      backgroundColor: '#ededed'\n    },\n    onClick: addImage,\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 558,\n      columnNumber: 41\n    }\n  }, __jsx(\"i\", {\n    style: {\n      fontSize: 20,\n      fontWeight: 'bold'\n    },\n    onClick: addImage,\n    className: \"fas fa-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 563,\n      columnNumber: 45\n    }\n  })), __jsx(\"input\", {\n    ref: valueRef,\n    type: \"file\",\n    style: {\n      display: \"none\"\n    },\n    className: \"mb-1\",\n    accept: \"image/*\",\n    onChange: e => imageOnChange(e.target.files[0]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 41\n    }\n  })), errors['CatImage'] && __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 581,\n      columnNumber: 37\n    }\n  }, errors['CatImage']))), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 585,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    className: \"row no-gutters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 586,\n      columnNumber: 29\n    }\n  }, masterCategory.map(m => {\n    return __jsx(\"div\", {\n      className: \"col-lg-4\",\n      key: m.cat_id,\n      style: {\n        padding: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 589,\n        columnNumber: 41\n      }\n    }, __jsx(\"div\", {\n      className: \"row no-gutters\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 45\n      }\n    }, __jsx(\"div\", {\n      className: \"col-lg-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 591,\n        columnNumber: 49\n      }\n    }, __jsx(Checkbox // id={'feat' + obj.cat_id} \n    , {\n      checked: selectedMasterIds.indexOf(m.cat_id) >= 0,\n      onChange: () => onMasterSelect(m.cat_id),\n      value: m.cat_id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 53\n      }\n    })), __jsx(\"div\", {\n      className: \"col-lg-10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 599,\n        columnNumber: 49\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 600,\n        columnNumber: 53\n      }\n    }, m.cat_name))));\n  })))))));\n};\n\nexport default Home;","map":{"version":3,"sources":["D:/Question_cloud/question_cloud_admin_web_new/pages/dashboardCategory/view/index.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","Modal","Button","Checkbox","Spin","notification","Pagination","Tabs","Select","useDropzone","HeaderDashboard","Sidebar","TableDashboardCategory","homeCategoryImageDir","getAllDashboardCategory","getInactiveDashboardCategory","ExamMainCategoryRepository","DashboardCategoryRepository","Home","props","TabPane","Option","dispatch","valueRef","createRef","auth","allDashboardCategory","totalActiveCount","inactiveDashboardCategory","totalInactiveCount","DashboardCategory","showModal","setShowModal","masterCategory","setMasterCategory","name","setName","slug","setSlug","position","setPosition","image","setImage","CatImage","setCatImage","selectedMasterIds","setSelectedMasterIds","selectedHomeCatId","setSelectedHomeCatId","errors","setErrors","loader","setLoader","currentPage","setCurrentPage","pageSizeTotal","setPageSizeTotal","tab","setTab","selectAll","setSelectAll","selectedHomeCatIds","setSelectedHomeCatIds","action","setAction","posotionChangeCategorys","setPosotionChangeCategorys","local","JSON","parse","localStorage","getItem","localAuth","isLoggedIn","window","location","href","ctr","_start","_limit","addModalOnClick","result","getExamMainCategory","category","length","console","log","deleteOneDashboardCategory","data","cat_id","deleteCategory","success","message","editModalOnClick","masterCatResult","getHomeExamMasterCategory","exa_cat_id","mastercategory","masterIds","split","map","Number","cat_name","cat_slug","cat_pos","cat_image","closeModalOnClick","nameOnChange","errorObj","replace","toLowerCase","slugOnChange","positionOnChange","re","test","addImage","current","click","imageOnChange","file","formData","FormData","append","imageUpload","statusCode","onMasterSelect","id","selectedMasters","index","indexOf","splice","push","saveOnClick","edit","save","savedashboardCategory","e","error","editdashboardCategory","pageSizeChange","page","pageSize","changeTab","onSelectAll","value","array","h","onSelectOne","array1","mainPositionOnChange","findIndex","a","catId","actionOnChange","goOnClick","selectedHomeCatIdsArr","obj","inactiveCategory","filter","changePosition","values","title","width","backgroundColor","height","color","border","marginTop","margin","textAlign","display","target","cursor","files","borderRadius","fontSize","fontWeight","m","padding"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Modal, Button, Checkbox, Spin, notification, Pagination, Tabs, Select } from 'antd';\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport HeaderDashboard from '../../../components/header/HeaderDashboard';\r\nimport Sidebar from '../../../components/sections/sidebar';\r\nimport TableDashboardCategory from '../../../components/tables/DashboardCategory';\r\n\r\nimport { homeCategoryImageDir } from '../../../config';\r\nimport { getAllDashboardCategory, getInactiveDashboardCategory } from '../../../store/DashboardCategory/action';\r\nimport ExamMainCategoryRepository from '../../../repositories/ExamMainCategoryRepository';\r\nimport DashboardCategoryRepository from '../../../repositories/DashboardCategoryRepository';\r\n\r\nconst Home = (props) => {\r\n\r\n    const { TabPane } = Tabs;\r\n    const { Option } = Select;\r\n    const dispatch = useDispatch();\r\n    const valueRef = React.createRef()\r\n    const { auth } = useSelector(({ auth }) => auth);\r\n    const { allDashboardCategory, totalActiveCount, inactiveDashboardCategory, totalInactiveCount } = useSelector(({ DashboardCategory }) => DashboardCategory);\r\n\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [masterCategory, setMasterCategory] = useState([]);\r\n    const [name, setName] = useState('');\r\n    const [slug, setSlug] = useState('');\r\n    const [position, setPosition] = useState('');\r\n    const [image, setImage] = useState('');\r\n    const [CatImage, setCatImage] = useState('');\r\n    const [selectedMasterIds, setSelectedMasterIds] = useState([]);\r\n    const [selectedHomeCatId, setSelectedHomeCatId] = useState('');\r\n    const [errors, setErrors] = useState({});\r\n    const [loader, setLoader] = useState(false);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [pageSizeTotal, setPageSizeTotal] = useState(10);\r\n    const [tab, setTab] = useState('active');\r\n    const [selectAll, setSelectAll] = useState(false);\r\n    const [selectedHomeCatIds, setSelectedHomeCatIds] = useState([]);\r\n    const [action, setAction] = useState('');\r\n    const [posotionChangeCategorys, setPosotionChangeCategorys] = useState([]);\r\n\r\n    useEffect(() => {\r\n        let local = JSON.parse(localStorage.getItem('persist:QuestionCloudAdmin'));\r\n        let localAuth = local && local.auth ? JSON.parse(local.auth) : {};\r\n        if (localAuth && !localAuth.isLoggedIn) {\r\n            window.location.href = \"/\";\r\n        }\r\n    }, [auth]);\r\n\r\n    useEffect(() => {\r\n        setLoader(true);\r\n        let ctr = {};\r\n        ctr._start = currentPage === 1 ? 0 : ((currentPage - 1) * pageSizeTotal);\r\n        ctr._limit = pageSizeTotal;\r\n        dispatch(getAllDashboardCategory(ctr));\r\n        dispatch(getInactiveDashboardCategory(ctr));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setLoader(false);\r\n    }, [allDashboardCategory, inactiveDashboardCategory]);\r\n\r\n    const addModalOnClick = async () => {\r\n        setLoader(true);\r\n        let result = await ExamMainCategoryRepository.getExamMainCategory();\r\n        if (result && result.category && result.category.length > 0) {\r\n            setMasterCategory(result.category);\r\n            console.log(\"12345\",result)\r\n        }\r\n        setName('');\r\n        setSlug('');\r\n        setPosition('');\r\n        setSelectedMasterIds([]);\r\n        setSelectedHomeCatId('');\r\n        setImage('');\r\n        setCatImage('');\r\n        setLoader(false);\r\n        setShowModal(true);\r\n    }\r\n    const deleteOneDashboardCategory = async (data) => {\r\n        console.log(data.cat_id)\r\n       // console.log(obj)\r\n        \r\n        //setLoader(true);\r\n        let result = await DashboardCategoryRepository.deleteCategory(data.cat_id);\r\n            notification.success({\r\n                message: 'DashboardCategory Category Deleted Successfully.'\r\n            });\r\n     \r\n      }\r\n    \r\n    const editModalOnClick = async (data) => {\r\n        console.log(data)\r\n        setLoader(true);\r\n        let result = await ExamMainCategoryRepository.getExamMainCategory();\r\n        if (result && result.category && result.category.length > 0) {\r\n            setMasterCategory(result.category);\r\n        }\r\n        let masterCatResult = await ExamMainCategoryRepository.getHomeExamMasterCategory(data.exa_cat_id);\r\n        if (masterCatResult && masterCatResult.mastercategory && masterCatResult.mastercategory.length > 0) {\r\n            let masterIds = []\r\n            if (masterCatResult.mastercategory[0].exa_cat_id) {\r\n                masterIds = masterCatResult.mastercategory[0].exa_cat_id.split(',').map(Number);\r\n            }\r\n            setSelectedMasterIds(masterIds);\r\n        }\r\n        setName(data.cat_name);\r\n        setSlug(data.cat_slug);\r\n        setPosition(data.cat_pos);\r\n        setSelectedHomeCatId(data.cat_id);\r\n       setImage(data.cat_image);\r\n        setLoader(false);\r\n        setShowModal(true);\r\n    }\r\n\r\n    const closeModalOnClick = () => {\r\n        setName('');\r\n        setSlug('');\r\n        setPosition('');\r\n        setSelectedMasterIds([]);\r\n        setSelectedHomeCatId('');\r\n        setImage('');\r\n        setCatImage('');\r\n        setErrors({});\r\n        setShowModal(false);\r\n    }\r\n\r\n    const nameOnChange = (name) => {\r\n        let errorObj = { ...errors };\r\n        let slug = (name).replace(/ /g, \"-\").toLowerCase();\r\n        errorObj['name'] = '';\r\n        errorObj['slug'] = '';\r\n        setName(name);\r\n        setSlug(slug);\r\n        setErrors(errorObj);\r\n    }\r\n\r\n    const slugOnChange = (slug) => {\r\n\r\n        let errorObj = { ...errors };\r\n        slug = (slug).replace(/ /g, \"-\").toLowerCase();\r\n        errorObj['slug'] = '';\r\n        setSlug(slug);\r\n        setErrors(errorObj);\r\n    }\r\n\r\n    const positionOnChange = (position) => {\r\n        const re = /^[0-9\\b]+$/; //rules\r\n        if (position === \"\" || re.test(position)) {\r\n            let errorObj = { ...errors };\r\n            errorObj['position'] = '';\r\n            setPosition(position);\r\n            setErrors(errorObj);\r\n        }\r\n    }\r\n\r\n    const addImage = () => {\r\n        valueRef.current.click();\r\n    }\r\n\r\n    const imageOnChange = async (file) => {\r\n        let errorObj = { ...errors };\r\n        const formData = new FormData();\r\n        formData.append('dashboard', file);\r\n        let result = await DashboardCategoryRepository.imageUpload(formData);\r\n        if (result && result.data && result.data.statusCode && result.data.statusCode === 200) {\r\n          setImage(result.data.data);\r\n        }\r\n        errorObj['CatImage'] = '';\r\n        setErrors(errorObj);\r\n    }\r\n    \r\n    const onMasterSelect = (id) => {\r\n        let selectedMasters = [...selectedMasterIds];\r\n        let index = selectedMasters.indexOf(id);\r\n        if (index >= 0) {\r\n            selectedMasters.splice(index, 1);\r\n        } else {\r\n            selectedMasters.push(id);\r\n        }\r\n        setSelectedMasterIds(selectedMasters);\r\n    }\r\n\r\n    const saveOnClick = () => {\r\n        if (selectedHomeCatId) {\r\n            edit();\r\n        } else {\r\n            save();\r\n        }\r\n    }\r\n\r\n    const save = async () => {\r\n        if (name && slug && position >= 0 && CatImage !== \"\") {\r\n            setLoader(true);\r\n            const formData = new FormData();\r\n            formData.append(\"cat_image\", CatImage);\r\n            formData.append(\"cat_name\", name);\r\n            formData.append(\"cat_slug\", slug);\r\n            formData.append(\"cat_id\", 0);\r\n            formData.append(\"cat_pos\", position);\r\n            formData.append(\"cat_desc\", '');\r\n            formData.append(\"master_ids\", selectedMasterIds);\r\n            try {\r\n                await DashboardCategoryRepository.savedashboardCategory(formData);\r\n                notification.success({\r\n                    message: 'Home Category Added Successfully.'\r\n                });\r\n                let ctr = {};\r\n                ctr._start = currentPage === 1 ? 0 : ((currentPage - 1) * pageSizeTotal);\r\n                ctr._limit = pageSizeTotal;\r\n                dispatch(getAllDashboardCategory(ctr));\r\n                dispatch(getInactiveDashboardCategory(ctr));\r\n                closeModalOnClick();\r\n            } catch (e) {\r\n                notification.error({\r\n                    message: 'Home Category Added Failed.'\r\n                });\r\n            }\r\n        } else {\r\n            let errorObj = { ...errors };\r\n            if (!name) errorObj['name'] = \"Please Enter Title\";\r\n            if (!slug) errorObj['slug'] = \"Please Enter Slug\";\r\n            if (!position >= 0) errorObj['position'] = \"Please Enter Position\";\r\n            if (!CatImage) errorObj['CatImage'] = \"Please Select Image\";\r\n            setErrors(errorObj);\r\n        }\r\n    }\r\n \r\n    const edit = async () => {\r\n        if (name && slug && position >= 0) {\r\n            setLoader(true);\r\n            const formData = new FormData();\r\n            formData.append(\"cat_image\", CatImage);\r\n            formData.append(\"cat_name\", name);\r\n            formData.append(\"cat_slug\", slug);\r\n           // formData.append(\"cat_id\", 0);\r\n            formData.append(\"cat_pos\", position);\r\n            formData.append(\"cat_desc\", '');\r\n            formData.append(\"master_ids\", selectedMasterIds);\r\n            try {\r\n                await DashboardCategoryRepository.editdashboardCategory(selectedHomeCatId, formData);\r\n                notification.success({\r\n                    message: 'Home Category Updated Successfully.'\r\n                });\r\n                let ctr = {};\r\n                ctr._start = currentPage === 1 ? 0 : ((currentPage - 1) * pageSizeTotal);\r\n                ctr._limit = pageSizeTotal;\r\n                dispatch(getAllDashboardCategory(ctr));\r\n                dispatch(getInactiveDashboardCategory(ctr));\r\n                closeModalOnClick();\r\n            } catch (e) {\r\n                notification.error({\r\n                    message: 'Home Category Updated Failed.'\r\n                });\r\n            }\r\n        } else {\r\n            let errorObj = { ...errors };\r\n            if (!name) errorObj['name'] = \"Please Enter Title\";\r\n            if (!slug) errorObj['slug'] = \"Please Enter Slug\";\r\n            if (!position >= 0) errorObj['position'] = \"Please Enter Position\";\r\n            setErrors(errorObj);\r\n        }\r\n    }\r\n\r\n    const pageSizeChange = async (page, pageSize) => {\r\n        setLoader(true);\r\n        let ctr = {};\r\n        ctr._start = page === 1 ? 0 : ((page - 1) * pageSize);\r\n        ctr._limit = pageSize;\r\n        if (tab === \"active\") {\r\n            dispatch(getAllDashboardCategory(ctr));\r\n        } else {\r\n            dispatch(getInactiveDashboardCategory(ctr));\r\n        }\r\n        setCurrentPage(page);\r\n        setPageSizeTotal(pageSize);\r\n    }\r\n\r\n    const changeTab = (tab) => {\r\n        setLoader(true);\r\n        let ctr = {};\r\n        ctr._start = 0;\r\n        ctr._limit = 10;\r\n        if (tab === \"active\") {\r\n            dispatch(getAllDashboardCategory(ctr));\r\n        } else {\r\n            dispatch(getInactiveDashboardCategory(ctr));\r\n        }\r\n        setCurrentPage(1);\r\n        setPageSizeTotal(10);\r\n        setSelectedHomeCatIds([]);\r\n        setSelectAll(false);\r\n        setAction('');\r\n        setPosotionChangeCategorys([]);\r\n        setTab(tab);\r\n    }\r\n   \r\n    const onSelectAll = (value) => {\r\n        let array = [];\r\n        if (value) {\r\n            if (tab === 'active') {\r\n                array = allDashboardCategory.map(h => h.cat_id);\r\n            } else {\r\n                array = inactiveDashboardCategory.map(h => h.cat_id);\r\n            }\r\n        }\r\n        setSelectedHomeCatIds(array);\r\n        setSelectAll(value);\r\n    }\r\n\r\n    const onSelectOne = (id) => {\r\n        let array = [...selectedHomeCatIds];\r\n        let array1 = tab === 'active' ? [...allDashboardCategory] : [...inactiveDashboardCategory];\r\n        let index = array.indexOf(id);\r\n        if (index >= 0) {\r\n            array.splice(index, 1);\r\n        } else {\r\n            array.push(id);\r\n        }\r\n        if (array.length === array1.length) {\r\n            setSelectAll(true);\r\n        } else {\r\n            setSelectAll(false);\r\n        }\r\n        setSelectedHomeCatIds(array);\r\n    }\r\n\r\n    const mainPositionOnChange = (id, position) => {\r\n        let array = [...posotionChangeCategorys];\r\n        const re = /^[0-9\\b]+$/; //rules\r\n        if (position === \"\" || re.test(position)) {\r\n            let index = array.findIndex(a => a.catId === id);\r\n            if (index >= 0) {\r\n                array[index]['position'] = position;\r\n            } else {\r\n                array.push({\r\n                    catId: id,\r\n                    position: position\r\n                });\r\n            }\r\n            setPosotionChangeCategorys(array);\r\n        }\r\n    }\r\n \r\n    \r\n    const actionOnChange = (action) => {\r\n        setAction(action);\r\n    }\r\n\r\n    const goOnClick = async () => {\r\n        let selectedHomeCatIdsArr = [...selectedHomeCatIds];\r\n        let obj = {\r\n            catId: selectedHomeCatIdsArr\r\n        };\r\n        if (selectedHomeCatIdsArr && selectedHomeCatIdsArr.length > 0 && action) {\r\n            setLoader(true);\r\n            if (action === \"active\") {\r\n                obj['status'] = 'Y';\r\n                await DashboardCategoryRepository.inactiveCategory(obj);\r\n                notification.success({\r\n                    message: 'Home Category Updated Successfully.'\r\n                });\r\n            }\r\n            if (action === \"inactive\") {\r\n                obj['status'] = 'N';\r\n                await DashboardCategoryRepository.inactiveCategory(obj);\r\n                notification.success({\r\n                    message: 'Home Category Updated Successfully.'\r\n                });\r\n            }\r\n            if (action === \"delete\") {\r\n                await DashboardCategoryRepository.deleteCategory(obj);\r\n                notification.success({\r\n                    message: 'Home Category Deleted Successfully.'\r\n                });\r\n            }\r\n            if (action === \"position\") {\r\n                let array = [...posotionChangeCategorys];\r\n                array = array.filter(a => selectedHomeCatIdsArr.indexOf(a.catId) >= 0);\r\n                await DashboardCategoryRepository.changePosition({ values: array });\r\n                notification.success({\r\n                    message: 'Home Category Deleted Successfully.'\r\n                });\r\n            }\r\n            setSelectedHomeCatIds([]);\r\n            setPosotionChangeCategorys([]);\r\n            let ctr = {};\r\n            ctr._start = currentPage === 1 ? 0 : ((currentPage - 1) * pageSizeTotal);\r\n            ctr._limit = pageSizeTotal;\r\n            dispatch(getAllDashboardCategory(ctr));\r\n            dispatch(getInactiveDashboardCategory(ctr));\r\n        } else {\r\n            if (!action) {\r\n                Modal.error({\r\n                    title: 'Please Select Action'\r\n                });\r\n            } else if (!selectedHomeCatIdsArr.length) {\r\n                Modal.error({\r\n                    title: 'Please Select One Category'\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Spin spinning={loader} tip={'Loading...'}>\r\n                <HeaderDashboard />\r\n                <div className=\"dashboard-container\">\r\n                    <div className=\"row no-gutters\">\r\n                        <div className=\"col-md-2\">\r\n                            <div id=\"sidebar\">\r\n                                <Sidebar page={'Dashboard Category'} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-10\">\r\n                            <div className=\"content content-width\" id=\"style-2\">\r\n                                <Tabs defaultActiveKey={tab} onChange={changeTab}>\r\n                                    <TabPane tab={`Active ${totalActiveCount}`} key=\"active\">\r\n                                    </TabPane>\r\n                                    <TabPane tab={`Inactive ${totalInactiveCount}`} key=\"inactive\">\r\n                                    </TabPane>\r\n                                </Tabs>\r\n                                <div className='row'>\r\n                                    <div className=\"col-md-4\">\r\n                                        <div className=\"form-group\">\r\n                                            <Select\r\n                                                onChange={actionOnChange}\r\n                                                placeholder=\"Select Action\"\r\n                                                className=\"ps-ant-dropdown\"\r\n                                                style={{ width: 200 }}\r\n                                                value={action}\r\n                                            >\r\n                                                {tab === 'active' && <Option value=\"inactive\">Inactive</Option>}\r\n                                                {tab === 'inactive' && <Option value=\"active\">Active</Option>}\r\n                                                <Option value=\"position\">Position</Option>\r\n                                                <Option value=\"delete\">Delete</Option>\r\n                                            </Select>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-2\">\r\n                                        <button onClick={goOnClick} style={{ backgroundColor: '#cd4040', width: 100, height: 35, color: '#fff', border: 'none' }}>\r\n                                            Go\r\n                                        </button>\r\n                                    </div>\r\n                                    <div className=\"col-md-6 text-right\">\r\n                                        <button onClick={addModalOnClick} style={{ backgroundColor: '#80bc00', width: 100, height: 35, color: '#fff', border: 'none' }}>\r\n                                            <i className=\"fas fa-plus\" /> Add\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                                <div style={{ marginTop: 20 }}>\r\n                                    <TableDashboardCategory\r\n                                        allDashboardCategory={tab === \"active\" ? allDashboardCategory : inactiveDashboardCategory}\r\n                                        editModalOnClick={editModalOnClick}\r\n                                        deleteOneDashboardCategory={deleteOneDashboardCategory}\r\n                                        onSelectAll={onSelectAll}\r\n                                        onSelectOne={onSelectOne}\r\n                                        selectAll={selectAll}\r\n                                        selectedHomeCatIds={selectedHomeCatIds}\r\n                                        mainPositionOnChange={mainPositionOnChange}\r\n                                        posotionChangeCategorys={posotionChangeCategorys}\r\n                                    />\r\n                                </div>\r\n                                <div style={totalActiveCount > 0 ? { margin: '10px auto', textAlign: 'right' } : { display: 'none' }}>\r\n                                    <Pagination\r\n                                        total={tab === \"active\" ? totalActiveCount : totalInactiveCount}\r\n                                        defaultCurrent={1}\r\n                                        current={currentPage}\r\n                                        defaultPageSize={10}\r\n                                        pageSize={pageSizeTotal}\r\n                                        pageSizeOptions={['10', '20', '30']}\r\n                                        onChange={pageSizeChange}\r\n                                        showSizeChanger={true}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Modal\r\n                    visible={showModal}\r\n                    okText={'Save'}\r\n                    onCancel={closeModalOnClick}\r\n                    title={selectedHomeCatId ? \"Edit Home Category\" : \"Add New Home Category\"}\r\n                    width={800}\r\n                    onOk={saveOnClick}\r\n                >\r\n                    <Spin spinning={loader} tip={'Loading...'}>\r\n                        <div className='row'>\r\n                            <div className=\"col-md-8\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Title <span style={{ color: 'red' }}>*</span></label>\r\n                                    <input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        value={name}\r\n                                        placeholder=\"\"\r\n                                        onChange={(e) => nameOnChange(e.target.value)}\r\n                                    />\r\n                                    {errors['name'] &&\r\n                                        <span style={{ color: 'red' }}>{errors['name']}</span>\r\n                                    }\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Slug <span style={{ color: 'red' }}>*</span></label>\r\n                                    <input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        value={slug}\r\n                                        placeholder=\"\"\r\n                                        onChange={(e) => slugOnChange(e.target.value)}\r\n                                    />\r\n                                    {errors['slug'] &&\r\n                                        <span style={{ color: 'red' }}>{errors['slug']}</span>\r\n                                    }\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Position <span style={{ color: 'red' }}>*</span></label>\r\n                                    <input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        value={position}\r\n                                        placeholder=\"\"\r\n                                        onChange={(e) => positionOnChange(e.target.value)}\r\n                                    />\r\n                                    {errors['position'] &&\r\n                                        <span style={{ color: 'red' }}>{errors['position']}</span>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-4\">\r\n                                {image &&\r\n                                    <div className=\"form-group\">\r\n                                        <label>Logo <span style={{ color: 'red' }}>*</span></label>\r\n                                        <div>\r\n                                            <img\r\n                                                src={image}\r\n                                                onClick={addImage}\r\n                                                style={{ cursor: 'pointer' }}\r\n                                                width={'90%'}\r\n                                                height={200}\r\n                                            />\r\n                                            <input\r\n                                                ref={valueRef}\r\n                                                type=\"file\"\r\n                                                style={{ display: \"none\" }}\r\n                                                className=\"mb-1\"\r\n                                                accept=\"image/*\"\r\n                                                onChange={(e) => imageOnChange(e.target.files[0])}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n                                {!image &&\r\n                                    <div className=\"form-group\">\r\n                                        <label>Logo <span style={{ color: 'red' }}>*</span></label>\r\n                                        <Button\r\n                                            style={{ width: '100%', height: 200, borderRadius: 15, border: 'none', backgroundColor: '#ededed' }}\r\n                                            onClick={addImage}\r\n                                            size='large'\r\n                                        >\r\n                                            <i\r\n                                                style={{ fontSize: 20, fontWeight: 'bold' }}\r\n                                                onClick={addImage}\r\n                                                className=\"fas fa-plus\"\r\n                                            />\r\n                                        </Button>\r\n                                        <input\r\n                                            ref={valueRef}\r\n                                            type=\"file\"\r\n                                            style={{ display: \"none\" }}\r\n                                            className=\"mb-1\"\r\n                                            accept=\"image/*\"\r\n                                            onChange={(e) => imageOnChange(e.target.files[0])}\r\n                                        />\r\n                                    </div>\r\n                               \r\n                                }\r\n                                {errors['CatImage'] &&\r\n                                    <span style={{ color: 'red' }}>{errors['CatImage']}</span>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"row no-gutters\">\r\n                                {masterCategory.map(m => {\r\n                                    return (\r\n                                        <div className=\"col-lg-4\" key={m.cat_id} style={{ padding: 10 }}>\r\n                                            <div className=\"row no-gutters\">\r\n                                                <div className=\"col-lg-2\">\r\n                                                    <Checkbox\r\n                                                        // id={'feat' + obj.cat_id} \r\n                                                        checked={selectedMasterIds.indexOf(m.cat_id) >= 0}\r\n                                                        onChange={() => onMasterSelect(m.cat_id)}\r\n                                                        value={m.cat_id}\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"col-lg-10\">\r\n                                                    <span>{m.cat_name}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                    </Spin>\r\n                </Modal>\r\n            </Spin>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}