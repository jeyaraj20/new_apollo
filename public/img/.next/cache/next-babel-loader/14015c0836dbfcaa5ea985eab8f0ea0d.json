{"ast":null,"code":"import Repository, { apiUrl } from './Repository';\n\nclass AuthRepository {\n  constructor(callback) {\n    this.callback = callback;\n  }\n\n  async getExamMainCategory() {\n    const reponse = await Repository.get(`${apiUrl}/exammaincategory/master`).then(response => {\n      return response.data;\n    }).catch(error => ({\n      error: JSON.stringify(error)\n    }));\n    return reponse;\n  }\n\n  async getHomeExamMasterCategory(id) {\n    const reponse = await Repository.get(`${apiUrl}/exammaincategory/category/${id}`).then(response => {\n      return response.data;\n    }).catch(error => ({\n      error: JSON.stringify(error)\n    }));\n    return reponse;\n  }\n\n  async getExamSubCategoryById(id) {\n    const reponse = await Repository.get(`${apiUrl}/exammaincategory/main/${id}`).then(response => {\n      return response.data;\n    }).catch(error => ({\n      error: JSON.stringify(error)\n    }));\n    return reponse;\n  }\n\n  async getExammainCategoryById(id) {\n    const reponse = await Repository.get(`${apiUrl}/exammaincategory/sub/${id}`).then(response => {\n      return response.data;\n    }).catch(error => ({\n      error: JSON.stringify(error)\n    }));\n    return reponse;\n  }\n\n}\n\nexport default new AuthRepository();","map":{"version":3,"sources":["D:/Question_cloud/question_cloud_admin_web_new/repositories/ExamMainCategoryRepository.js"],"names":["Repository","apiUrl","AuthRepository","constructor","callback","getExamMainCategory","reponse","get","then","response","data","catch","error","JSON","stringify","getHomeExamMasterCategory","id","getExamSubCategoryById","getExammainCategoryById"],"mappings":"AAAA,OAAOA,UAAP,IAAqBC,MAArB,QAAmC,cAAnC;;AAEA,MAAMC,cAAN,CAAqB;AACjBC,EAAAA,WAAW,CAACC,QAAD,EAAW;AAClB,SAAKA,QAAL,GAAgBA,QAAhB;AACH;;AAEwB,QAAnBC,mBAAmB,GAAG;AACxB,UAAMC,OAAO,GAAG,MAAMN,UAAU,CAACO,GAAX,CAAgB,GAAEN,MAAO,0BAAzB,EACjBO,IADiB,CACZC,QAAQ,IAAI;AACd,aAAOA,QAAQ,CAACC,IAAhB;AACH,KAHiB,EAIjBC,KAJiB,CAIXC,KAAK,KAAK;AAAEA,MAAAA,KAAK,EAAEC,IAAI,CAACC,SAAL,CAAeF,KAAf;AAAT,KAAL,CAJM,CAAtB;AAKA,WAAON,OAAP;AACH;;AAE8B,QAAzBS,yBAAyB,CAACC,EAAD,EAAK;AAChC,UAAMV,OAAO,GAAG,MAAMN,UAAU,CAACO,GAAX,CAAgB,GAAEN,MAAO,8BAA6Be,EAAG,EAAzD,EACjBR,IADiB,CACZC,QAAQ,IAAI;AACd,aAAOA,QAAQ,CAACC,IAAhB;AACH,KAHiB,EAIjBC,KAJiB,CAIXC,KAAK,KAAK;AAAEA,MAAAA,KAAK,EAAEC,IAAI,CAACC,SAAL,CAAeF,KAAf;AAAT,KAAL,CAJM,CAAtB;AAKA,WAAON,OAAP;AACH;;AAC2B,QAAtBW,sBAAsB,CAACD,EAAD,EAAK;AAC7B,UAAMV,OAAO,GAAG,MAAMN,UAAU,CAACO,GAAX,CAAgB,GAAEN,MAAO,0BAAyBe,EAAG,EAArD,EACrBR,IADqB,CAChBC,QAAQ,IAAI;AACd,aAAOA,QAAQ,CAACC,IAAhB;AACH,KAHqB,EAIrBC,KAJqB,CAIfC,KAAK,KAAK;AAAEA,MAAAA,KAAK,EAAEC,IAAI,CAACC,SAAL,CAAeF,KAAf;AAAT,KAAL,CAJU,CAAtB;AAKJ,WAAON,OAAP;AACH;;AAC4B,QAAvBY,uBAAuB,CAACF,EAAD,EAAK;AAC9B,UAAMV,OAAO,GAAG,MAAMN,UAAU,CAACO,GAAX,CAAgB,GAAEN,MAAO,yBAAwBe,EAAG,EAApD,EACrBR,IADqB,CAChBC,QAAQ,IAAI;AACd,aAAOA,QAAQ,CAACC,IAAhB;AACH,KAHqB,EAIrBC,KAJqB,CAIfC,KAAK,KAAK;AAAEA,MAAAA,KAAK,EAAEC,IAAI,CAACC,SAAL,CAAeF,KAAf;AAAT,KAAL,CAJU,CAAtB;AAKJ,WAAON,OAAP;AACC;;AArCoB;;AAwCrB,eAAe,IAAIJ,cAAJ,EAAf","sourcesContent":["import Repository, { apiUrl } from './Repository';\r\n\r\nclass AuthRepository {\r\n    constructor(callback) {\r\n        this.callback = callback;\r\n    }\r\n\r\n    async getExamMainCategory() {\r\n        const reponse = await Repository.get(`${apiUrl}/exammaincategory/master`)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n            .catch(error => ({ error: JSON.stringify(error) }));\r\n        return reponse;\r\n    }\r\n    \r\n    async getHomeExamMasterCategory(id) {\r\n        const reponse = await Repository.get(`${apiUrl}/exammaincategory/category/${id}`)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n            .catch(error => ({ error: JSON.stringify(error) }));\r\n        return reponse;\r\n    }\r\n    async getExamSubCategoryById(id) {\r\n        const reponse = await Repository.get(`${apiUrl}/exammaincategory/main/${id}`)\r\n        .then(response => {\r\n            return response.data;\r\n        })\r\n        .catch(error => ({ error: JSON.stringify(error) }));\r\n    return reponse;\r\n}\r\nasync getExammainCategoryById(id) {\r\n    const reponse = await Repository.get(`${apiUrl}/exammaincategory/sub/${id}`)\r\n    .then(response => {\r\n        return response.data;\r\n    })\r\n    .catch(error => ({ error: JSON.stringify(error) }));\r\nreturn reponse;\r\n}\r\n}\r\n\r\nexport default new AuthRepository();\r\n\r\n"]},"metadata":{},"sourceType":"module"}