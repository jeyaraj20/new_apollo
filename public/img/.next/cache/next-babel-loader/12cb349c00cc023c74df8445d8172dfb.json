{"ast":null,"code":"var _jsxFileName = \"D:\\\\Question_cloud\\\\question_cloud_admin_web_new\\\\pages\\\\testimonials\\\\view\\\\index.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Modal, Button, Checkbox, Spin, notification, Pagination, Tabs, Select } from 'antd';\nimport HeaderDashboard from '../../../components/header/HeaderDashboard';\nimport Sidebar from '../../../components/sections/sidebar';\nimport TableTestimonials from '../../../components/tables/Testimonials';\nimport { getAllTestimonials, getInactiveTestimonials } from '../../../store/Testimonials/action';\nimport TestimonialsRepository from '../../../repositories/TestimonialsRepository';\n\nconst Home = props => {\n  const {\n    TabPane\n  } = Tabs;\n  const {\n    Option\n  } = Select;\n  const dispatch = useDispatch();\n  const valueRef = /*#__PURE__*/React.createRef();\n  const {\n    auth\n  } = useSelector(({\n    auth\n  }) => auth);\n  const {\n    allTestimonials,\n    totalActiveCount,\n    inactiveTestimonials,\n    totalInactiveCount\n  } = useSelector(({\n    Testimonials\n  }) => Testimonials);\n  const {\n    0: showModal,\n    1: setShowModal\n  } = useState(false);\n  const {\n    0: masterCategory,\n    1: setMasterCategory\n  } = useState([]);\n  const {\n    0: name,\n    1: setName\n  } = useState('');\n  const {\n    0: position,\n    1: setPosition\n  } = useState('');\n  const {\n    0: image,\n    1: setImage\n  } = useState('');\n  const {\n    0: selectedMasterIds,\n    1: setSelectedMasterIds\n  } = useState([]);\n  const {\n    0: selectedHomeCatId,\n    1: setSelectedHomeCatId\n  } = useState('');\n  const {\n    0: errors,\n    1: setErrors\n  } = useState({});\n  const {\n    0: loader,\n    1: setLoader\n  } = useState(false);\n  const {\n    0: currentPage,\n    1: setCurrentPage\n  } = useState(1);\n  const {\n    0: pageSizeTotal,\n    1: setPageSizeTotal\n  } = useState(10);\n  const {\n    0: tab,\n    1: setTab\n  } = useState('active');\n  const {\n    0: selectAll,\n    1: setSelectAll\n  } = useState(false);\n  const {\n    0: selectedHomeCatIds,\n    1: setSelectedHomeCatIds\n  } = useState([]);\n  const {\n    0: action,\n    1: setAction\n  } = useState('');\n  const {\n    0: Content,\n    1: setContent\n  } = useState('0');\n  const {\n    0: Designation,\n    1: setDesignation\n  } = useState('');\n  const {\n    0: posotionChangeCategorys,\n    1: setPosotionChangeCategorys\n  } = useState([]);\n  const {\n    0: buttonLoader,\n    1: setBttonLoader\n  } = useState(false);\n  useEffect(() => {\n    let local = JSON.parse(localStorage.getItem('persist:QuestionCloudAdmin'));\n    let localAuth = local && local.auth ? JSON.parse(local.auth) : {};\n\n    if (localAuth && !localAuth.isLoggedIn) {\n      window.location.href = \"/\";\n    }\n  }, [auth]);\n  useEffect(() => {\n    setLoader(true);\n    let ctr = {};\n    ctr._start = currentPage === 1 ? 0 : (currentPage - 1) * pageSizeTotal;\n    ctr._limit = pageSizeTotal;\n    dispatch(getAllTestimonials(ctr));\n    dispatch(getInactiveTestimonials(ctr));\n  }, []);\n  useEffect(() => {\n    setLoader(false);\n  }, [allTestimonials, inactiveTestimonials]);\n\n  const addModalOnClick = async () => {\n    setLoader(true);\n    setName('');\n    setPosition('');\n    setSelectedMasterIds([]);\n    setSelectedHomeCatId('');\n    setImage('');\n    setLoader(false);\n    setShowModal(true);\n  };\n\n  const deleteOnetestimonials = data => {\n    Modal.confirm({\n      title: 'Confirm',\n      content: 'Do you want to delete this Testimonials.',\n      okText: 'Yes',\n      onOk: () => deleteOneCategory(data),\n      cancelText: 'No'\n    });\n  };\n\n  const deleteOneCategory = async data => {\n    let obj = {\n      \"catId\": [data.testimonials_id]\n    };\n    await TestimonialsRepository.deleteCategory(obj);\n    Modal.success({\n      title: 'Testimonials Deleted Successfully.'\n    });\n    let ctr = {};\n    ctr._start = currentPage === 1 ? 0 : (currentPage - 1) * pageSizeTotal;\n    ctr._limit = pageSizeTotal;\n    dispatch(getAllTestimonials(ctr));\n    dispatch(getInactiveTestimonials(ctr));\n  };\n\n  const editModalOnClick = async data => {\n    setLoader(true);\n    setName(data.testimonials_name);\n    setPosition(data.testimonials_pos);\n    setSelectedHomeCatId(data.testimonials_id);\n    setImage(data.testimonials_image);\n    setContent(data.testimonials_content);\n    setDesignation(data.testimonials_dis);\n    setLoader(false);\n    setShowModal(true);\n  };\n\n  const closeModalOnClick = () => {\n    setName('');\n    setPosition('');\n    setSelectedHomeCatId('');\n    setDesignation('');\n    setImage('');\n    setContent('');\n    setErrors({});\n    setShowModal(false);\n  };\n\n  const nameOnChange = name => {\n    let errorObj = _objectSpread({}, errors);\n\n    errorObj['name'] = '';\n    setName(name);\n    setErrors(errorObj);\n  };\n\n  const ContentOnChange = Content => {\n    let errorObj = _objectSpread({}, errors);\n\n    errorObj['Content'] = '';\n    setContent(Content);\n    setErrors(errorObj);\n  };\n\n  const DesignationOnChange = Designation => {\n    let errorObj = _objectSpread({}, errors);\n\n    errorObj['Designation'] = '';\n    setDesignation(Designation);\n    setErrors(errorObj);\n  };\n\n  const positionOnChange = position => {\n    const re = /^[0-9\\b]+$/; //rules\n\n    if (position === \"\" || re.test(position)) {\n      let errorObj = _objectSpread({}, errors);\n\n      errorObj['position'] = '';\n      setPosition(position);\n      setErrors(errorObj);\n    }\n  };\n\n  const addImage = () => {\n    valueRef.current.click();\n  };\n\n  const imageOnChange = async file => {\n    let errorObj = _objectSpread({}, errors);\n\n    setBttonLoader(true);\n    setImage('');\n    const formData = new FormData();\n    formData.append('testimonials', file);\n    let result = await TestimonialsRepository.imageUpload(formData);\n\n    if (result && result.statusCode === 200) {\n      setImage(result.data);\n      setBttonLoader(false);\n    }\n\n    errorObj['CatImage'] = '';\n    setErrors(errorObj);\n  };\n\n  const onMasterSelect = id => {\n    let selectedMasters = [...selectedMasterIds];\n    let index = selectedMasters.indexOf(id);\n\n    if (index >= 0) {\n      selectedMasters.splice(index, 1);\n    } else {\n      selectedMasters.push(id);\n    }\n\n    setSelectedMasterIds(selectedMasters);\n  };\n\n  const saveOnClick = () => {\n    if (selectedHomeCatId) {\n      edit();\n    } else {\n      save();\n    }\n  };\n\n  const save = async () => {\n    if (name && position && selectedMasterIds && image) {\n      setLoader(true);\n      let obj = {\n        \"testimonials_image\": image,\n        \"testimonials_name\": name,\n        \"testimonials_dis\": Designation,\n        //Designation\n        \"testimonials_pos\": position,\n        //position\n        \"testimonials_content\": Content //content\n\n      };\n\n      try {\n        await TestimonialsRepository.saveTestimonials(obj);\n        notification.success({\n          message: 'Testimonials Added Successfully.'\n        });\n        let ctr = {};\n        ctr._start = currentPage === 1 ? 0 : (currentPage - 1) * pageSizeTotal;\n        ctr._limit = pageSizeTotal;\n        dispatch(getAllTestimonials(ctr));\n        dispatch(getInactiveTestimonials(ctr));\n        closeModalOnClick();\n      } catch (e) {\n        notification.error({\n          message: 'Testimonials Added Failed.'\n        });\n      }\n    } else {\n      let errorObj = _objectSpread({}, errors);\n\n      if (!name) errorObj['name'] = \"Please Enter Title\";\n      if (!position) errorObj['position'] = \"Please Enter Position\";\n      if (!image) errorObj['CatImage'] = \"Please Select Image\";\n      setErrors(errorObj);\n    }\n  };\n\n  const edit = async () => {\n    if (name && position && selectedHomeCatId && Content && image) {\n      setLoader(true);\n      let obj = {\n        \"testimonials_id\": selectedHomeCatId,\n        //categoryId\n        \"testimonials_image\": image,\n        //CatImage\n        \"testimonials_name\": name,\n        //categoryName\n        \"testimonials_dis\": Designation,\n        //Designation\n        \"testimonials_pos\": position,\n        //position\n        \"testimonials_content\": Content //content\n\n      };\n\n      try {\n        await TestimonialsRepository.editTestimonials(selectedHomeCatId, obj);\n        notification.success({\n          message: 'Testimonials Updated Successfully.'\n        });\n        let ctr = {};\n        ctr._start = currentPage === 1 ? 0 : (currentPage - 1) * pageSizeTotal;\n        ctr._limit = pageSizeTotal;\n        dispatch(getAllTestimonials(ctr));\n        dispatch(getInactiveTestimonials(ctr));\n        closeModalOnClick();\n      } catch (e) {\n        notification.error({\n          message: 'Testimonials  Updated Failed.'\n        });\n      }\n    } else {\n      let errorObj = _objectSpread({}, errors);\n\n      if (!name) errorObj['name'] = \"Please Enter Title\";\n      if (!position) errorObj['position'] = \"Please Enter Position\";\n      setErrors(errorObj);\n    }\n  };\n\n  const pageSizeChange = async (page, pageSize) => {\n    setLoader(true);\n    let ctr = {};\n    ctr._start = page === 1 ? 0 : (page - 1) * pageSize;\n    ctr._limit = pageSize;\n\n    if (tab === \"active\") {\n      dispatch(getAllTestimonials(ctr));\n    } else {\n      dispatch(getInactiveTestimonials(ctr));\n    }\n\n    setCurrentPage(page);\n    setPageSizeTotal(pageSize);\n  };\n\n  const changeTab = tab => {\n    setLoader(true);\n    let ctr = {};\n    ctr._start = 0;\n    ctr._limit = 10;\n\n    if (tab === \"active\") {\n      dispatch(getAllTestimonials(ctr));\n    } else {\n      dispatch(getInactiveTestimonials(ctr));\n    }\n\n    setCurrentPage(1);\n    setPageSizeTotal(10);\n    setSelectedHomeCatIds([]);\n    setSelectAll(false);\n    setAction('');\n    setPosotionChangeCategorys([]);\n    setTab(tab);\n  };\n\n  const onSelectAll = value => {\n    let array = [];\n\n    if (value) {\n      if (tab === 'active') {\n        array = allTestimonials.map(h => h.cat_id);\n      } else {\n        array = inactiveTestimonials.map(h => h.cat_id);\n      }\n    }\n\n    setSelectedHomeCatIds(array);\n    setSelectAll(value);\n  };\n\n  const onSelectOne = id => {\n    let array = [...selectedHomeCatIds];\n    let array1 = tab === 'active' ? [...allTestimonials] : [...inactiveTestimonials];\n    let index = array.indexOf(id);\n\n    if (index >= 0) {\n      array.splice(index, 1);\n    } else {\n      array.push(id);\n    }\n\n    if (array.length === array1.length) {\n      setSelectAll(true);\n    } else {\n      setSelectAll(false);\n    }\n\n    setSelectedHomeCatIds(array);\n  };\n\n  const mainPositionOnChange = (id, position) => {\n    let array = [...posotionChangeCategorys];\n    const re = /^[0-9\\b]+$/; //rules\n\n    if (position === \"\" || re.test(position)) {\n      let index = array.findIndex(a => a.catId === id);\n\n      if (index >= 0) {\n        array[index]['position'] = position;\n      } else {\n        array.push({\n          catId: id,\n          position: position\n        });\n      }\n\n      setPosotionChangeCategorys(array);\n    }\n  };\n\n  const actionOnChange = action => {\n    setAction(action);\n  };\n\n  const goOnClick = async () => {\n    let selectedHomeCatIdsArr = [...selectedHomeCatIds];\n    let obj = {\n      catId: selectedHomeCatIdsArr\n    };\n\n    if (selectedHomeCatIdsArr && selectedHomeCatIdsArr.length > 0 && action) {\n      setLoader(true);\n\n      if (action === \"active\") {\n        obj['status'] = 'Y';\n        await TestimonialsRepository.inactiveCategory(obj);\n        notification.success({\n          message: 'Testimonials  Updated Successfully.'\n        });\n      }\n\n      if (action === \"inactive\") {\n        obj['status'] = 'N';\n        await TestimonialsRepository.inactiveCategory(obj);\n        notification.success({\n          message: 'Testimonials  Updated Successfully.'\n        });\n      }\n\n      if (action === \"delete\") {\n        await TestimonialsRepository.deleteCategory(obj);\n        notification.success({\n          message: 'Testimonials  Deleted Successfully.'\n        });\n      }\n\n      if (action === \"position\") {\n        let array = [...posotionChangeCategorys];\n        array = array.filter(a => selectedHomeCatIdsArr.indexOf(a.catId) >= 0);\n        await TestimonialsRepository.changePosition({\n          values: array\n        });\n        notification.success({\n          message: 'Testimonials  Deleted Successfully.'\n        });\n      }\n\n      setSelectedHomeCatIds([]);\n      setPosotionChangeCategorys([]);\n      let ctr = {};\n      ctr._start = currentPage === 1 ? 0 : (currentPage - 1) * pageSizeTotal;\n      ctr._limit = pageSizeTotal;\n      dispatch(getAllTestimonials(ctr));\n      dispatch(getInactiveTestimonials(ctr));\n    } else {\n      if (!action) {\n        Modal.error({\n          title: 'Please Select Action'\n        });\n      } else if (!selectedHomeCatIdsArr.length) {\n        Modal.error({\n          title: 'Please Select One Category'\n        });\n      }\n    }\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 9\n    }\n  }, __jsx(Spin, {\n    spinning: loader,\n    tip: 'Loading...',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 13\n    }\n  }, __jsx(HeaderDashboard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    className: \"dashboard-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"row no-gutters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    id: \"sidebar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 29\n    }\n  }, __jsx(Sidebar, {\n    page: 'Testimonials',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 33\n    }\n  }))), __jsx(\"div\", {\n    className: \"col-md-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    className: \"content content-width\",\n    id: \"style-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 29\n    }\n  }, __jsx(Tabs, {\n    defaultActiveKey: tab,\n    onChange: changeTab,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 33\n    }\n  }, __jsx(TabPane, {\n    tab: `Active ${totalActiveCount}`,\n    key: \"active\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 37\n    }\n  }), __jsx(TabPane, {\n    tab: `Inactive ${totalInactiveCount}`,\n    key: \"inactive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 37\n    }\n  })), __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 33\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 37\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 41\n    }\n  }, __jsx(Select, {\n    onChange: actionOnChange,\n    placeholder: \"Select Action\",\n    className: \"ps-ant-dropdown\",\n    style: {\n      width: 200\n    },\n    value: action,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 45\n    }\n  }, tab === 'active' && __jsx(Option, {\n    value: \"inactive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 70\n    }\n  }, \"Inactive\"), tab === 'inactive' && __jsx(Option, {\n    value: \"active\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 72\n    }\n  }, \"Active\"), __jsx(Option, {\n    value: \"position\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 49\n    }\n  }, \"Position\"), __jsx(Option, {\n    value: \"delete\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 49\n    }\n  }, \"Delete\")))), __jsx(\"div\", {\n    className: \"col-md-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 37\n    }\n  }, __jsx(\"button\", {\n    onClick: goOnClick,\n    style: {\n      backgroundColor: '#cd4040',\n      width: 100,\n      height: 35,\n      color: '#fff',\n      border: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 41\n    }\n  }, \"Go\")), __jsx(\"div\", {\n    className: \"col-md-6 text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 37\n    }\n  }, __jsx(\"button\", {\n    onClick: addModalOnClick,\n    style: {\n      backgroundColor: '#80bc00',\n      width: 100,\n      height: 35,\n      color: '#fff',\n      border: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 41\n    }\n  }, __jsx(\"i\", {\n    className: \"fas fa-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 45\n    }\n  }), \" Add\"))), __jsx(\"div\", {\n    style: {\n      marginTop: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 33\n    }\n  }, __jsx(TableTestimonials, {\n    allTestimonials: tab === \"active\" ? allTestimonials : inactiveTestimonials,\n    editModalOnClick: editModalOnClick,\n    deleteOnetestimonials: deleteOnetestimonials,\n    onSelectAll: onSelectAll,\n    onSelectOne: onSelectOne,\n    selectAll: selectAll,\n    selectedHomeCatIds: selectedHomeCatIds,\n    mainPositionOnChange: mainPositionOnChange,\n    posotionChangeCategorys: posotionChangeCategorys,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 37\n    }\n  })), __jsx(\"div\", {\n    style: totalActiveCount > 0 ? {\n      margin: '10px auto',\n      textAlign: 'right'\n    } : {\n      display: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 33\n    }\n  }, __jsx(Pagination, {\n    total: tab === \"active\" ? totalActiveCount : totalInactiveCount,\n    defaultCurrent: 1,\n    current: currentPage,\n    defaultPageSize: 10,\n    pageSize: pageSizeTotal,\n    pageSizeOptions: ['10', '20', '30'],\n    onChange: pageSizeChange,\n    showSizeChanger: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 37\n    }\n  })))))), __jsx(Modal, {\n    visible: showModal,\n    okText: 'Save',\n    onCancel: closeModalOnClick,\n    title: selectedHomeCatId ? \"Edit Testimonials \" : \"Add New Testimonials \",\n    width: 800,\n    onOk: saveOnClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 17\n    }\n  }, __jsx(Spin, {\n    spinning: loader,\n    tip: 'Loading...',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 29\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 33\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 37\n    }\n  }, \"Name \", __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 49\n    }\n  }, \"*\")), __jsx(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    value: name,\n    placeholder: \"\",\n    onChange: e => nameOnChange(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 37\n    }\n  }), errors['name'] && __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 41\n    }\n  }, errors['name'])), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 33\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 37\n    }\n  }, \"Designation \", __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 56\n    }\n  }, \"*\")), __jsx(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    value: Designation,\n    placeholder: \"\",\n    onChange: e => DesignationOnChange(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 37\n    }\n  }), errors['Designation'] && __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 41\n    }\n  }, errors['Designation'])), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 33\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 37\n    }\n  }, \"Content \", __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 52\n    }\n  }, \"*\")), __jsx(\"textarea\", {\n    style: {\n      height: '150px'\n    },\n    className: \"form-control\",\n    type: \"text\",\n    value: Content,\n    placeholder: \"\",\n    onChange: e => ContentOnChange(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 37\n    }\n  }, \" \"), errors['Content'] && __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 41\n    }\n  }, errors['Content'])), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 33\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 37\n    }\n  }, \"Position \", __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 53\n    }\n  }, \"*\")), __jsx(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    value: position,\n    placeholder: \"\",\n    onChange: e => positionOnChange(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 37\n    }\n  }), errors['position'] && __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 41\n    }\n  }, errors['position']))), __jsx(\"div\", {\n    className: \"col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 29\n    }\n  }, image && __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 37\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 538,\n      columnNumber: 41\n    }\n  }, \"Logo \", __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 538,\n      columnNumber: 53\n    }\n  }, \"*\")), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 539,\n      columnNumber: 41\n    }\n  }, __jsx(\"img\", {\n    src: image,\n    onClick: addImage,\n    style: {\n      cursor: 'pointer'\n    },\n    width: '90%',\n    height: 200,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 540,\n      columnNumber: 45\n    }\n  }), __jsx(\"input\", {\n    ref: valueRef,\n    type: \"file\",\n    style: {\n      display: \"none\"\n    },\n    className: \"mb-1\",\n    accept: \"image/*\",\n    onChange: e => imageOnChange(e.target.files[0]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 45\n    }\n  }))), !image && __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 559,\n      columnNumber: 37\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 560,\n      columnNumber: 41\n    }\n  }, \"Logo \", __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 560,\n      columnNumber: 53\n    }\n  }, \"*\")), __jsx(Button, {\n    style: {\n      width: '100%',\n      height: 200,\n      borderRadius: 15,\n      border: 'none',\n      backgroundColor: '#ededed'\n    },\n    onClick: addImage,\n    loading: buttonLoader,\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 561,\n      columnNumber: 41\n    }\n  }, __jsx(\"i\", {\n    style: !buttonLoader ? {\n      fontSize: 20,\n      fontWeight: 'bold'\n    } : {\n      display: 'none'\n    },\n    onClick: addImage,\n    className: \"fas fa-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 567,\n      columnNumber: 45\n    }\n  })), __jsx(\"input\", {\n    ref: valueRef,\n    type: \"file\",\n    style: {\n      display: \"none\"\n    },\n    className: \"mb-1\",\n    accept: \"image/*\",\n    onChange: e => imageOnChange(e.target.files[0]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 573,\n      columnNumber: 41\n    }\n  })), errors['CatImage'] && __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 585,\n      columnNumber: 37\n    }\n  }, errors['CatImage']))), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 589,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    className: \"row no-gutters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 590,\n      columnNumber: 29\n    }\n  }, masterCategory.map(m => {\n    return __jsx(\"div\", {\n      className: \"col-lg-4\",\n      key: m.exa_cat_id,\n      style: {\n        padding: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 41\n      }\n    }, __jsx(\"div\", {\n      className: \"row no-gutters\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 594,\n        columnNumber: 45\n      }\n    }, __jsx(\"div\", {\n      className: \"col-lg-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 595,\n        columnNumber: 49\n      }\n    }, __jsx(Checkbox // id={'feat' + obj.cat_id} \n    , {\n      checked: selectedMasterIds.indexOf(m.exa_cat_id) >= 0,\n      onChange: () => onMasterSelect(m.exa_cat_id),\n      value: m.exa_cat_id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 596,\n        columnNumber: 53\n      }\n    })), __jsx(\"div\", {\n      className: \"col-lg-10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 603,\n        columnNumber: 49\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 604,\n        columnNumber: 53\n      }\n    }, m.exa_cat_name))));\n  })))))));\n};\n\nexport default Home;","map":{"version":3,"sources":["D:/Question_cloud/question_cloud_admin_web_new/pages/testimonials/view/index.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","Modal","Button","Checkbox","Spin","notification","Pagination","Tabs","Select","HeaderDashboard","Sidebar","TableTestimonials","getAllTestimonials","getInactiveTestimonials","TestimonialsRepository","Home","props","TabPane","Option","dispatch","valueRef","createRef","auth","allTestimonials","totalActiveCount","inactiveTestimonials","totalInactiveCount","Testimonials","showModal","setShowModal","masterCategory","setMasterCategory","name","setName","position","setPosition","image","setImage","selectedMasterIds","setSelectedMasterIds","selectedHomeCatId","setSelectedHomeCatId","errors","setErrors","loader","setLoader","currentPage","setCurrentPage","pageSizeTotal","setPageSizeTotal","tab","setTab","selectAll","setSelectAll","selectedHomeCatIds","setSelectedHomeCatIds","action","setAction","Content","setContent","Designation","setDesignation","posotionChangeCategorys","setPosotionChangeCategorys","buttonLoader","setBttonLoader","local","JSON","parse","localStorage","getItem","localAuth","isLoggedIn","window","location","href","ctr","_start","_limit","addModalOnClick","deleteOnetestimonials","data","confirm","title","content","okText","onOk","deleteOneCategory","cancelText","obj","testimonials_id","deleteCategory","success","editModalOnClick","testimonials_name","testimonials_pos","testimonials_image","testimonials_content","testimonials_dis","closeModalOnClick","nameOnChange","errorObj","ContentOnChange","DesignationOnChange","positionOnChange","re","test","addImage","current","click","imageOnChange","file","formData","FormData","append","result","imageUpload","statusCode","onMasterSelect","id","selectedMasters","index","indexOf","splice","push","saveOnClick","edit","save","saveTestimonials","message","e","error","editTestimonials","pageSizeChange","page","pageSize","changeTab","onSelectAll","value","array","map","h","cat_id","onSelectOne","array1","length","mainPositionOnChange","findIndex","a","catId","actionOnChange","goOnClick","selectedHomeCatIdsArr","inactiveCategory","filter","changePosition","values","width","backgroundColor","height","color","border","marginTop","margin","textAlign","display","target","cursor","files","borderRadius","fontSize","fontWeight","m","exa_cat_id","padding","exa_cat_name"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Modal, Button, Checkbox, Spin, notification, Pagination, Tabs, Select } from 'antd';\r\nimport HeaderDashboard from '../../../components/header/HeaderDashboard';\r\nimport Sidebar from '../../../components/sections/sidebar';\r\nimport TableTestimonials from '../../../components/tables/Testimonials';\r\n\r\nimport { getAllTestimonials, getInactiveTestimonials } from '../../../store/Testimonials/action';\r\nimport TestimonialsRepository from '../../../repositories/TestimonialsRepository';\r\n\r\nconst Home = (props) => {\r\n\r\n    const { TabPane } = Tabs;\r\n    const { Option } = Select;\r\n    const dispatch = useDispatch();\r\n    const valueRef = React.createRef()\r\n    const { auth } = useSelector(({ auth }) => auth);\r\n    const { allTestimonials, totalActiveCount, inactiveTestimonials, totalInactiveCount } = useSelector(({ Testimonials }) => Testimonials);\r\n\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [masterCategory, setMasterCategory] = useState([]);\r\n    const [name, setName] = useState('');\r\n    const [position, setPosition] = useState('');\r\n    const [image, setImage] = useState('');\r\n    const [selectedMasterIds, setSelectedMasterIds] = useState([]);\r\n    const [selectedHomeCatId, setSelectedHomeCatId] = useState('');\r\n    const [errors, setErrors] = useState({});\r\n    const [loader, setLoader] = useState(false);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [pageSizeTotal, setPageSizeTotal] = useState(10);\r\n    const [tab, setTab] = useState('active');\r\n    const [selectAll, setSelectAll] = useState(false);\r\n    const [selectedHomeCatIds, setSelectedHomeCatIds] = useState([]);\r\n    const [action, setAction] = useState('');\r\n    const [Content, setContent] = useState('0');\r\n    const [Designation,setDesignation] =useState('')\r\n    const [posotionChangeCategorys, setPosotionChangeCategorys] = useState([]);\r\n    const [buttonLoader, setBttonLoader] = useState(false);\r\n\r\n    useEffect(() => {\r\n        let local = JSON.parse(localStorage.getItem('persist:QuestionCloudAdmin'));\r\n        let localAuth = local && local.auth ? JSON.parse(local.auth) : {};\r\n        if (localAuth && !localAuth.isLoggedIn) {\r\n            window.location.href = \"/\";\r\n        }\r\n    }, [auth]);\r\n\r\n    useEffect(() => {\r\n        setLoader(true);\r\n        let ctr = {};\r\n        ctr._start = currentPage === 1 ? 0 : ((currentPage - 1) * pageSizeTotal);\r\n        ctr._limit = pageSizeTotal;\r\n        dispatch(getAllTestimonials(ctr));\r\n        dispatch(getInactiveTestimonials(ctr));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setLoader(false);\r\n    }, [allTestimonials, inactiveTestimonials]);\r\n\r\n    const addModalOnClick = async () => {\r\n        setLoader(true);\r\n        setName('');\r\n        setPosition('');\r\n        setSelectedMasterIds([]);\r\n        setSelectedHomeCatId('');\r\n        setImage('');\r\n        setLoader(false);\r\n        setShowModal(true);\r\n    }\r\n\r\n    const deleteOnetestimonials = (data) => {\r\n        Modal.confirm({\r\n            title: 'Confirm',\r\n            content: 'Do you want to delete this Testimonials.',\r\n            okText: 'Yes',\r\n            onOk: () => deleteOneCategory(data),\r\n            cancelText: 'No',\r\n        });\r\n    }\r\n\r\n    const deleteOneCategory = async (data) => {\r\n        let obj = { \"catId\": [data.testimonials_id] };\r\n        await TestimonialsRepository.deleteCategory(obj);\r\n        Modal.success({\r\n            title: 'Testimonials Deleted Successfully.'\r\n        });\r\n        let ctr = {};\r\n                ctr._start = currentPage === 1 ? 0 : ((currentPage - 1) * pageSizeTotal);\r\n                ctr._limit = pageSizeTotal;\r\n                dispatch(getAllTestimonials(ctr));\r\n                dispatch(getInactiveTestimonials(ctr));\r\n    }\r\n\r\n    const editModalOnClick = async (data) => {\r\n        setLoader(true);\r\n        setName(data.testimonials_name);\r\n        setPosition(data.testimonials_pos);\r\n        setSelectedHomeCatId(data.testimonials_id);\r\n        setImage(data.testimonials_image);\r\n        setContent(data.testimonials_content);\r\n        setDesignation(data.testimonials_dis)\r\n        setLoader(false);\r\n        setShowModal(true);\r\n    }\r\n\r\n    const closeModalOnClick = () => {\r\n        setName('');\r\n        setPosition('');\r\n        setSelectedHomeCatId('');\r\n        setDesignation('')\r\n        setImage('');\r\n        setContent('');\r\n        setErrors({});\r\n        setShowModal(false);\r\n    }\r\n\r\n    const nameOnChange = (name) => {\r\n        let errorObj = { ...errors };\r\n        errorObj['name'] = '';\r\n        setName(name);\r\n        setErrors(errorObj);\r\n    }\r\n    const ContentOnChange = (Content) => {\r\n        let errorObj = { ...errors };\r\n        errorObj['Content'] = '';\r\n        setContent(Content);\r\n        setErrors(errorObj);\r\n    }\r\n    const DesignationOnChange = (Designation) => {\r\n        let errorObj = { ...errors };\r\n        errorObj['Designation'] = '';\r\n        setDesignation(Designation);\r\n        setErrors(errorObj);\r\n    }\r\n\r\n    const positionOnChange = (position) => {\r\n        const re = /^[0-9\\b]+$/; //rules\r\n        if (position === \"\" || re.test(position)) {\r\n            let errorObj = { ...errors };\r\n            errorObj['position'] = '';\r\n            setPosition(position);\r\n            setErrors(errorObj);\r\n        }\r\n    }\r\n\r\n    const addImage = () => {\r\n        valueRef.current.click();\r\n    }\r\n\r\n    const imageOnChange = async (file) => {\r\n        let errorObj = { ...errors };\r\n        setBttonLoader(true);\r\n        setImage('');\r\n        const formData = new FormData();\r\n        formData.append('testimonials', file);\r\n        let result = await TestimonialsRepository.imageUpload(formData);\r\n        if (result && result.statusCode === 200) {\r\n            setImage(result.data);\r\n            setBttonLoader(false);\r\n        }\r\n        errorObj['CatImage'] = '';\r\n        setErrors(errorObj);\r\n    }\r\n\r\n    const onMasterSelect = (id) => {\r\n        let selectedMasters = [...selectedMasterIds];\r\n        let index = selectedMasters.indexOf(id);\r\n        if (index >= 0) {\r\n            selectedMasters.splice(index, 1);\r\n        } else {\r\n            selectedMasters.push(id);\r\n        }\r\n        setSelectedMasterIds(selectedMasters);\r\n    }\r\n\r\n    const saveOnClick = () => {\r\n        if (selectedHomeCatId) {\r\n            edit();\r\n        } else {\r\n            save();\r\n        }\r\n    }\r\n\r\n    const save = async () => {\r\n        if (name  && position && selectedMasterIds && image) {\r\n            setLoader(true);\r\n            let obj = {\r\n                \"testimonials_image\": image,\r\n                \"testimonials_name\": name,\r\n                \"testimonials_dis\": Designation,//Designation\r\n                \"testimonials_pos\": position,//position\r\n                \"testimonials_content\": Content,//content\r\n            }\r\n            try {\r\n                await TestimonialsRepository.saveTestimonials(obj);\r\n                notification.success({\r\n                    message: 'Testimonials Added Successfully.'\r\n                });\r\n                let ctr = {};\r\n                ctr._start = currentPage === 1 ? 0 : ((currentPage - 1) * pageSizeTotal);\r\n                ctr._limit = pageSizeTotal;\r\n                dispatch(getAllTestimonials(ctr));\r\n                dispatch(getInactiveTestimonials(ctr));\r\n                closeModalOnClick();\r\n            } catch (e) {\r\n                notification.error({\r\n                    message: 'Testimonials Added Failed.'\r\n                });\r\n            }\r\n        } else {\r\n            let errorObj = { ...errors };\r\n            if (!name) errorObj['name'] = \"Please Enter Title\";\r\n            if (!position) errorObj['position'] = \"Please Enter Position\";\r\n            if (!image) errorObj['CatImage'] = \"Please Select Image\";\r\n            setErrors(errorObj);\r\n        }\r\n    }\r\n\r\n    const edit = async () => {\r\n        if (name  && position && selectedHomeCatId && Content &&  image) {\r\n            setLoader(true);\r\n            let obj = {\r\n                \"testimonials_id\": selectedHomeCatId,//categoryId\r\n                \"testimonials_image\": image,//CatImage\r\n                \"testimonials_name\": name,//categoryName\r\n                \"testimonials_dis\": Designation,//Designation\r\n                \"testimonials_pos\": position,//position\r\n                \"testimonials_content\": Content,//content\r\n            }\r\n            try {\r\n                await TestimonialsRepository.editTestimonials(selectedHomeCatId, obj);\r\n                notification.success({\r\n                    message: 'Testimonials Updated Successfully.'\r\n                });\r\n                let ctr = {};\r\n                ctr._start = currentPage === 1 ? 0 : ((currentPage - 1) * pageSizeTotal);\r\n                ctr._limit = pageSizeTotal;\r\n                dispatch(getAllTestimonials(ctr));\r\n                dispatch(getInactiveTestimonials(ctr));\r\n                closeModalOnClick();\r\n            } catch (e) {\r\n                notification.error({\r\n                    message: 'Testimonials  Updated Failed.'\r\n                });\r\n            }\r\n        } else {\r\n            let errorObj = { ...errors };\r\n            if (!name) errorObj['name'] = \"Please Enter Title\";\r\n            if (!position) errorObj['position'] = \"Please Enter Position\";\r\n            setErrors(errorObj);\r\n        }\r\n    }\r\n\r\n    const pageSizeChange = async (page, pageSize) => {\r\n        setLoader(true);\r\n        let ctr = {};\r\n        ctr._start = page === 1 ? 0 : ((page - 1) * pageSize);\r\n        ctr._limit = pageSize;\r\n        if (tab === \"active\") {\r\n            dispatch(getAllTestimonials(ctr));\r\n        } else {\r\n            dispatch(getInactiveTestimonials(ctr));\r\n        }\r\n        setCurrentPage(page);\r\n        setPageSizeTotal(pageSize);\r\n    }\r\n\r\n    const changeTab = (tab) => {\r\n        setLoader(true);\r\n        let ctr = {};\r\n        ctr._start = 0;\r\n        ctr._limit = 10;\r\n        if (tab === \"active\") {\r\n            dispatch(getAllTestimonials(ctr));\r\n        } else {\r\n            dispatch(getInactiveTestimonials(ctr));\r\n        }\r\n        setCurrentPage(1);\r\n        setPageSizeTotal(10);\r\n        setSelectedHomeCatIds([]);\r\n        setSelectAll(false);\r\n        setAction('');\r\n        setPosotionChangeCategorys([]);\r\n        setTab(tab);\r\n    }\r\n\r\n    const onSelectAll = (value) => {\r\n        let array = [];\r\n        if (value) {\r\n            if (tab === 'active') {\r\n                array = allTestimonials.map(h => h.cat_id);\r\n            } else {\r\n                array = inactiveTestimonials.map(h => h.cat_id);\r\n            }\r\n        }\r\n        setSelectedHomeCatIds(array);\r\n        setSelectAll(value);\r\n    }\r\n\r\n    const onSelectOne = (id) => {\r\n        let array = [...selectedHomeCatIds];\r\n        let array1 = tab === 'active' ? [...allTestimonials] : [...inactiveTestimonials];\r\n        let index = array.indexOf(id);\r\n        if (index >= 0) {\r\n            array.splice(index, 1);\r\n        } else {\r\n            array.push(id);\r\n        }\r\n        if (array.length === array1.length) {\r\n            setSelectAll(true);\r\n        } else {\r\n            setSelectAll(false);\r\n        }\r\n        setSelectedHomeCatIds(array);\r\n    }\r\n\r\n    const mainPositionOnChange = (id, position) => {\r\n        let array = [...posotionChangeCategorys];\r\n        const re = /^[0-9\\b]+$/; //rules\r\n        if (position === \"\" || re.test(position)) {\r\n            let index = array.findIndex(a => a.catId === id);\r\n            if (index >= 0) {\r\n                array[index]['position'] = position;\r\n            } else {\r\n                array.push({\r\n                    catId: id,\r\n                    position: position\r\n                });\r\n            }\r\n            setPosotionChangeCategorys(array);\r\n        }\r\n    }\r\n\r\n\r\n    const actionOnChange = (action) => {\r\n        setAction(action);\r\n    }\r\n\r\n    const goOnClick = async () => {\r\n        let selectedHomeCatIdsArr = [...selectedHomeCatIds];\r\n        let obj = {\r\n            catId: selectedHomeCatIdsArr\r\n        };\r\n        if (selectedHomeCatIdsArr && selectedHomeCatIdsArr.length > 0 && action) {\r\n            setLoader(true);\r\n            if (action === \"active\") {\r\n                obj['status'] = 'Y';\r\n                await TestimonialsRepository.inactiveCategory(obj);\r\n                notification.success({\r\n                    message: 'Testimonials  Updated Successfully.'\r\n                });\r\n            }\r\n            if (action === \"inactive\") {\r\n                obj['status'] = 'N';\r\n                await TestimonialsRepository.inactiveCategory(obj);\r\n                notification.success({\r\n                    message: 'Testimonials  Updated Successfully.'\r\n                });\r\n            }\r\n            if (action === \"delete\") {\r\n                await TestimonialsRepository.deleteCategory(obj);\r\n                notification.success({\r\n                    message: 'Testimonials  Deleted Successfully.'\r\n                });\r\n            }\r\n            if (action === \"position\") {\r\n                let array = [...posotionChangeCategorys];\r\n                array = array.filter(a => selectedHomeCatIdsArr.indexOf(a.catId) >= 0);\r\n                await TestimonialsRepository.changePosition({ values: array });\r\n                notification.success({\r\n                    message: 'Testimonials  Deleted Successfully.'\r\n                });\r\n            }\r\n            setSelectedHomeCatIds([]);\r\n            setPosotionChangeCategorys([]);\r\n            let ctr = {};\r\n            ctr._start = currentPage === 1 ? 0 : ((currentPage - 1) * pageSizeTotal);\r\n            ctr._limit = pageSizeTotal;\r\n            dispatch(getAllTestimonials(ctr));\r\n            dispatch(getInactiveTestimonials(ctr));\r\n        } else {\r\n            if (!action) {\r\n                Modal.error({\r\n                    title: 'Please Select Action'\r\n                });\r\n            } else if (!selectedHomeCatIdsArr.length) {\r\n                Modal.error({\r\n                    title: 'Please Select One Category'\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Spin spinning={loader} tip={'Loading...'}>\r\n                <HeaderDashboard />\r\n                <div className=\"dashboard-container\">\r\n                    <div className=\"row no-gutters\">\r\n                        <div className=\"col-md-2\">\r\n                            <div id=\"sidebar\">\r\n                                <Sidebar page={'Testimonials'} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-10\">\r\n                            <div className=\"content content-width\" id=\"style-2\">\r\n                                <Tabs defaultActiveKey={tab} onChange={changeTab}>\r\n                                    <TabPane tab={`Active ${totalActiveCount}`} key=\"active\">\r\n                                    </TabPane>\r\n                                    <TabPane tab={`Inactive ${totalInactiveCount}`} key=\"inactive\">\r\n                                    </TabPane>\r\n                                </Tabs>\r\n                                <div className='row'>\r\n                                    <div className=\"col-md-4\">\r\n                                        <div className=\"form-group\">\r\n                                            <Select\r\n                                                onChange={actionOnChange}\r\n                                                placeholder=\"Select Action\"\r\n                                                className=\"ps-ant-dropdown\"\r\n                                                style={{ width: 200 }}\r\n                                                value={action}\r\n                                            >\r\n                                                {tab === 'active' && <Option value=\"inactive\">Inactive</Option>}\r\n                                                {tab === 'inactive' && <Option value=\"active\">Active</Option>}\r\n                                                <Option value=\"position\">Position</Option>\r\n                                                <Option value=\"delete\">Delete</Option>\r\n                                            </Select>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-2\">\r\n                                        <button onClick={goOnClick} style={{ backgroundColor: '#cd4040', width: 100, height: 35, color: '#fff', border: 'none' }}>\r\n                                            Go\r\n                                        </button>\r\n                                    </div>\r\n                                    <div className=\"col-md-6 text-right\">\r\n                                        <button onClick={addModalOnClick} style={{ backgroundColor: '#80bc00', width: 100, height: 35, color: '#fff', border: 'none' }}>\r\n                                            <i className=\"fas fa-plus\" /> Add\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                                <div style={{ marginTop: 20 }}>\r\n                                    <TableTestimonials\r\n                                        allTestimonials={tab === \"active\" ? allTestimonials : inactiveTestimonials}\r\n                                        editModalOnClick={editModalOnClick}\r\n                                        deleteOnetestimonials={deleteOnetestimonials}\r\n                                        onSelectAll={onSelectAll}\r\n                                        onSelectOne={onSelectOne}\r\n                                        selectAll={selectAll}\r\n                                        selectedHomeCatIds={selectedHomeCatIds}\r\n                                        mainPositionOnChange={mainPositionOnChange}\r\n                                        posotionChangeCategorys={posotionChangeCategorys}\r\n                                    />\r\n                                </div>\r\n                                <div style={totalActiveCount > 0 ? { margin: '10px auto', textAlign: 'right' } : { display: 'none' }}>\r\n                                    <Pagination\r\n                                        total={tab === \"active\" ? totalActiveCount : totalInactiveCount}\r\n                                        defaultCurrent={1}\r\n                                        current={currentPage}\r\n                                        defaultPageSize={10}\r\n                                        pageSize={pageSizeTotal}\r\n                                        pageSizeOptions={['10', '20', '30']}\r\n                                        onChange={pageSizeChange}\r\n                                        showSizeChanger={true}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Modal\r\n                    visible={showModal}\r\n                    okText={'Save'}\r\n                    onCancel={closeModalOnClick}\r\n                    title={selectedHomeCatId ? \"Edit Testimonials \" : \"Add New Testimonials \"}\r\n                    width={800}\r\n                    onOk={saveOnClick}\r\n                >\r\n                    <Spin spinning={loader} tip={'Loading...'}>\r\n                        <div className='row'>\r\n                            <div className=\"col-md-8\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Name <span style={{ color: 'red' }}>*</span></label>\r\n                                    <input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        value={name}\r\n                                        placeholder=\"\"\r\n                                        onChange={(e) => nameOnChange(e.target.value)}\r\n                                    />\r\n                                    {errors['name'] &&\r\n                                        <span style={{ color: 'red' }}>{errors['name']}</span>\r\n                                    }\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Designation <span style={{ color: 'red' }}>*</span></label>\r\n                                    <input \r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        value={Designation}\r\n                                        placeholder=\"\"\r\n                                        onChange={(e) => DesignationOnChange(e.target.value)}\r\n                                   />\r\n                                    {errors['Designation'] &&\r\n                                        <span style={{ color: 'red' }}>{errors['Designation']}</span>\r\n                                    }\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Content <span style={{ color: 'red' }}>*</span></label>\r\n                                    <textarea style={{ height: '150px' }}\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        value={Content}\r\n                                        placeholder=\"\"\r\n                                        onChange={(e) => ContentOnChange(e.target.value)}\r\n                                    > </textarea>\r\n                                    {errors['Content'] &&\r\n                                        <span style={{ color: 'red' }}>{errors['Content']}</span>\r\n                                    }\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Position <span style={{ color: 'red' }}>*</span></label>\r\n                                    <input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        value={position}\r\n                                        placeholder=\"\"\r\n                                        onChange={(e) => positionOnChange(e.target.value)}\r\n                                    />\r\n                                    {errors['position'] &&\r\n                                        <span style={{ color: 'red' }}>{errors['position']}</span>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-4\">\r\n                                {image &&\r\n                                    <div className=\"form-group\">\r\n                                        <label>Logo <span style={{ color: 'red' }}>*</span></label>\r\n                                        <div>\r\n                                            <img\r\n                                                src={image}\r\n                                                onClick={addImage}\r\n                                                style={{ cursor: 'pointer' }}\r\n                                                width={'90%'}\r\n                                                height={200}\r\n                                            />\r\n                                            <input\r\n                                                ref={valueRef}\r\n                                                type=\"file\"\r\n                                                style={{ display: \"none\" }}\r\n                                                className=\"mb-1\"\r\n                                                accept=\"image/*\"\r\n                                                onChange={(e) => imageOnChange(e.target.files[0])}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n                                {!image &&\r\n                                    <div className=\"form-group\">\r\n                                        <label>Logo <span style={{ color: 'red' }}>*</span></label>\r\n                                        <Button\r\n                                            style={{ width: '100%', height: 200, borderRadius: 15, border: 'none', backgroundColor: '#ededed' }}\r\n                                            onClick={addImage}\r\n                                            loading={buttonLoader}\r\n                                            size='large'\r\n                                        >\r\n                                            <i\r\n                                                style={!buttonLoader ? { fontSize: 20, fontWeight: 'bold' } : { display: 'none' }}\r\n                                                onClick={addImage}\r\n                                                className=\"fas fa-plus\"\r\n                                            />\r\n                                        </Button>\r\n                                        <input\r\n                                            ref={valueRef}\r\n                                            type=\"file\"\r\n                                            style={{ display: \"none\" }}\r\n                                            className=\"mb-1\"\r\n                                            accept=\"image/*\"\r\n                                            onChange={(e) => imageOnChange(e.target.files[0])}\r\n                                        />\r\n                                    </div>\r\n\r\n                                }\r\n                                {errors['CatImage'] &&\r\n                                    <span style={{ color: 'red' }}>{errors['CatImage']}</span>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"row no-gutters\">\r\n                                {masterCategory.map(m => {\r\n                                    return (\r\n                                        <div className=\"col-lg-4\" key={m.exa_cat_id} style={{ padding: 10 }}>\r\n                                            <div className=\"row no-gutters\">\r\n                                                <div className=\"col-lg-2\">\r\n                                                    <Checkbox\r\n                                                        // id={'feat' + obj.cat_id} \r\n                                                        checked={selectedMasterIds.indexOf(m.exa_cat_id) >= 0}\r\n                                                        onChange={() => onMasterSelect(m.exa_cat_id)}\r\n                                                        value={m.exa_cat_id}\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"col-lg-10\">\r\n                                                    <span>{m.exa_cat_name}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                    </Spin>\r\n                </Modal>\r\n            </Spin>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}