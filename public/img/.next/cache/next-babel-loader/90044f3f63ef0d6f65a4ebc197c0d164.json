{"ast":null,"code":"var _jsxFileName = \"D:\\\\Question_cloud\\\\question_cloud_admin_web_new\\\\pages\\\\statecategory\\\\view\\\\index.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Modal, Button, Checkbox, Spin, notification, Pagination, Tabs, Select } from 'antd';\nimport HeaderDashboard from '../../../components/header/HeaderDashboard';\nimport Sidebar from '../../../components/sections/sidebar';\nimport TableState from '../../../components/tables/State';\nimport { getAllState, getInactiveState } from '../../../store/State/action';\nimport LocationControllerRepository from '../../../repositories/LocationControllerRepository';\n\nconst Home = props => {\n  const {\n    TabPane\n  } = Tabs;\n  const {\n    Option\n  } = Select;\n  const dispatch = useDispatch();\n  const {\n    auth\n  } = useSelector(({\n    auth\n  }) => auth);\n  const {\n    allState,\n    totalActiveCount,\n    inactiveState,\n    totalInactiveCount\n  } = useSelector(({\n    State\n  }) => State);\n  const {\n    0: showModal,\n    1: setShowModal\n  } = useState(false);\n  const {\n    0: statename,\n    1: setStatename\n  } = useState('');\n  const {\n    0: selectedHomeCatId,\n    1: setSelectedHomeCatId\n  } = useState('');\n  const {\n    0: errors,\n    1: setErrors\n  } = useState({});\n  const {\n    0: loader,\n    1: setLoader\n  } = useState(false);\n  const {\n    0: currentPage,\n    1: setCurrentPage\n  } = useState(1);\n  const {\n    0: pageSizeTotal,\n    1: setPageSizeTotal\n  } = useState(10);\n  const {\n    0: tab,\n    1: setTab\n  } = useState('active');\n  const {\n    0: selectAll,\n    1: setSelectAll\n  } = useState(false);\n  const {\n    0: selectedHomeCatIds,\n    1: setSelectedHomeCatIds\n  } = useState([]);\n  const {\n    0: action,\n    1: setAction\n  } = useState('');\n  const {\n    0: Country,\n    1: setCountry\n  } = useState('');\n  const {\n    0: countrycode,\n    1: setCountrycode\n  } = useState('');\n  const {\n    0: search,\n    1: setsearch\n  } = useState('');\n  useEffect(() => {\n    let local = JSON.parse(localStorage.getItem('persist:QuestionCloudAdmin'));\n    let localAuth = local && local.auth ? JSON.parse(local.auth) : {};\n\n    if (localAuth && !localAuth.isLoggedIn) {\n      window.location.href = \"/\";\n    }\n  }, [auth]);\n  useEffect(() => {\n    setLoader(true);\n    let ctr = {};\n    ctr._start = currentPage === 1 ? 0 : (currentPage - 1) * pageSizeTotal;\n    ctr._limit = pageSizeTotal;\n    dispatch(getAllState(ctr));\n    dispatch(getInactiveState(ctr));\n  }, []);\n  useEffect(() => {\n    setLoader(false);\n  }, [allState, inactiveState]);\n\n  const addModalOnClick = async () => {\n    setLoader(true);\n    setStatename('');\n    setCountrycode('');\n    setSelectedHomeCatId('');\n    setLoader(false);\n    setShowModal(true);\n  };\n\n  const deleteOneState = data => {\n    Modal.confirm({\n      title: 'Confirm',\n      content: 'Do you want to delete this State.',\n      okText: 'Yes',\n      onOk: () => deleteOneCategory(data),\n      cancelText: 'No'\n    });\n  };\n\n  const deleteOneCategory = async data => {\n    let obj = {\n      \"AnnouncementsId\": [data.state_id]\n    };\n    await LocationControllerRepository.deleteCategory(obj);\n    Modal.success({\n      title: 'State Deleted Successfully.'\n    });\n    let ctr = {};\n    ctr._start = currentPage === 1 ? 0 : (currentPage - 1) * pageSizeTotal;\n    ctr._limit = pageSizeTotal;\n    dispatch(getAllState(ctr));\n    dispatch(getInactiveState(ctr));\n  };\n\n  const editModalOnClick = async data => {\n    setLoader(true);\n    setSelectedHomeCatId(data.state_id);\n    setCountry(data.Country);\n    setStatename(data.state_name);\n    setCountrycode(data.country_code);\n    setLoader(false);\n    setShowModal(true);\n  };\n\n  const closeModalOnClick = () => {\n    setStatename('');\n    setCountrycode('');\n    setCountrycode('');\n    setSelectedHomeCatId('');\n    setCountry('');\n    setErrors({});\n    setShowModal(false);\n  };\n\n  const CountryOnChange = Country => {\n    let errorObj = _objectSpread({}, errors);\n\n    errorObj['Country'] = '';\n    setCountry(Country);\n    setErrors(errorObj);\n  };\n\n  const statenameOnChange = statename => {\n    let errorObj = _objectSpread({}, errors);\n\n    errorObj['statename'] = '';\n    setStatename(statename);\n    setErrors(errorObj);\n  };\n\n  const countrycodeOnChange = countrycode => {\n    let errorObj = _objectSpread({}, errors);\n\n    errorObj['countrycode'] = '';\n    setCountrycode(countrycode);\n    setErrors(errorObj);\n  };\n\n  const saveOnClick = () => {\n    if (selectedHomeCatId) {\n      edit();\n    } else {\n      save();\n    }\n  };\n\n  const save = async () => {\n    if (statename && selectedHomeCatId) {\n      setLoader(true);\n      let obj = {\n        \"country_id\": selectedHomeCatId,\n        \"state_name\": statename,\n        \"country_code\": countrycode\n      };\n\n      try {\n        await LocationControllerRepository.saveState(obj);\n        notification.success({\n          message: 'State Added Successfully.'\n        });\n        let ctr = {};\n        ctr._start = currentPage === 1 ? 0 : (currentPage - 1) * pageSizeTotal;\n        ctr._limit = pageSizeTotal;\n\n        if (search) {\n          ctr.search = search;\n        }\n\n        dispatch(getAllState(ctr));\n        dispatch(getInactiveState(ctr));\n        closeModalOnClick();\n      } catch (e) {\n        notification.error({\n          message: 'State Added Failed.'\n        });\n      }\n    } else {\n      let errorObj = _objectSpread({}, errors);\n\n      if (!statename) errorObj['statename'] = \"Please Enter statename\";\n      setErrors(errorObj);\n    }\n  };\n\n  const edit = async () => {\n    if (statename && selectedHomeCatId) {\n      setLoader(true);\n      let obj = {\n        \"country_id\": selectedHomeCatId,\n        \"state_name\": statename,\n        \"country_code\": countrycode\n      };\n\n      try {\n        await LocationControllerRepository.editState(selectedHomeCatId, obj);\n        notification.success({\n          message: 'State Updated Successfully.'\n        });\n        let ctr = {};\n        ctr._start = currentPage === 1 ? 0 : (currentPage - 1) * pageSizeTotal;\n        ctr._limit = pageSizeTotal;\n        dispatch(getAllState(ctr));\n        dispatch(getInactiveState(ctr));\n        closeModalOnClick();\n      } catch (e) {\n        notification.error({\n          message: 'State  Updated Failed.'\n        });\n      }\n    } else {\n      let errorObj = _objectSpread({}, errors);\n\n      if (!statename) errorObj['statename'] = \"Please Enter statename\";\n      setErrors(errorObj);\n    }\n  };\n\n  const searchOnChange = search => {\n    console.log(search, \"12345\");\n    setLoader(true);\n    let ctr = {};\n    ctr._start = 0;\n    ctr._limit = pageSizeTotal;\n    ctr.search = search;\n\n    if (search) {\n      ctr.search = search;\n    }\n\n    console.log(ctr, \"12345\");\n\n    if (tab === 'active') {\n      dispatch(getAllState(ctr));\n    } else {\n      dispatch(getInactiveState(ctr));\n    }\n\n    setsearch(search);\n    setCurrentPage(1);\n  };\n\n  const pageSizeChange = async (page, pageSize) => {\n    setLoader(true);\n    let ctr = {};\n    ctr._start = page === 1 ? 0 : (page - 1) * pageSize;\n    ctr._limit = pageSize;\n\n    if (tab === \"active\") {\n      dispatch(getAllState(ctr));\n    } else {\n      dispatch(getInactiveState(ctr));\n    }\n\n    setCurrentPage(page);\n    setPageSizeTotal(pageSize);\n  };\n\n  const changeTab = tab => {\n    setLoader(true);\n    let ctr = {};\n    ctr._start = 0;\n    ctr._limit = 10;\n\n    if (tab === \"active\") {\n      dispatch(getAllState(ctr));\n    } else {\n      dispatch(getInactiveState(ctr));\n    }\n\n    setCurrentPage(1);\n    setPageSizeTotal(10);\n    setSelectedHomeCatIds([]);\n    setSelectAll(false);\n    setAction('');\n    setsearch('');\n    setTab(tab);\n  };\n\n  const onSelectAll = value => {\n    let array = [];\n\n    if (value) {\n      if (tab === 'active') {\n        array = allState.map(h => h.state_id);\n      } else {\n        array = inactiveState.map(h => h.state_id);\n      }\n    }\n\n    setSelectedHomeCatIds(array);\n    setSelectAll(value);\n  };\n\n  const onSelectOne = id => {\n    let array = [...selectedHomeCatIds];\n    let array1 = tab === 'active' ? [...allState] : [...inactiveState];\n    let index = array.indexOf(id);\n\n    if (index >= 0) {\n      array.splice(index, 1);\n    } else {\n      array.push(id);\n    }\n\n    if (array.length === array1.length) {\n      setSelectAll(true);\n    } else {\n      setSelectAll(false);\n    }\n\n    setSelectedHomeCatIds(array);\n  };\n\n  const actionOnChange = action => {\n    setAction(action);\n  };\n\n  const goOnClick = async () => {\n    let selectedHomeCatIdsArr = [...selectedHomeCatIds];\n    let obj = {\n      cityId: selectedHomeCatIdsArr\n    };\n\n    if (selectedHomeCatIdsArr && selectedHomeCatIdsArr.length > 0 && action) {\n      setLoader(true);\n\n      if (action === \"active\") {\n        obj['status'] = 'Y';\n        await LocationControllerRepository.inactiveCategory(obj);\n        notification.success({\n          message: 'State  Updated Successfully.'\n        });\n      }\n\n      if (action === \"inactive\") {\n        obj['status'] = 'N';\n        await LocationControllerRepository.inactiveCategory(obj);\n        notification.success({\n          message: 'State  Updated Successfully.'\n        });\n      }\n\n      if (action === \"delete\") {\n        await LocationControllerRepository.deleteCategory(obj);\n        notification.success({\n          message: 'State  Deleted Successfully.'\n        });\n      }\n\n      setSelectedHomeCatIds([]);\n      let ctr = {};\n      ctr._start = currentPage === 1 ? 0 : (currentPage - 1) * pageSizeTotal;\n      ctr._limit = pageSizeTotal;\n\n      if (search) {\n        ctr.search = search;\n      }\n\n      dispatch(getAllState(ctr));\n      dispatch(getInactiveState(ctr));\n    } else {\n      if (!action) {\n        Modal.error({\n          title: 'Please Select Action'\n        });\n      } else if (!selectedHomeCatIdsArr.length) {\n        Modal.error({\n          title: 'Please Select One Category'\n        });\n      }\n    }\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 9\n    }\n  }, __jsx(Spin, {\n    spinning: loader,\n    tip: 'Loading...',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 13\n    }\n  }, __jsx(HeaderDashboard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    className: \"dashboard-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"row no-gutters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    id: \"sidebar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 29\n    }\n  }, __jsx(Sidebar, {\n    page: 'State',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 33\n    }\n  }))), __jsx(\"div\", {\n    className: \"col-md-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    className: \"content content-width\",\n    id: \"style-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 29\n    }\n  }, __jsx(Tabs, {\n    defaultActiveKey: tab,\n    onChange: changeTab,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 33\n    }\n  }, __jsx(TabPane, {\n    tab: `Active ${totalActiveCount}`,\n    key: \"active\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 37\n    }\n  }), __jsx(TabPane, {\n    tab: `Inactive ${totalInactiveCount}`,\n    key: \"inactive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 37\n    }\n  })), __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 33\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 37\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 41\n    }\n  }, __jsx(Select, {\n    onChange: actionOnChange,\n    placeholder: \"Select Action\",\n    className: \"ps-ant-dropdown\",\n    style: {\n      width: 200\n    },\n    value: action,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 45\n    }\n  }, tab === 'active' && __jsx(Option, {\n    value: \"inactive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 70\n    }\n  }, \"Inactive\"), tab === 'inactive' && __jsx(Option, {\n    value: \"active\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 72\n    }\n  }, \"Active\"), __jsx(Option, {\n    value: \"delete\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 49\n    }\n  }, \"Delete\")))), __jsx(\"div\", {\n    className: \"col-md-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 37\n    }\n  }, __jsx(\"button\", {\n    onClick: goOnClick,\n    style: {\n      backgroundColor: '#cd4040',\n      width: 100,\n      height: 35,\n      color: '#fff',\n      border: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 41\n    }\n  }, \"Go\")), __jsx(\"div\", {\n    className: \"col-md-6 text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 37\n    }\n  }, __jsx(\"button\", {\n    onClick: addModalOnClick,\n    style: {\n      backgroundColor: '#80bc00',\n      width: 100,\n      height: 35,\n      color: '#fff',\n      border: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 41\n    }\n  }, __jsx(\"i\", {\n    className: \"fas fa-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 45\n    }\n  }), \" Add\"))), __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 33\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 37\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 41\n    }\n  }, __jsx(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    value: search,\n    placeholder: \"search\",\n    onChange: e => searchOnChange(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 45\n    }\n  })))), __jsx(\"div\", {\n    style: {\n      marginTop: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 33\n    }\n  }, __jsx(TableState, {\n    allState: tab === \"active\" ? allState : inactiveState,\n    editModalOnClick: editModalOnClick,\n    deleteOneState: deleteOneState,\n    onSelectAll: onSelectAll,\n    onSelectOne: onSelectOne,\n    selectAll: selectAll,\n    selectedHomeCatIds: selectedHomeCatIds,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 37\n    }\n  })), __jsx(\"div\", {\n    style: totalActiveCount > 0 ? {\n      margin: '10px auto',\n      textAlign: 'right'\n    } : {\n      display: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 33\n    }\n  }, __jsx(Pagination, {\n    total: tab === \"active\" ? totalActiveCount : totalInactiveCount,\n    defaultCurrent: 1,\n    current: currentPage,\n    defaultPageSize: 10,\n    pageSize: pageSizeTotal,\n    pageSizeOptions: ['10', '20', '30'],\n    onChange: pageSizeChange,\n    showSizeChanger: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 37\n    }\n  })))))), __jsx(Modal, {\n    visible: showModal,\n    okText: 'Save',\n    onCancel: closeModalOnClick,\n    title: selectedHomeCatId ? \"Edit Announcements \" : \"Add New Announcements \",\n    width: 800,\n    onOk: saveOnClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 17\n    }\n  }, __jsx(Spin, {\n    spinning: loader,\n    tip: 'Loading...',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 29\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 33\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 37\n    }\n  }, \"Country \", __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 52\n    }\n  }, \"*\")), __jsx(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    value: Country,\n    placeholder: \"\",\n    onChange: e => CountryOnChange(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 37\n    }\n  }), errors['Country'] && __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 41\n    }\n  }, errors['Country'])), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 33\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 37\n    }\n  }, \"statename \", __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 54\n    }\n  }, \"*\")), __jsx(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    value: statename,\n    placeholder: \"\",\n    onChange: e => statenameOnChange(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 37\n    }\n  }), errors['statename'] && __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 41\n    }\n  }, errors['statename'])), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 33\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 37\n    }\n  }, \"countrycode \", __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 56\n    }\n  }, \"*\")), __jsx(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    value: countrycode,\n    placeholder: \"\",\n    onChange: e => countrycodeOnChange(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 37\n    }\n  }), errors['countrycode'] && __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 41\n    }\n  }, errors['countrycode']))))))));\n};\n\nexport default Home;","map":{"version":3,"sources":["D:/Question_cloud/question_cloud_admin_web_new/pages/statecategory/view/index.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","Modal","Button","Checkbox","Spin","notification","Pagination","Tabs","Select","HeaderDashboard","Sidebar","TableState","getAllState","getInactiveState","LocationControllerRepository","Home","props","TabPane","Option","dispatch","auth","allState","totalActiveCount","inactiveState","totalInactiveCount","State","showModal","setShowModal","statename","setStatename","selectedHomeCatId","setSelectedHomeCatId","errors","setErrors","loader","setLoader","currentPage","setCurrentPage","pageSizeTotal","setPageSizeTotal","tab","setTab","selectAll","setSelectAll","selectedHomeCatIds","setSelectedHomeCatIds","action","setAction","Country","setCountry","countrycode","setCountrycode","search","setsearch","local","JSON","parse","localStorage","getItem","localAuth","isLoggedIn","window","location","href","ctr","_start","_limit","addModalOnClick","deleteOneState","data","confirm","title","content","okText","onOk","deleteOneCategory","cancelText","obj","state_id","deleteCategory","success","editModalOnClick","state_name","country_code","closeModalOnClick","CountryOnChange","errorObj","statenameOnChange","countrycodeOnChange","saveOnClick","edit","save","saveState","message","e","error","editState","searchOnChange","console","log","pageSizeChange","page","pageSize","changeTab","onSelectAll","value","array","map","h","onSelectOne","id","array1","index","indexOf","splice","push","length","actionOnChange","goOnClick","selectedHomeCatIdsArr","cityId","inactiveCategory","width","backgroundColor","height","color","border","target","marginTop","margin","textAlign","display"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Modal, Button, Checkbox, Spin, notification, Pagination, Tabs, Select } from 'antd';\r\nimport HeaderDashboard from '../../../components/header/HeaderDashboard';\r\nimport Sidebar from '../../../components/sections/sidebar';\r\nimport TableState from '../../../components/tables/State';\r\nimport { getAllState, getInactiveState } from '../../../store/State/action';\r\nimport LocationControllerRepository from '../../../repositories/LocationControllerRepository';\r\n\r\nconst Home = (props) => {\r\n\r\n    const { TabPane } = Tabs;\r\n    const { Option } = Select;\r\n    const dispatch = useDispatch();\r\n    const { auth } = useSelector(({ auth }) => auth);\r\n    const { allState, totalActiveCount, inactiveState, totalInactiveCount } = useSelector(({ State }) => State);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [statename, setStatename] = useState('');\r\n    const [selectedHomeCatId, setSelectedHomeCatId] = useState('');\r\n    const [errors, setErrors] = useState({});\r\n    const [loader, setLoader] = useState(false);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [pageSizeTotal, setPageSizeTotal] = useState(10);\r\n    const [tab, setTab] = useState('active');\r\n    const [selectAll, setSelectAll] = useState(false);\r\n    const [selectedHomeCatIds, setSelectedHomeCatIds] = useState([]);\r\n    const [action, setAction] = useState('');\r\n    const [Country, setCountry] = useState('');\r\n    const [countrycode,setCountrycode] = useState('');\r\n    const [search, setsearch] = useState('');\r\n\r\n    useEffect(() => {\r\n        let local = JSON.parse(localStorage.getItem('persist:QuestionCloudAdmin'));\r\n        let localAuth = local && local.auth ? JSON.parse(local.auth) : {};\r\n        if (localAuth && !localAuth.isLoggedIn) {\r\n            window.location.href = \"/\";\r\n        }\r\n    }, [auth]);\r\n\r\n    useEffect(() => {\r\n        setLoader(true);\r\n        let ctr = {};\r\n        ctr._start = currentPage === 1 ? 0 : ((currentPage - 1) * pageSizeTotal);\r\n        ctr._limit = pageSizeTotal;\r\n        dispatch(getAllState(ctr));\r\n        dispatch(getInactiveState(ctr));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setLoader(false);\r\n    }, [allState, inactiveState]);\r\n\r\n    const addModalOnClick = async () => {\r\n        setLoader(true);\r\n        setStatename('');\r\n        setCountrycode('');\r\n        setSelectedHomeCatId('');\r\n        setLoader(false);\r\n        setShowModal(true);\r\n    }\r\n\r\n    const deleteOneState = (data) => {\r\n        Modal.confirm({\r\n            title: 'Confirm',\r\n            content: 'Do you want to delete this State.',\r\n            okText: 'Yes',\r\n            onOk: () => deleteOneCategory(data),\r\n            cancelText: 'No',\r\n        });\r\n    }\r\n\r\n    const deleteOneCategory = async (data) => {\r\n        let obj = { \"AnnouncementsId\": [data.state_id] };\r\n        await LocationControllerRepository.deleteCategory(obj);\r\n        Modal.success({\r\n            title: 'State Deleted Successfully.'\r\n        });\r\n        let ctr = {};\r\n        ctr._start = currentPage === 1 ? 0 : ((currentPage - 1) * pageSizeTotal);\r\n        ctr._limit = pageSizeTotal;\r\n        dispatch(getAllState(ctr));\r\n        dispatch(getInactiveState(ctr));\r\n    }\r\n\r\n    const editModalOnClick = async (data) => {\r\n        setLoader(true);\r\n        setSelectedHomeCatId(data.state_id);\r\n        setCountry(data.Country);\r\n        setStatename(data.state_name)\r\n        setCountrycode(data.country_code)\r\n        setLoader(false);\r\n        setShowModal(true);\r\n    }\r\n\r\n    const closeModalOnClick = () => {\r\n        setStatename('');\r\n        setCountrycode('');\r\n        setCountrycode('');\r\n        setSelectedHomeCatId('');\r\n        setCountry('');\r\n        setErrors({});\r\n        setShowModal(false);\r\n    }\r\n\r\n    const CountryOnChange = (Country) => {\r\n        let errorObj = { ...errors };\r\n        errorObj['Country'] = '';\r\n        setCountry(Country);\r\n        setErrors(errorObj);\r\n    }\r\n\r\n    const statenameOnChange = (statename) => {\r\n            let errorObj = { ...errors };\r\n            errorObj['statename'] = '';\r\n            setStatename(statename);\r\n            setErrors(errorObj);\r\n    }\r\n    const countrycodeOnChange = (countrycode) => {\r\n        let errorObj = { ...errors };\r\n        errorObj['countrycode'] = '';\r\n        setCountrycode(countrycode);\r\n        setErrors(errorObj);\r\n}\r\n    const saveOnClick = () => {\r\n        if (selectedHomeCatId) {\r\n            edit();\r\n        } else {\r\n            save();\r\n        }\r\n    }\r\n\r\n    const save = async () => {\r\n        if (statename && selectedHomeCatId) {\r\n            setLoader(true);\r\n            let obj = {\r\n                \"country_id\": selectedHomeCatId,\r\n                \"state_name\": statename,\r\n                \"country_code\": countrycode\r\n            }\r\n            try {\r\n                await LocationControllerRepository.saveState(obj);\r\n                notification.success({\r\n                    message: 'State Added Successfully.'\r\n                })\r\n                let ctr = {};\r\n                ctr._start = currentPage === 1 ? 0 : ((currentPage - 1) * pageSizeTotal);\r\n                ctr._limit = pageSizeTotal;\r\n\r\n                if (search) {\r\n                    ctr.search = search;\r\n                }\r\n                dispatch(getAllState(ctr));\r\n                dispatch(getInactiveState(ctr));\r\n                closeModalOnClick();\r\n            } catch (e) {\r\n                notification.error({\r\n                    message: 'State Added Failed.'\r\n                });\r\n            }\r\n        } else {\r\n            let errorObj = { ...errors };\r\n            if (!statename) errorObj['statename'] = \"Please Enter statename\";\r\n            setErrors(errorObj);\r\n        }\r\n    }\r\n\r\n    const edit = async () => {\r\n        if (statename && selectedHomeCatId) {\r\n            setLoader(true);\r\n            let obj = {\r\n                \"country_id\": selectedHomeCatId,\r\n                \"state_name\": statename,\r\n                \"country_code\": countrycode\r\n            }\r\n            try {\r\n                await LocationControllerRepository.editState(selectedHomeCatId, obj);\r\n                notification.success({\r\n                    message: 'State Updated Successfully.'\r\n                });\r\n                let ctr = {};\r\n                ctr._start = currentPage === 1 ? 0 : ((currentPage - 1) * pageSizeTotal);\r\n                ctr._limit = pageSizeTotal;\r\n                dispatch(getAllState(ctr));\r\n                dispatch(getInactiveState(ctr));\r\n                closeModalOnClick();\r\n            } catch (e) {\r\n                notification.error({\r\n                    message: 'State  Updated Failed.'\r\n                });\r\n            }\r\n        } else {\r\n            let errorObj = { ...errors };\r\n            if (!statename) errorObj['statename'] = \"Please Enter statename\";\r\n            setErrors(errorObj);\r\n        }\r\n    }\r\n  \r\n    const searchOnChange = (search) => {\r\n        console.log(search,\"12345\")\r\n        setLoader(true);\r\n        let ctr = {};\r\n        ctr._start = 0;\r\n        ctr._limit = pageSizeTotal;\r\n        ctr.search = search;\r\n        if (search) {\r\n            ctr.search = search;\r\n        }\r\n        console.log(ctr,\"12345\")\r\n        if (tab === 'active') {\r\n            dispatch(getAllState(ctr));\r\n        } else {\r\n            dispatch(getInactiveState(ctr));\r\n        }\r\n        setsearch(search);\r\n        setCurrentPage(1);\r\n    }\r\n\r\n    const pageSizeChange = async (page, pageSize) => {\r\n        setLoader(true);\r\n        let ctr = {};\r\n        ctr._start = page === 1 ? 0 : ((page - 1) * pageSize);\r\n        ctr._limit = pageSize;\r\n\r\n        if (tab === \"active\") {\r\n            dispatch(getAllState(ctr));\r\n        } else {\r\n            dispatch(getInactiveState(ctr));\r\n        }\r\n        setCurrentPage(page);\r\n        setPageSizeTotal(pageSize);\r\n    }\r\n\r\n    const changeTab = (tab) => {\r\n        setLoader(true);\r\n        let ctr = {};\r\n        ctr._start = 0;\r\n        ctr._limit = 10;\r\n        if (tab === \"active\") {\r\n            dispatch(getAllState(ctr));\r\n        } else {\r\n            dispatch(getInactiveState(ctr));\r\n        }\r\n        setCurrentPage(1);\r\n        setPageSizeTotal(10);\r\n        setSelectedHomeCatIds([]);\r\n        setSelectAll(false);\r\n        setAction('');\r\n        setsearch('');\r\n        setTab(tab);\r\n    }\r\n\r\n    const onSelectAll = (value) => {\r\n        let array = [];\r\n        if (value) {\r\n            if (tab === 'active') {\r\n                array = allState.map(h => h.state_id);\r\n            } else {\r\n                array = inactiveState.map(h => h.state_id);\r\n            }\r\n        }\r\n        setSelectedHomeCatIds(array);\r\n        setSelectAll(value);\r\n    }\r\n\r\n    const onSelectOne = (id) => {\r\n        let array = [...selectedHomeCatIds];\r\n        let array1 = tab === 'active' ? [...allState] : [...inactiveState];\r\n        let index = array.indexOf(id);\r\n        if (index >= 0) {\r\n            array.splice(index, 1);\r\n        } else {\r\n            array.push(id);\r\n        }\r\n        if (array.length === array1.length) {\r\n            setSelectAll(true);\r\n        } else {\r\n            setSelectAll(false);\r\n        }\r\n        setSelectedHomeCatIds(array);\r\n    }\r\n\r\n    const actionOnChange = (action) => {\r\n        setAction(action);\r\n    }\r\n\r\n    const goOnClick = async () => {\r\n        let selectedHomeCatIdsArr = [...selectedHomeCatIds];\r\n        let obj = {\r\n            cityId: selectedHomeCatIdsArr\r\n        };\r\n        if (selectedHomeCatIdsArr && selectedHomeCatIdsArr.length > 0 && action) {\r\n            setLoader(true);\r\n            if (action === \"active\") {\r\n                obj['status'] = 'Y';\r\n                await LocationControllerRepository.inactiveCategory(obj);\r\n                notification.success({\r\n                    message: 'State  Updated Successfully.'\r\n                });\r\n            }\r\n            if (action === \"inactive\") {\r\n                obj['status'] = 'N';\r\n                await LocationControllerRepository.inactiveCategory(obj);\r\n                notification.success({\r\n                    message: 'State  Updated Successfully.'\r\n                });\r\n            }\r\n            if (action === \"delete\") {\r\n                await LocationControllerRepository.deleteCategory(obj);\r\n                notification.success({\r\n                    message: 'State  Deleted Successfully.'\r\n                });\r\n            }\r\n            setSelectedHomeCatIds([]);\r\n            let ctr = {};\r\n            ctr._start = currentPage === 1 ? 0 : ((currentPage - 1) * pageSizeTotal);\r\n            ctr._limit = pageSizeTotal;\r\n\r\n            if (search) {\r\n                ctr.search = search;\r\n            }\r\n            dispatch(getAllState(ctr));\r\n            dispatch(getInactiveState(ctr));\r\n        } else {\r\n            if (!action) {\r\n                Modal.error({\r\n                    title: 'Please Select Action'\r\n                });\r\n            } else if (!selectedHomeCatIdsArr.length) {\r\n                Modal.error({\r\n                    title: 'Please Select One Category'\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Spin spinning={loader} tip={'Loading...'}>\r\n                <HeaderDashboard />\r\n                <div className=\"dashboard-container\">\r\n                    <div className=\"row no-gutters\">\r\n                        <div className=\"col-md-2\">\r\n                            <div id=\"sidebar\">\r\n                                <Sidebar page={'State'} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-10\">\r\n                            <div className=\"content content-width\" id=\"style-2\">\r\n                                <Tabs defaultActiveKey={tab} onChange={changeTab}>\r\n                                    <TabPane tab={`Active ${totalActiveCount}`} key=\"active\">\r\n                                    </TabPane>\r\n                                    <TabPane tab={`Inactive ${totalInactiveCount}`} key=\"inactive\">\r\n                                    </TabPane>\r\n                                </Tabs>\r\n                                <div className='row'>\r\n                                    <div className=\"col-md-4\">\r\n                                        <div className=\"form-group\">\r\n                                            <Select\r\n                                                onChange={actionOnChange}\r\n                                                placeholder=\"Select Action\"\r\n                                                className=\"ps-ant-dropdown\"\r\n                                                style={{ width: 200 }}\r\n                                                value={action}\r\n                                            >\r\n                                                {tab === 'active' && <Option value=\"inactive\">Inactive</Option>}\r\n                                                {tab === 'inactive' && <Option value=\"active\">Active</Option>}\r\n                                                <Option value=\"delete\">Delete</Option>\r\n                                            </Select>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-2\">\r\n                                        <button onClick={goOnClick} style={{ backgroundColor: '#cd4040', width: 100, height: 35, color: '#fff', border: 'none' }}>\r\n                                            Go\r\n                                        </button>\r\n                                    </div>\r\n                                    <div className=\"col-md-6 text-right\">\r\n                                        <button onClick={addModalOnClick} style={{ backgroundColor: '#80bc00', width: 100, height: 35, color: '#fff', border: 'none' }}>\r\n                                            <i className=\"fas fa-plus\" /> Add\r\n                                        </button>\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div className='row'>\r\n                                    <div className=\"col-md-6\">\r\n                                        <div className=\"form-group \">\r\n                                            <input\r\n                                                className=\"form-control\"\r\n                                                type=\"text\"\r\n                                                value={search}\r\n                                                placeholder=\"search\"\r\n                                                onChange={(e) => searchOnChange(e.target.value)}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div style={{ marginTop: 20 }}>\r\n                                    <TableState\r\n                                        allState={tab === \"active\" ? allState : inactiveState}\r\n                                        editModalOnClick={editModalOnClick}\r\n                                        deleteOneState={deleteOneState}\r\n                                        onSelectAll={onSelectAll}\r\n                                        onSelectOne={onSelectOne}\r\n                                        selectAll={selectAll}\r\n                                        selectedHomeCatIds={selectedHomeCatIds}\r\n                                    />\r\n                                </div>\r\n                                <div style={totalActiveCount > 0 ? { margin: '10px auto', textAlign: 'right' } : { display: 'none' }}>\r\n                                    <Pagination\r\n                                        total={tab === \"active\" ? totalActiveCount : totalInactiveCount}\r\n                                        defaultCurrent={1}\r\n                                        current={currentPage}\r\n                                        defaultPageSize={10}\r\n                                        pageSize={pageSizeTotal}\r\n                                        pageSizeOptions={['10', '20', '30']}\r\n                                        onChange={pageSizeChange}\r\n                                        showSizeChanger={true}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Modal\r\n                    visible={showModal}\r\n                    okText={'Save'}\r\n                    onCancel={closeModalOnClick}\r\n                    title={selectedHomeCatId ? \"Edit Announcements \" : \"Add New Announcements \"}\r\n                    width={800}\r\n                    onOk={saveOnClick}\r\n                >\r\n                    <Spin spinning={loader} tip={'Loading...'}>\r\n                        <div className='row'>\r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Country <span style={{ color: 'red' }}>*</span></label>\r\n                                    <input \r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        value={Country}\r\n                                        placeholder=\"\"\r\n                                        onChange={(e) => CountryOnChange(e.target.value)}\r\n                                     />\r\n                                    {errors['Country'] &&\r\n                                        <span style={{ color: 'red' }}>{errors['Country']}</span>\r\n                                    }\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>statename <span style={{ color: 'red' }}>*</span></label>\r\n                                    <input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        value={statename}\r\n                                        placeholder=\"\"\r\n                                        onChange={(e) => statenameOnChange(e.target.value)}\r\n                                    />\r\n                                    {errors['statename'] &&\r\n                                        <span style={{ color: 'red' }}>{errors['statename']}</span>\r\n                                    }\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>countrycode <span style={{ color: 'red' }}>*</span></label>\r\n                                    <input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        value={countrycode}\r\n                                        placeholder=\"\"\r\n                                        onChange={(e) => countrycodeOnChange(e.target.value)}\r\n                                    />\r\n                                    {errors['countrycode'] &&\r\n                                        <span style={{ color: 'red' }}>{errors['countrycode']}</span>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </Spin>\r\n                </Modal>\r\n            </Spin>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}