{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport Repository, { apiUrl } from './Repository';\n\nvar AuthRepository = /*#__PURE__*/function () {\n  function AuthRepository(callback) {\n    _classCallCheck(this, AuthRepository);\n\n    this.callback = callback;\n  }\n\n  _createClass(AuthRepository, [{\n    key: \"getAllTestimonials\",\n    value: function () {\n      var _getAllTestimonials = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(payload) {\n        var reponse;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return Repository.get(\"\".concat(apiUrl, \"/Testimonials/?_start=\").concat(payload._start, \"&_limit=\").concat(payload._limit)).then(function (response) {\n                  return response.data;\n                })[\"catch\"](function (error) {\n                  return {\n                    error: JSON.stringify(error)\n                  };\n                });\n\n              case 2:\n                reponse = _context.sent;\n                return _context.abrupt(\"return\", reponse);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getAllTestimonials(_x) {\n        return _getAllTestimonials.apply(this, arguments);\n      }\n\n      return getAllTestimonials;\n    }()\n  }, {\n    key: \"getInactiveTestimonials\",\n    value: function () {\n      var _getInactiveTestimonials = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(payload) {\n        var reponse;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return Repository.get(\"\".concat(apiUrl, \"/Testimonials/inactive?_start=\").concat(payload._start, \"&_limit=\").concat(payload._limit)).then(function (response) {\n                  return response.data;\n                })[\"catch\"](function (error) {\n                  return {\n                    error: JSON.stringify(error)\n                  };\n                });\n\n              case 2:\n                reponse = _context2.sent;\n                return _context2.abrupt(\"return\", reponse);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function getInactiveTestimonials(_x2) {\n        return _getInactiveTestimonials.apply(this, arguments);\n      }\n\n      return getInactiveTestimonials;\n    }()\n  }, {\n    key: \"saveTestimonials\",\n    value: function () {\n      var _saveTestimonials = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(formdata) {\n        var reponse;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return Repository.post(\"\".concat(apiUrl, \"/Testimonials/\"), formdata).then(function (response) {\n                  return response.data;\n                })[\"catch\"](function (error) {\n                  return {\n                    error: JSON.stringify(error)\n                  };\n                });\n\n              case 2:\n                reponse = _context3.sent;\n                return _context3.abrupt(\"return\", reponse);\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function saveTestimonials(_x3) {\n        return _saveTestimonials.apply(this, arguments);\n      }\n\n      return saveTestimonials;\n    }()\n  }, {\n    key: \"editTestimonials\",\n    value: function () {\n      var _editTestimonials = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(categoryId, formdata) {\n        var reponse;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return Repository.put(\"\".concat(apiUrl, \"/Testimonials/catId/\").concat(categoryId), formdata).then(function (response) {\n                  return response.data;\n                })[\"catch\"](function (error) {\n                  return {\n                    error: JSON.stringify(error)\n                  };\n                });\n\n              case 2:\n                reponse = _context4.sent;\n                return _context4.abrupt(\"return\", reponse);\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function editTestimonials(_x4, _x5) {\n        return _editTestimonials.apply(this, arguments);\n      }\n\n      return editTestimonials;\n    }()\n  }, {\n    key: \"inactiveCategory\",\n    value: function () {\n      var _inactiveCategory = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(data) {\n        var reponse;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return Repository.put(\"\".concat(apiUrl, \"/Testimonials/inactive\"), data).then(function (response) {\n                  return response.data;\n                })[\"catch\"](function (error) {\n                  return {\n                    error: JSON.stringify(error)\n                  };\n                });\n\n              case 2:\n                reponse = _context5.sent;\n                return _context5.abrupt(\"return\", reponse);\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function inactiveCategory(_x6) {\n        return _inactiveCategory.apply(this, arguments);\n      }\n\n      return inactiveCategory;\n    }()\n  }, {\n    key: \"deleteCategory\",\n    value: function () {\n      var _deleteCategory = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(data) {\n        var reponse;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return Repository[\"delete\"](\"\".concat(apiUrl, \"/Testimonials/\"), {\n                  headers: {\n                    \"Content-Type\": \"application/json\"\n                  },\n                  data: data\n                }).then(function (response) {\n                  return response.data;\n                })[\"catch\"](function (error) {\n                  return {\n                    error: JSON.stringify(error)\n                  };\n                });\n\n              case 2:\n                reponse = _context6.sent;\n                ;\n                return _context6.abrupt(\"return\", reponse);\n\n              case 5:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      function deleteCategory(_x7) {\n        return _deleteCategory.apply(this, arguments);\n      }\n\n      return deleteCategory;\n    }()\n  }, {\n    key: \"changePosition\",\n    value: function () {\n      var _changePosition = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(data) {\n        var reponse;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return Repository.put(\"\".concat(apiUrl, \"/Testimonials/position\"), data).then(function (response) {\n                  return response.data;\n                })[\"catch\"](function (error) {\n                  return {\n                    error: JSON.stringify(error)\n                  };\n                });\n\n              case 2:\n                reponse = _context7.sent;\n                return _context7.abrupt(\"return\", reponse);\n\n              case 4:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      function changePosition(_x8) {\n        return _changePosition.apply(this, arguments);\n      }\n\n      return changePosition;\n    }()\n  }, {\n    key: \"imageUpload\",\n    value: function () {\n      var _imageUpload = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(formData) {\n        var reponse;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return Repository.post(\"\".concat(apiUrl, \"/image/testimonials\"), formData).then(function (response) {\n                  return response.data;\n                })[\"catch\"](function (error) {\n                  return {\n                    error: JSON.stringify(error)\n                  };\n                });\n\n              case 2:\n                reponse = _context8.sent;\n                return _context8.abrupt(\"return\", reponse);\n\n              case 4:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }));\n\n      function imageUpload(_x9) {\n        return _imageUpload.apply(this, arguments);\n      }\n\n      return imageUpload;\n    }()\n  }]);\n\n  return AuthRepository;\n}();\n\nexport default new AuthRepository();","map":{"version":3,"sources":["D:/Question_cloud/question_cloud_admin_web_new/repositories/TestimonialsRepository.js"],"names":["Repository","apiUrl","AuthRepository","callback","payload","get","_start","_limit","then","response","data","error","JSON","stringify","reponse","formdata","post","categoryId","put","headers","formData"],"mappings":"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","sourcesContent":["import Repository, { apiUrl } from './Repository';\r\n\r\nclass AuthRepository {\r\n    constructor(callback) {\r\n        this.callback = callback;\r\n    }\r\n\r\n    async getAllTestimonials(payload) {\r\n        const reponse = await Repository.get(`${apiUrl}/Testimonials/?_start=${payload._start}&_limit=${payload._limit}`)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n            .catch(error => ({ error: JSON.stringify(error) }));\r\n        return reponse;\r\n    }\r\n\r\n    async getInactiveTestimonials(payload) {\r\n        const reponse = await Repository.get(`${apiUrl}/Testimonials/inactive?_start=${payload._start}&_limit=${payload._limit}`)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n\r\n            .catch(error => ({ error: JSON.stringify(error) }));\r\n        return reponse;\r\n    }\r\n\r\n    async saveTestimonials(formdata) {\r\n        const reponse = await Repository.post(`${apiUrl}/Testimonials/`, formdata)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n            .catch(error => ({ error: JSON.stringify(error) }));\r\n        return reponse;\r\n    }\r\n\r\n    async editTestimonials(categoryId, formdata) {\r\n        const reponse = await Repository.put(`${apiUrl}/Testimonials/catId/${categoryId}`, formdata)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n            .catch(error => ({ error: JSON.stringify(error) }));\r\n        return reponse;\r\n    }\r\n\r\n    async inactiveCategory(data) {\r\n        const reponse = await Repository.put(`${apiUrl}/Testimonials/inactive`, data)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n            .catch(error => ({ error: JSON.stringify(error) }));\r\n        return reponse;\r\n    }\r\n\r\n    async deleteCategory(data) {\r\n        const reponse = await Repository.delete(`${apiUrl}/Testimonials/`, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            data: data\r\n        }).then(response => {\r\n            return response.data;\r\n        }).catch(error => ({ error: JSON.stringify(error) }));;\r\n        return reponse;\r\n    }\r\n\r\n    async changePosition(data) {\r\n        const reponse = await Repository.put(`${apiUrl}/Testimonials/position`, data)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n            .catch(error => ({ error: JSON.stringify(error) }));\r\n        return reponse;\r\n    }\r\n    async imageUpload(formData) {\r\n        const reponse = await Repository.post(`${apiUrl}/image/testimonials`, formData)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n            .catch(error => ({ error: JSON.stringify(error) }));\r\n        return reponse;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default new AuthRepository();\r\n\r\n"]},"metadata":{},"sourceType":"module"}