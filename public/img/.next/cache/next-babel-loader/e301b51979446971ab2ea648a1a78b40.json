{"ast":null,"code":"// import Repository, { apiUrl } from './Repository';\n// class AuthRepository {\n//     constructor(callback) {\n//         this.callback = callback;\n//     }\n//     // getAlldashboardCategory\n//     async getAllCoupon(status) {\n//         console.log(\"1234\",payload)\n//         const reponse = await Repository.get(`${apiUrl}/coupon/status/${'Y'}?_start=${payload._start}&_limit=${payload._limit}`)\n//             .then(response => {\n//                 return response.data;\n//             })\n//             .catch(error => ({ error: JSON.stringify(error) }));\n//         return reponse;\n//     }\n//      //getInactivedashboardCategory\n//     async getInactiveCoupon(status) {\n//         const reponse = await Repository.get(`${apiUrl}/coupon/status/${'N'}?_start=${payload._start}&_limit=${payload._limit}`)\n//             .then(response => {\n//                 return response.data;\n//             })\n//             .catch(error => ({ error: JSON.stringify(error) }));\n//         return reponse;\n//     }\n//     //savedashboardCategory\n//     async saveCoupon(formdata) {\n//         console.log(\"12345689\")\n//         const reponse = await Repository.post(`${apiUrl}/coupon/`, formdata)\n//             .then(response => {\n//                 return response.data;\n//             })\n//             .catch(error => ({ error: JSON.stringify(error) }));\n//         return reponse;\n//     }\n//     // editdashboardCategory\n//     async updateCoupon(categoryId, formdata) {\n//         console.log(\"12345689\")\n//         const reponse = await Repository.put(`${apiUrl}/coupon/id/${categoryId}`, formdata)\n//             .then(response => {\n//                 return response.data;\n//             })\n//             .catch(error => ({ error: JSON.stringify(error) }));\n//         return reponse;\n//     }\n//     // inactiveCategory\n//     async changeStatus(data) {\n//         const reponse = await Repository.put(`${apiUrl}/coupon/status`, data)\n//             .then(response => {\n//                 return response.data;\n//             })\n//             .catch(error => ({ error: JSON.stringify(error) }));\n//         return reponse;\n//     }\n//    // deleteCategory\n//     async deleteCoupon(data) {\n//         const reponse = await Repository.delete(`${apiUrl}/coupon/`, {\n//             headers: {\n//                 \"Content-Type\": \"application/json\"\n//             },\n//             data: data\n//         }).then(response => {\n//             return response.data;\n//         }).catch(error => ({ error: JSON.stringify(error) }));;\n//         return reponse;\n//     }\n//   //getAllCoupon\n//     async getAlldurations(payload) {\n//         console.log(\"1234\",payload)\n//         const reponse = await Repository.get(`${apiUrl}/coupon/duration/?_start=${payload._start}&_limit=${payload._limit}`)\n//             .then(response => {\n//                 return response.data;\n//             })\n//             .catch(error => ({ error: JSON.stringify(error) }));\n//         return reponse;\n//     }\n// }\n// export default new AuthRepository();\nimport http from './httpService';\nimport { apiUrl, schoolApiUrl } from \"../config\";\nimport auth from './authService';\nvar apiEndpoint = \"\".concat(apiUrl, \"/coupon\");\nexport function getAllCoupon(status) {\n  return http.get(apiEndpoint + '/status/' + status);\n}\nexport function saveCoupon(data) {\n  return http.post(apiEndpoint + '/', data);\n}\nexport function updateCoupon(id, data) {\n  return http.put(apiEndpoint + '/id/' + id, data);\n}\nexport function changeStatus(idArr) {\n  return http.put(apiEndpoint + '/status', idArr);\n}\nexport function getAlldurations() {\n  return http.get(apiEndpoint + '/duration');\n}","map":{"version":3,"sources":["D:/Question_cloud/question_cloud_admin_web_new/repositories/CouponRepository.js"],"names":["http","apiUrl","schoolApiUrl","auth","apiEndpoint","getAllCoupon","status","get","saveCoupon","data","post","updateCoupon","id","put","changeStatus","idArr","getAlldurations"],"mappings":"AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAEA,OAAOA,IAAP,MAAiB,eAAjB;AACA,SAASC,MAAT,EAAiBC,YAAjB,QAAqC,WAArC;AACA,OAAOC,IAAP,MAAiB,eAAjB;AAEA,IAAMC,WAAW,aAAMH,MAAN,YAAjB;AAEA,OAAO,SAASI,YAAT,CAAsBC,MAAtB,EAA8B;AACjC,SAAON,IAAI,CAACO,GAAL,CAASH,WAAW,GAAG,UAAd,GAA2BE,MAApC,CAAP;AACH;AAED,OAAO,SAASE,UAAT,CAAoBC,IAApB,EAA0B;AAC7B,SAAOT,IAAI,CAACU,IAAL,CAAUN,WAAW,GAAG,GAAxB,EAA6BK,IAA7B,CAAP;AACH;AAED,OAAO,SAASE,YAAT,CAAsBC,EAAtB,EAA0BH,IAA1B,EAAgC;AACnC,SAAOT,IAAI,CAACa,GAAL,CAAST,WAAW,GAAG,MAAd,GAAuBQ,EAAhC,EAAoCH,IAApC,CAAP;AACH;AAED,OAAO,SAASK,YAAT,CAAsBC,KAAtB,EAA6B;AAChC,SAAOf,IAAI,CAACa,GAAL,CAAST,WAAW,GAAG,SAAvB,EAAkCW,KAAlC,CAAP;AACH;AAED,OAAO,SAASC,eAAT,GAA2B;AAC9B,SAAOhB,IAAI,CAACO,GAAL,CAASH,WAAW,GAAG,WAAvB,CAAP;AACH","sourcesContent":["\r\n\r\n\r\n// import Repository, { apiUrl } from './Repository';\r\n\r\n// class AuthRepository {\r\n//     constructor(callback) {\r\n//         this.callback = callback;\r\n//     }\r\n//     // getAlldashboardCategory\r\n//     async getAllCoupon(status) {\r\n//         console.log(\"1234\",payload)\r\n//         const reponse = await Repository.get(`${apiUrl}/coupon/status/${'Y'}?_start=${payload._start}&_limit=${payload._limit}`)\r\n//             .then(response => {\r\n//                 return response.data;\r\n//             })\r\n//             .catch(error => ({ error: JSON.stringify(error) }));\r\n//         return reponse;\r\n//     }\r\n//      //getInactivedashboardCategory\r\n//     async getInactiveCoupon(status) {\r\n//         const reponse = await Repository.get(`${apiUrl}/coupon/status/${'N'}?_start=${payload._start}&_limit=${payload._limit}`)\r\n//             .then(response => {\r\n//                 return response.data;\r\n//             })\r\n        \r\n//             .catch(error => ({ error: JSON.stringify(error) }));\r\n//         return reponse;\r\n//     }\r\n//     //savedashboardCategory\r\n//     async saveCoupon(formdata) {\r\n//         console.log(\"12345689\")\r\n//         const reponse = await Repository.post(`${apiUrl}/coupon/`, formdata)\r\n//             .then(response => {\r\n//                 return response.data;\r\n//             })\r\n//             .catch(error => ({ error: JSON.stringify(error) }));\r\n//         return reponse;\r\n//     }\r\n//     // editdashboardCategory\r\n//     async updateCoupon(categoryId, formdata) {\r\n//         console.log(\"12345689\")\r\n//         const reponse = await Repository.put(`${apiUrl}/coupon/id/${categoryId}`, formdata)\r\n//             .then(response => {\r\n//                 return response.data;\r\n//             })\r\n//             .catch(error => ({ error: JSON.stringify(error) }));\r\n//         return reponse;\r\n//     }\r\n//     // inactiveCategory\r\n//     async changeStatus(data) {\r\n//         const reponse = await Repository.put(`${apiUrl}/coupon/status`, data)\r\n//             .then(response => {\r\n//                 return response.data;\r\n//             })\r\n//             .catch(error => ({ error: JSON.stringify(error) }));\r\n//         return reponse;\r\n//     }\r\n//    // deleteCategory\r\n//     async deleteCoupon(data) {\r\n//         const reponse = await Repository.delete(`${apiUrl}/coupon/`, {\r\n//             headers: {\r\n//                 \"Content-Type\": \"application/json\"\r\n//             },\r\n//             data: data\r\n//         }).then(response => {\r\n//             return response.data;\r\n//         }).catch(error => ({ error: JSON.stringify(error) }));;\r\n//         return reponse;\r\n//     }\r\n//   //getAllCoupon\r\n//     async getAlldurations(payload) {\r\n//         console.log(\"1234\",payload)\r\n//         const reponse = await Repository.get(`${apiUrl}/coupon/duration/?_start=${payload._start}&_limit=${payload._limit}`)\r\n//             .then(response => {\r\n//                 return response.data;\r\n//             })\r\n//             .catch(error => ({ error: JSON.stringify(error) }));\r\n//         return reponse;\r\n//     }\r\n\r\n \r\n\r\n// }\r\n\r\n// export default new AuthRepository();\r\n\r\nimport http from './httpService';\r\nimport { apiUrl, schoolApiUrl } from \"../config\";\r\nimport auth from './authService';\r\n\r\nconst apiEndpoint = `${apiUrl}/coupon`;\r\n\r\nexport function getAllCoupon(status) {\r\n    return http.get(apiEndpoint + '/status/' + status);\r\n}\r\n\r\nexport function saveCoupon(data) {\r\n    return http.post(apiEndpoint + '/', data);\r\n}\r\n\r\nexport function updateCoupon(id, data) {\r\n    return http.put(apiEndpoint + '/id/' + id, data);\r\n}\r\n\r\nexport function changeStatus(idArr) {\r\n    return http.put(apiEndpoint + '/status', idArr);\r\n}\r\n\r\nexport function getAlldurations() {\r\n    return http.get(apiEndpoint + '/duration');\r\n}"]},"metadata":{},"sourceType":"module"}