{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(getAllExampackageSaga),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(getInactiveExampackageSaga),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport { all, put, call, takeEvery } from 'redux-saga/effects';\nimport { actionTypes, getAllExampackageSuccess, getInactiveExampackageSuccess } from './action';\nimport ExampackageRepository from '../../repositories/ExampackageRepository';\n\nfunction getAllExampackageSaga(_ref) {\n  var payload, data;\n  return _regeneratorRuntime.wrap(function getAllExampackageSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          payload = _ref.payload;\n          _context.prev = 1;\n          _context.next = 4;\n          return call(ExampackageRepository.getAllExampackage, payload);\n\n        case 4:\n          data = _context.sent;\n          _context.next = 7;\n          return put(getAllExampackageSuccess(data));\n\n        case 7:\n          _context.next = 13;\n          break;\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](1);\n          _context.next = 13;\n          return put(getAllExampackageSuccess(null));\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[1, 9]]);\n}\n\nfunction getInactiveExampackageSaga(_ref2) {\n  var payload, data;\n  return _regeneratorRuntime.wrap(function getInactiveExampackageSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          payload = _ref2.payload;\n          _context2.prev = 1;\n          _context2.next = 4;\n          return call(ExampackageRepository.getInactiveExampackage, payload);\n\n        case 4:\n          data = _context2.sent;\n          _context2.next = 7;\n          return put(getInactiveExampackageSuccess(data));\n\n        case 7:\n          _context2.next = 13;\n          break;\n\n        case 9:\n          _context2.prev = 9;\n          _context2.t0 = _context2[\"catch\"](1);\n          _context2.next = 13;\n          return put(getInactiveExampackageSuccess(null));\n\n        case 13:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[1, 9]]);\n}\n\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return all([takeEvery(actionTypes.GET_ALL_EXAMPACKAGE_REQUEST, getAllExampackageSaga)]);\n\n        case 2:\n          _context3.next = 4;\n          return all([takeEvery(actionTypes.GET_INACTIVE_EXAMPACKAGE_REQUEST, getInactiveExampackageSaga)]);\n\n        case 4:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}","map":{"version":3,"sources":["D:/Question_cloud/question_cloud_admin_web_new/store/Exampackage/saga.js"],"names":["getAllExampackageSaga","getInactiveExampackageSaga","rootSaga","all","put","call","takeEvery","actionTypes","getAllExampackageSuccess","getInactiveExampackageSuccess","ExampackageRepository","payload","getAllExampackage","data","getInactiveExampackage","GET_ALL_EXAMPACKAGE_REQUEST","GET_INACTIVE_EXAMPACKAGE_REQUEST"],"mappings":";;oDAMUA,qB;qDASAC,0B;qDASeC,Q;;AAxBzB,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,SAAzB,QAA0C,oBAA1C;AAEA,SAASC,WAAT,EAAsBC,wBAAtB,EAAgDC,6BAAhD,QAAqF,UAArF;AAEA,OAAOC,qBAAP,MAAkC,0CAAlC;;AAEA,SAAUV,qBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkCW,UAAAA,OAAlC,QAAkCA,OAAlC;AAAA;AAAA;AAEqB,iBAAMN,IAAI,CAACK,qBAAqB,CAACE,iBAAvB,EAA0CD,OAA1C,CAAV;;AAFrB;AAEcE,UAAAA,IAFd;AAAA;AAGQ,iBAAMT,GAAG,CAACI,wBAAwB,CAACK,IAAD,CAAzB,CAAT;;AAHR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAKQ,iBAAMT,GAAG,CAACI,wBAAwB,CAAC,IAAD,CAAzB,CAAT;;AALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASA,SAAUP,0BAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuCU,UAAAA,OAAvC,SAAuCA,OAAvC;AAAA;AAAA;AAEqB,iBAAMN,IAAI,CAACK,qBAAqB,CAACI,sBAAvB,EAA+CH,OAA/C,CAAV;;AAFrB;AAEcE,UAAAA,IAFd;AAAA;AAGQ,iBAAMT,GAAG,CAACK,6BAA6B,CAACI,IAAD,CAA9B,CAAT;;AAHR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAKQ,iBAAMT,GAAG,CAACK,6BAA6B,CAAC,IAAD,CAA9B,CAAT;;AALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASA,eAAe,SAAUP,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACX,iBAAMC,GAAG,CAAC,CAACG,SAAS,CAACC,WAAW,CAACQ,2BAAb,EAA0Cf,qBAA1C,CAAV,CAAD,CAAT;;AADW;AAAA;AAEX,iBAAMG,GAAG,CAAC,CAACG,SAAS,CAACC,WAAW,CAACS,gCAAb,EAA+Cf,0BAA/C,CAAV,CAAD,CAAT;;AAFW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { all, put, call, takeEvery } from 'redux-saga/effects';\r\n\r\nimport { actionTypes, getAllExampackageSuccess, getInactiveExampackageSuccess } from './action';\r\n\r\nimport ExampackageRepository from '../../repositories/ExampackageRepository';\r\n\r\nfunction* getAllExampackageSaga({ payload }) {\r\n    try {\r\n        const data = yield call(ExampackageRepository.getAllExampackage, payload);\r\n        yield put(getAllExampackageSuccess(data));\r\n    } catch (err) {\r\n        yield put(getAllExampackageSuccess(null));\r\n    }\r\n}\r\n\r\nfunction* getInactiveExampackageSaga({ payload }) {\r\n    try {\r\n        const data = yield call(ExampackageRepository.getInactiveExampackage, payload);\r\n        yield put(getInactiveExampackageSuccess(data));\r\n    } catch (err) {\r\n        yield put(getInactiveExampackageSuccess(null));\r\n    }\r\n}\r\n\r\nexport default function* rootSaga() {\r\n    yield all([takeEvery(actionTypes.GET_ALL_EXAMPACKAGE_REQUEST, getAllExampackageSaga)]);\r\n    yield all([takeEvery(actionTypes.GET_INACTIVE_EXAMPACKAGE_REQUEST, getInactiveExampackageSaga)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}