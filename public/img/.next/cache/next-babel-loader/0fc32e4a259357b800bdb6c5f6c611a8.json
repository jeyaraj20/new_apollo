{"ast":null,"code":"var _jsxFileName = \"D:\\\\Question_cloud\\\\question_cloud_admin_web_new\\\\pages\\\\changepassword\\\\view\\\\index.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Modal, Button, Checkbox, Spin, notification, Pagination, Tabs, Select } from 'antd';\nimport HeaderDashboard from '../../../components/header/HeaderDashboard';\nimport Sidebar from '../../../components/sections/sidebar';\nimport TableCity from '../../../components/tables/changepassword';\nimport { getAllCity, getInactiveCity } from '../../../store/City/action';\nimport LocationControllerRepository from '../../../repositories/LocationControllerRepository';\n\nconst Home = props => {\n  const {\n    TabPane\n  } = Tabs;\n  const {\n    Option\n  } = Select;\n  const dispatch = useDispatch();\n  const {\n    auth\n  } = useSelector(({\n    auth\n  }) => auth);\n  const {\n    allCity,\n    totalActiveCount,\n    inactiveCity,\n    totalInactiveCount\n  } = useSelector(({\n    City\n  }) => City);\n  const {\n    0: showModal,\n    1: setShowModal\n  } = useState(false);\n  const {\n    0: cityname,\n    1: setCityname\n  } = useState('');\n  const {\n    0: selectedHomeCatId,\n    1: setSelectedHomeCatId\n  } = useState('');\n  const {\n    0: errors,\n    1: setErrors\n  } = useState({});\n  const {\n    0: loader,\n    1: setLoader\n  } = useState(false);\n  const {\n    0: currentPage,\n    1: setCurrentPage\n  } = useState(1);\n  const {\n    0: pageSizeTotal,\n    1: setPageSizeTotal\n  } = useState(10);\n  const {\n    0: tab,\n    1: setTab\n  } = useState('active');\n  const {\n    0: selectAll,\n    1: setSelectAll\n  } = useState(false);\n  const {\n    0: selectedHomeCatIds,\n    1: setSelectedHomeCatIds\n  } = useState([]);\n  const {\n    0: action,\n    1: setAction\n  } = useState('');\n  const {\n    0: State,\n    1: setState\n  } = useState('');\n  const {\n    0: Citycode,\n    1: setCitycode\n  } = useState('');\n  const {\n    0: search,\n    1: setsearch\n  } = useState('');\n  const {\n    0: stateitems,\n    1: setStateItems\n  } = useState([]);\n  const {\n    0: stateId,\n    1: setStateId\n  } = useState([]);\n  const {\n    0: activeState,\n    1: setactiveState\n  } = useState([]);\n  useEffect(() => {\n    let local = JSON.parse(localStorage.getItem('persist:QuestionCloudAdmin'));\n    let localAuth = local && local.auth ? JSON.parse(local.auth) : {};\n\n    if (localAuth && !localAuth.isLoggedIn) {\n      window.location.href = \"/\";\n    }\n  }, [auth]);\n\n  const handleStateChange = (event, value) => {\n    console.log(event, \"dsa\");\n    setStateId(event);\n  };\n\n  const handleRefresh = async () => {\n    const stateresult = await LocationControllerRepository.getState();\n    const {\n      state: stateres\n    } = stateresult;\n    console.log(stateresult, \"result\");\n    let itemArr = [];\n\n    for (let state of stateres) {\n      itemArr.push(__jsx(\"item\", {\n        value: state.state_id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 26\n        }\n      }, state.state_name));\n    }\n\n    console.log(itemArr);\n    setStateItems(itemArr);\n    setactiveState(itemArr);\n    setTimeout(() => {\n      setLoader(false);\n    }, 1000);\n  };\n\n  useEffect(() => {\n    setLoader(true);\n\n    async function fetchData() {\n      handleRefresh();\n    }\n\n    fetchData();\n  }, []);\n  useEffect(() => {\n    setLoader(true);\n    let ctr = {};\n    ctr._start = currentPage === 1 ? 0 : (currentPage - 1) * pageSizeTotal;\n    ctr._limit = pageSizeTotal;\n    dispatch(getAllCity(ctr));\n    dispatch(getInactiveCity(ctr));\n  }, []);\n  useEffect(() => {\n    setLoader(false);\n  }, [allCity, inactiveCity]);\n\n  const addModalOnClick = async () => {\n    setLoader(true);\n    setCitycode('');\n    setState('');\n    setSelectedHomeCatId('');\n    setLoader(false);\n    setShowModal(true);\n  };\n\n  const editModalOnClick = async data => {\n    setLoader(true);\n    setSelectedHomeCatId(data.city_id);\n    setState(data.state);\n    setCityname(data.city_name);\n    setCitycode(data.city_code);\n    setLoader(false);\n    setShowModal(true);\n  };\n\n  const closeModalOnClick = () => {\n    setCityname('');\n    setCitycode('');\n    setSelectedHomeCatId('');\n    setState('');\n    setErrors({});\n    setShowModal(false);\n  };\n\n  const CitynameOnChange = cityname => {\n    let errorObj = _objectSpread({}, errors);\n\n    errorObj['cityname'] = '';\n    setCityname(cityname);\n    setErrors(errorObj);\n  };\n\n  const CitycodeOnChange = Citycode => {\n    let errorObj = _objectSpread({}, errors);\n\n    errorObj['Citycode'] = '';\n    setCitycode(Citycode);\n    setErrors(errorObj);\n  };\n\n  const saveOnClick = () => {\n    if (selectedHomeCatId) {\n      edit();\n    } else {\n      save();\n    }\n  };\n\n  const save = async () => {\n    if (cityname && Citycode) {\n      setLoader(true);\n      let obj = {\n        \"state_id\": stateId,\n        \"city_name\": cityname,\n        \"city_code\": Citycode\n      };\n\n      try {\n        await LocationControllerRepository.saveCity(obj);\n        notification.success({\n          message: 'State Added Successfully.'\n        });\n        let ctr = {};\n        ctr._start = currentPage === 1 ? 0 : (currentPage - 1) * pageSizeTotal;\n        ctr._limit = pageSizeTotal;\n\n        if (search) {\n          ctr.search = search;\n        }\n\n        dispatch(getAllCity(ctr));\n        dispatch(getInactiveCity(ctr));\n        closeModalOnClick();\n      } catch (e) {\n        notification.error({\n          message: 'State Added Failed.'\n        });\n      }\n    } else {\n      let errorObj = _objectSpread({}, errors);\n\n      if (!cityname) errorObj['cityname'] = \"Please Enter cityname\";\n      setErrors(errorObj);\n    }\n  };\n\n  const edit = async () => {\n    if (cityname && selectedHomeCatId && Citycode && cityname) {\n      setLoader(true);\n      let obj = {\n        \"city_id\": selectedHomeCatId,\n        \"city_name\": cityname,\n        \"city_code\": Citycode,\n        \"state_id\": stateId\n      };\n\n      try {\n        await LocationControllerRepository.editCity(selectedHomeCatId, obj);\n        notification.success({\n          message: 'State Updated Successfully.'\n        });\n        let ctr = {};\n        ctr._start = currentPage === 1 ? 0 : (currentPage - 1) * pageSizeTotal;\n        ctr._limit = pageSizeTotal;\n        dispatch(getAllCity(ctr));\n        dispatch(getInactiveCity(ctr));\n        closeModalOnClick();\n      } catch (e) {\n        notification.error({\n          message: 'State  Updated Failed.'\n        });\n      }\n    } else {\n      let errorObj = _objectSpread({}, errors);\n\n      if (!cityname) errorObj['cityname'] = \"Please Enter cityname\";\n      setErrors(errorObj);\n    }\n  };\n\n  const searchOnChange = search => {\n    setLoader(true);\n    let ctr = {};\n    ctr._start = 0;\n    ctr._limit = pageSizeTotal;\n    ctr.search = search;\n\n    if (search) {\n      ctr.search = search;\n    }\n\n    if (tab === 'active') {\n      dispatch(getAllCity(ctr));\n    } else {\n      dispatch(getInactiveCity(ctr));\n    }\n\n    setsearch(search);\n    setCurrentPage(1);\n  };\n\n  const pageSizeChange = async (page, pageSize) => {\n    setLoader(true);\n    let ctr = {};\n    ctr._start = page === 1 ? 0 : (page - 1) * pageSize;\n    ctr._limit = pageSize;\n\n    if (tab === \"active\") {\n      dispatch(getAllCity(ctr));\n    } else {\n      dispatch(getInactiveCity(ctr));\n    }\n\n    setCurrentPage(page);\n    setPageSizeTotal(pageSize);\n  };\n\n  const changeTab = tab => {\n    setLoader(true);\n    let ctr = {};\n    ctr._start = 0;\n    ctr._limit = 10;\n\n    if (tab === \"active\") {\n      dispatch(getAllCity(ctr));\n    } else {\n      dispatch(getInactiveCity(ctr));\n    }\n\n    setCurrentPage(1);\n    setPageSizeTotal(10);\n    setSelectedHomeCatIds([]);\n    setSelectAll(false);\n    setAction('');\n    setsearch('');\n    setTab(tab);\n  };\n\n  const onSelectAll = value => {\n    let array = [];\n\n    if (value) {\n      if (tab === 'active') {\n        array = allCity.map(h => h.city_id);\n      } else {\n        array = inactiveCity.map(h => h.city_id);\n      }\n    }\n\n    setSelectedHomeCatIds(array);\n    setSelectAll(value);\n  };\n\n  const onSelectOne = id => {\n    let array = [...selectedHomeCatIds];\n    let array1 = tab === 'active' ? [...allCity] : [...inactiveCity];\n    let index = array.indexOf(id);\n\n    if (index >= 0) {\n      array.splice(index, 1);\n    } else {\n      array.push(id);\n    }\n\n    if (array.length === array1.length) {\n      setSelectAll(true);\n    } else {\n      setSelectAll(false);\n    }\n\n    setSelectedHomeCatIds(array);\n  };\n\n  const actionOnChange = action => {\n    setAction(action);\n  };\n\n  const goOnClick = async () => {\n    let selectedHomeCatIdsArr = [...selectedHomeCatIds];\n    let obj = {\n      cityId: selectedHomeCatIdsArr\n    };\n\n    if (selectedHomeCatIdsArr && selectedHomeCatIdsArr.length > 0 && action) {\n      setLoader(true);\n\n      if (action === \"active\") {\n        obj['status'] = 'Y';\n        await LocationControllerRepository.inactiveCity(obj);\n        notification.success({\n          message: 'State  Updated Successfully.'\n        });\n      }\n\n      if (action === \"inactive\") {\n        obj['status'] = 'N';\n        await LocationControllerRepository.inactiveCity(obj);\n        notification.success({\n          message: 'State  Updated Successfully.'\n        });\n      }\n\n      if (action === \"delete\") {\n        obj['status'] = 'D';\n        await LocationControllerRepository.inactiveCity(obj);\n        notification.success({\n          message: 'State  Deleted Successfully.'\n        });\n      }\n\n      setSelectedHomeCatIds([]);\n      let ctr = {};\n      ctr._start = currentPage === 1 ? 0 : (currentPage - 1) * pageSizeTotal;\n      ctr._limit = pageSizeTotal;\n\n      if (search) {\n        ctr.search = search;\n      }\n\n      dispatch(getAllCity(ctr));\n      dispatch(getInactiveCity(ctr));\n    } else {\n      if (!action) {\n        Modal.error({\n          title: 'Please Select Action'\n        });\n      } else if (!selectedHomeCatIdsArr.length) {\n        Modal.error({\n          title: 'Please Select One Category'\n        });\n      }\n    }\n  };\n\n  console.log(stateId, \"sdfzxc\");\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    style: {\n      marginBottom: '0rem',\n      padding: '10px 30px',\n      borderRadius: '0rem',\n      backgroundColor: '#eee'\n    },\n    className: \"page-heading d-sm-flex justify-content-sm-between align-items-sm-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 11\n    }\n  }, __jsx(\"h2\", {\n    className: \"title mb-3 mb-sm-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 13\n    }\n  }, \"Change Password\")), __jsx(\"div\", {\n    style: {\n      padding: '5%'\n    },\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 11\n    }\n  }, loader && __jsx(\"div\", {\n    className: \"loader-view w-100\",\n    style: {\n      height: 'calc(100vh - 120px)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 15\n    }\n  }, __jsx(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 17\n    }\n  })), !loader && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    className: \"row no-gutters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"col-lg-12 d-flex flex-column order-lg-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 19\n    }\n  }, __jsx(TextField, {\n    required: true,\n    disabled: true,\n    id: \"required\",\n    label: 'Username',\n    name: 'Username',\n    defaultValue: userName,\n    margin: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 21\n    }\n  }), __jsx(TextField, {\n    required: true,\n    autoComplete: 'off',\n    id: \"required\",\n    type: 'password',\n    label: 'Old Password',\n    name: 'OldPassword',\n    onChange: event => onOldPasswordChange(event.target.value),\n    onBlur: valiadateProperty,\n    value: oldPassword,\n    margin: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 21\n    }\n  }), __jsx(\"h6\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 21\n    }\n  }, errors['OldPassword']), __jsx(TextField, {\n    required: true,\n    autoComplete: 'off',\n    id: \"required\",\n    type: 'password',\n    label: 'New Password',\n    name: 'NewPassword',\n    onChange: event => onNewPasswordChange(event.target.value),\n    onBlur: valiadateProperty,\n    value: newPassword,\n    margin: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 21\n    }\n  }), __jsx(\"h6\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 21\n    }\n  }, errors['NewPassword']), __jsx(TextField, {\n    required: true,\n    type: 'password',\n    autoComplete: 'off',\n    id: \"required\",\n    label: 'Confirm Password',\n    name: 'ConfirmPassword',\n    onChange: event => onConfirmPasswordChange(event.target.value),\n    onBlur: valiadateProperty,\n    value: confirmPassword,\n    margin: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 21\n    }\n  }), __jsx(\"h6\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 21\n    }\n  }, errors['ConfirmPassword']), __jsx(\"div\", {\n    style: {\n      paddingTop: '2%',\n      textAlign: 'center'\n    },\n    className: \"col-lg-12 col-sm-12 col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 21\n    }\n  }, __jsx(Button, {\n    onClick: () => changePassword(),\n    variant: \"contained\",\n    color: \"primary\",\n    className: \"jr-btn text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 23\n    }\n  }, \"Submit\")))), __jsx(Snackbar, {\n    className: \"mb-3 bg-info\",\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    },\n    open: showMessage,\n    message: alertMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 17\n    }\n  }))));\n};\n\nexport default Home;","map":{"version":3,"sources":["D:/Question_cloud/question_cloud_admin_web_new/pages/changepassword/view/index.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","Modal","Button","Checkbox","Spin","notification","Pagination","Tabs","Select","HeaderDashboard","Sidebar","TableCity","getAllCity","getInactiveCity","LocationControllerRepository","Home","props","TabPane","Option","dispatch","auth","allCity","totalActiveCount","inactiveCity","totalInactiveCount","City","showModal","setShowModal","cityname","setCityname","selectedHomeCatId","setSelectedHomeCatId","errors","setErrors","loader","setLoader","currentPage","setCurrentPage","pageSizeTotal","setPageSizeTotal","tab","setTab","selectAll","setSelectAll","selectedHomeCatIds","setSelectedHomeCatIds","action","setAction","State","setState","Citycode","setCitycode","search","setsearch","stateitems","setStateItems","stateId","setStateId","activeState","setactiveState","local","JSON","parse","localStorage","getItem","localAuth","isLoggedIn","window","location","href","handleStateChange","event","value","console","log","handleRefresh","stateresult","getState","state","stateres","itemArr","push","state_id","state_name","setTimeout","fetchData","ctr","_start","_limit","addModalOnClick","editModalOnClick","data","city_id","city_name","city_code","closeModalOnClick","CitynameOnChange","errorObj","CitycodeOnChange","saveOnClick","edit","save","obj","saveCity","success","message","e","error","editCity","searchOnChange","pageSizeChange","page","pageSize","changeTab","onSelectAll","array","map","h","onSelectOne","id","array1","index","indexOf","splice","length","actionOnChange","goOnClick","selectedHomeCatIdsArr","cityId","title","marginBottom","padding","borderRadius","backgroundColor","height","userName","onOldPasswordChange","target","valiadateProperty","oldPassword","color","onNewPasswordChange","newPassword","onConfirmPasswordChange","confirmPassword","paddingTop","textAlign","changePassword","vertical","horizontal","showMessage","alertMessage"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Modal, Button, Checkbox, Spin, notification, Pagination, Tabs, Select } from 'antd';\r\nimport HeaderDashboard from '../../../components/header/HeaderDashboard';\r\nimport Sidebar from '../../../components/sections/sidebar';\r\nimport TableCity from '../../../components/tables/changepassword';\r\nimport { getAllCity, getInactiveCity } from '../../../store/City/action';\r\nimport LocationControllerRepository from '../../../repositories/LocationControllerRepository';\r\n\r\nconst Home = (props) => {\r\n\r\n    const { TabPane } = Tabs;\r\n    const { Option } = Select;\r\n    const dispatch = useDispatch();\r\n    const { auth } = useSelector(({ auth }) => auth);\r\n    const { allCity, totalActiveCount, inactiveCity, totalInactiveCount } = useSelector(({ City }) => City);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [cityname, setCityname] = useState('');\r\n    const [selectedHomeCatId, setSelectedHomeCatId] = useState('');\r\n    const [errors, setErrors] = useState({});\r\n    const [loader, setLoader] = useState(false);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [pageSizeTotal, setPageSizeTotal] = useState(10);\r\n    const [tab, setTab] = useState('active');\r\n    const [selectAll, setSelectAll] = useState(false);\r\n    const [selectedHomeCatIds, setSelectedHomeCatIds] = useState([]);\r\n    const [action, setAction] = useState('');\r\n    const [State, setState] = useState('');\r\n    const [Citycode, setCitycode] = useState('');\r\n    const [search, setsearch] = useState('');\r\n    const [stateitems, setStateItems] = useState([]);\r\n    const [stateId, setStateId] = useState([]);\r\n    const [activeState, setactiveState] = useState([]);\r\n\r\n    useEffect(() => {\r\n        let local = JSON.parse(localStorage.getItem('persist:QuestionCloudAdmin'));\r\n        let localAuth = local && local.auth ? JSON.parse(local.auth) : {};\r\n        if (localAuth && !localAuth.isLoggedIn) {\r\n            window.location.href = \"/\";\r\n        }\r\n    }, [auth]);\r\n    const handleStateChange = (event, value) => {\r\n        console.log(event, \"dsa\")\r\n        setStateId(event);\r\n    }\r\n    const handleRefresh = async () => {\r\n        const stateresult = await LocationControllerRepository.getState();\r\n        const { state: stateres } = stateresult;\r\n        console.log(stateresult, \"result\")\r\n        let itemArr = [];\r\n        for (let state of stateres) {\r\n            itemArr.push(<item value={state.state_id}>{state.state_name}</item>)\r\n        }\r\n        console.log(itemArr)\r\n        setStateItems(itemArr);\r\n        setactiveState(itemArr)\r\n        setTimeout(() => {\r\n            setLoader(false)\r\n        }, 1000);\r\n    }\r\n    useEffect(() => {\r\n        setLoader(true);\r\n        async function fetchData() {\r\n            handleRefresh()\r\n        }\r\n        fetchData();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setLoader(true);\r\n        let ctr = {};\r\n        ctr._start = currentPage === 1 ? 0 : ((currentPage - 1) * pageSizeTotal);\r\n        ctr._limit = pageSizeTotal;\r\n        dispatch(getAllCity(ctr));\r\n        dispatch(getInactiveCity(ctr));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setLoader(false);\r\n    }, [allCity, inactiveCity]);\r\n\r\n    const addModalOnClick = async () => {\r\n        setLoader(true);\r\n        setCitycode('');\r\n        setState('');\r\n        setSelectedHomeCatId('');\r\n        setLoader(false);\r\n        setShowModal(true);\r\n    }\r\n\r\n    const editModalOnClick = async (data) => {\r\n        setLoader(true);\r\n        setSelectedHomeCatId(data.city_id);\r\n        setState(data.state);\r\n        setCityname(data.city_name)\r\n        setCitycode(data.city_code)\r\n        setLoader(false);\r\n        setShowModal(true);\r\n    }\r\n\r\n    const closeModalOnClick = () => {\r\n        setCityname('');\r\n        setCitycode('');\r\n        setSelectedHomeCatId('');\r\n        setState('');\r\n        setErrors({});\r\n        setShowModal(false);\r\n    }\r\n\r\n    const CitynameOnChange = (cityname) => {\r\n        let errorObj = { ...errors };\r\n        errorObj['cityname'] = '';\r\n        setCityname(cityname);\r\n        setErrors(errorObj);\r\n    }\r\n    const CitycodeOnChange = (Citycode) => {\r\n        let errorObj = { ...errors };\r\n        errorObj['Citycode'] = '';\r\n        setCitycode(Citycode);\r\n        setErrors(errorObj);\r\n    }\r\n    const saveOnClick = () => {\r\n        if (selectedHomeCatId) {\r\n            edit();\r\n        } else {\r\n            save();\r\n        }\r\n    }\r\n\r\n    const save = async () => {\r\n        if (cityname && Citycode) {\r\n            setLoader(true);\r\n            let obj = {\r\n                \"state_id\": stateId,\r\n                \"city_name\": cityname,\r\n                \"city_code\": Citycode\r\n            }\r\n            try {\r\n                await LocationControllerRepository.saveCity(obj);\r\n                notification.success({\r\n                    message: 'State Added Successfully.'\r\n                })\r\n                let ctr = {};\r\n                ctr._start = currentPage === 1 ? 0 : ((currentPage - 1) * pageSizeTotal);\r\n                ctr._limit = pageSizeTotal;\r\n\r\n                if (search) {\r\n                    ctr.search = search;\r\n                }\r\n                dispatch(getAllCity(ctr));\r\n                dispatch(getInactiveCity(ctr));\r\n                closeModalOnClick();\r\n            } catch (e) {\r\n                notification.error({\r\n                    message: 'State Added Failed.'\r\n                });\r\n            }\r\n        } else {\r\n            let errorObj = { ...errors };\r\n            if (!cityname) errorObj['cityname'] = \"Please Enter cityname\";\r\n            setErrors(errorObj);\r\n        }\r\n    }\r\n\r\n    const edit = async () => {\r\n        if (cityname && selectedHomeCatId && Citycode && cityname) {\r\n            setLoader(true);\r\n            let obj = {\r\n                \"city_id\": selectedHomeCatId,\r\n                \"city_name\": cityname,\r\n                \"city_code\": Citycode,\r\n                \"state_id\": stateId,\r\n            }\r\n            try {\r\n                await LocationControllerRepository.editCity(selectedHomeCatId, obj);\r\n                notification.success({\r\n                    message: 'State Updated Successfully.'\r\n                });\r\n                let ctr = {};\r\n                ctr._start = currentPage === 1 ? 0 : ((currentPage - 1) * pageSizeTotal);\r\n                ctr._limit = pageSizeTotal;\r\n                dispatch(getAllCity(ctr));\r\n                dispatch(getInactiveCity(ctr));\r\n                closeModalOnClick();\r\n            } catch (e) {\r\n                notification.error({\r\n                    message: 'State  Updated Failed.'\r\n                });\r\n            }\r\n        } else {\r\n            let errorObj = { ...errors };\r\n            if (!cityname) errorObj['cityname'] = \"Please Enter cityname\";\r\n            setErrors(errorObj);\r\n        }\r\n    }\r\n\r\n    const searchOnChange = (search) => {\r\n        setLoader(true);\r\n        let ctr = {};\r\n        ctr._start = 0;\r\n        ctr._limit = pageSizeTotal;\r\n        ctr.search = search;\r\n        if (search) {\r\n            ctr.search = search;\r\n        }\r\n        if (tab === 'active') {\r\n            dispatch(getAllCity(ctr));\r\n        } else {\r\n            dispatch(getInactiveCity(ctr));\r\n        }\r\n        setsearch(search);\r\n        setCurrentPage(1);\r\n    }\r\n\r\n    const pageSizeChange = async (page, pageSize) => {\r\n        setLoader(true);\r\n        let ctr = {};\r\n        ctr._start = page === 1 ? 0 : ((page - 1) * pageSize);\r\n        ctr._limit = pageSize;\r\n\r\n        if (tab === \"active\") {\r\n            dispatch(getAllCity(ctr));\r\n        } else {\r\n            dispatch(getInactiveCity(ctr));\r\n        }\r\n        setCurrentPage(page);\r\n        setPageSizeTotal(pageSize);\r\n    }\r\n\r\n    const changeTab = (tab) => {\r\n        setLoader(true);\r\n        let ctr = {};\r\n        ctr._start = 0;\r\n        ctr._limit = 10;\r\n        if (tab === \"active\") {\r\n            dispatch(getAllCity(ctr));\r\n        } else {\r\n            dispatch(getInactiveCity(ctr));\r\n        }\r\n        setCurrentPage(1);\r\n        setPageSizeTotal(10);\r\n        setSelectedHomeCatIds([]);\r\n        setSelectAll(false);\r\n        setAction('');\r\n        setsearch('');\r\n        setTab(tab);\r\n    }\r\n\r\n    const onSelectAll = (value) => {\r\n        let array = [];\r\n        if (value) {\r\n            if (tab === 'active') {\r\n                array = allCity.map(h => h.city_id);\r\n            } else {\r\n                array = inactiveCity.map(h => h.city_id);\r\n            }\r\n        }\r\n        setSelectedHomeCatIds(array);\r\n        setSelectAll(value);\r\n    }\r\n\r\n    const onSelectOne = (id) => {\r\n        let array = [...selectedHomeCatIds];\r\n        let array1 = tab === 'active' ? [...allCity] : [...inactiveCity];\r\n        let index = array.indexOf(id);\r\n        if (index >= 0) {\r\n            array.splice(index, 1);\r\n        } else {\r\n            array.push(id);\r\n        }\r\n        if (array.length === array1.length) {\r\n            setSelectAll(true);\r\n        } else {\r\n            setSelectAll(false);\r\n        }\r\n        setSelectedHomeCatIds(array);\r\n    }\r\n\r\n    const actionOnChange = (action) => {\r\n        setAction(action);\r\n    }\r\n\r\n    const goOnClick = async () => {\r\n        let selectedHomeCatIdsArr = [...selectedHomeCatIds];\r\n        let obj = {\r\n            cityId: selectedHomeCatIdsArr\r\n        };\r\n        if (selectedHomeCatIdsArr && selectedHomeCatIdsArr.length > 0 && action) {\r\n            setLoader(true);\r\n            if (action === \"active\") {\r\n                obj['status'] = 'Y';\r\n                await LocationControllerRepository.inactiveCity(obj);\r\n                notification.success({\r\n                    message: 'State  Updated Successfully.'\r\n                });\r\n            }\r\n            if (action === \"inactive\") {\r\n                obj['status'] = 'N';\r\n                await LocationControllerRepository.inactiveCity(obj);\r\n                notification.success({\r\n                    message: 'State  Updated Successfully.'\r\n                });\r\n            }\r\n            if (action === \"delete\") {\r\n                obj['status'] = 'D';\r\n                await LocationControllerRepository.inactiveCity(obj);\r\n                notification.success({\r\n                    message: 'State  Deleted Successfully.'\r\n                });\r\n            }\r\n            setSelectedHomeCatIds([]);\r\n            let ctr = {};\r\n            ctr._start = currentPage === 1 ? 0 : ((currentPage - 1) * pageSizeTotal);\r\n            ctr._limit = pageSizeTotal;\r\n\r\n            if (search) {\r\n                ctr.search = search;\r\n            }\r\n            dispatch(getAllCity(ctr));\r\n            dispatch(getInactiveCity(ctr));\r\n        } else {\r\n            if (!action) {\r\n                Modal.error({\r\n                    title: 'Please Select Action'\r\n                });\r\n            } else if (!selectedHomeCatIdsArr.length) {\r\n                Modal.error({\r\n                    title: 'Please Select One Category'\r\n                });\r\n            }\r\n        }\r\n    }\r\n    console.log(stateId, \"sdfzxc\")\r\n    return (\r\n        <>\r\n          <div style={{ marginBottom: '0rem', padding: '10px 30px', borderRadius: '0rem', backgroundColor: '#eee' }} className=\"page-heading d-sm-flex justify-content-sm-between align-items-sm-center\">\r\n            <h2 className=\"title mb-3 mb-sm-0\">Change Password</h2>\r\n          </div>\r\n          <div style={{ padding: '5%' }} className=\"col-12\">\r\n            {loader &&\r\n              <div className=\"loader-view w-100\"\r\n                style={{ height: 'calc(100vh - 120px)' }}>\r\n                <CircularProgress />\r\n              </div>\r\n            }\r\n            {!loader &&\r\n              <div>\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-lg-12 d-flex flex-column order-lg-1\">\r\n                    <TextField\r\n                      required\r\n                      disabled={true}\r\n                      id=\"required\"\r\n                      label={'Username'}\r\n                      name={'Username'}\r\n                      defaultValue={userName}\r\n                      margin=\"none\" />\r\n                    <TextField\r\n                      required\r\n                      autoComplete={'off'}\r\n                      id=\"required\"\r\n                      type={'password'}\r\n                      label={'Old Password'}\r\n                      name={'OldPassword'}\r\n                      onChange={(event) => onOldPasswordChange(event.target.value)}\r\n                      onBlur={valiadateProperty}\r\n                      value={oldPassword}\r\n                      margin=\"normal\" />\r\n                    <h6 style={{ color: 'red' }}>{errors['OldPassword']}</h6>\r\n                    <TextField\r\n                      required\r\n                      autoComplete={'off'}\r\n                      id=\"required\"\r\n                      type={'password'}\r\n                      label={'New Password'}\r\n                      name={'NewPassword'}\r\n                      onChange={(event) => onNewPasswordChange(event.target.value)}\r\n                      onBlur={valiadateProperty}\r\n                      value={newPassword}\r\n                      margin=\"normal\" />\r\n                    <h6 style={{ color: 'red' }}>{errors['NewPassword']}</h6>\r\n                    <TextField\r\n                      required\r\n                      type={'password'}\r\n                      autoComplete={'off'}\r\n                      id=\"required\"\r\n                      label={'Confirm Password'}\r\n                      name={'ConfirmPassword'}\r\n                      onChange={(event) => onConfirmPasswordChange(event.target.value)}\r\n                      onBlur={valiadateProperty}\r\n                      value={confirmPassword}\r\n                      margin=\"normal\" />\r\n                    <h6 style={{ color: 'red' }}>{errors['ConfirmPassword']}</h6>\r\n                    <div style={{ paddingTop: '2%', textAlign: 'center' }} className=\"col-lg-12 col-sm-12 col-12\">\r\n                      <Button onClick={() => changePassword()} variant=\"contained\" color=\"primary\" className=\"jr-btn text-white\">Submit</Button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <Snackbar\r\n                  className=\"mb-3 bg-info\"\r\n                  anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                  open={showMessage}\r\n                  message={alertMessage}\r\n                />\r\n              </div>\r\n            }\r\n          </div>\r\n        </>\r\n      );\r\n};\r\n\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}