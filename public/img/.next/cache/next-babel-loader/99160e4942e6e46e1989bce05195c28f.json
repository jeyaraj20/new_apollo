{"ast":null,"code":"import { all, put, call, takeEvery } from 'redux-saga/effects';\nimport { actionTypes, getActiveQuestionsSuccess, getInactiveQuestionsSuccess } from './action';\nimport ExaminationCalendarRepository from '../../repositories/ExaminationCalendarRepository';\n\nfunction* getActiveQuestionsSaga({\n  payload\n}) {\n  try {\n    const data = yield call(ExaminationCalendarRepository.getActiveExams, payload);\n    yield put(getActiveQuestionsSuccess(data));\n  } catch (err) {\n    yield put(getActiveQuestionsSuccess(null));\n  }\n}\n\nfunction* getInactiveQuestionsSaga({\n  payload\n}) {\n  try {\n    const data = yield call(ExaminationCalendarRepository.getInactiveExams, payload);\n    yield put(getInactiveQuestionsSuccess(data));\n  } catch (err) {\n    yield put(getInactiveQuestionsSuccess(null));\n  }\n}\n\nexport default function* rootSaga() {\n  yield all([takeEvery(actionTypes.GET_ACTIVE_EXAM_REQUEST, getActiveQuestionsSaga)]);\n  yield all([takeEvery(actionTypes.GET_INACTIVE_EXAM_REQUEST, getInactiveQuestionsSaga)]);\n}","map":{"version":3,"sources":["D:/Question_cloud/question_cloud_admin_web_new/store/exams/saga.js"],"names":["all","put","call","takeEvery","actionTypes","getActiveQuestionsSuccess","getInactiveQuestionsSuccess","ExaminationCalendarRepository","getActiveQuestionsSaga","payload","data","getActiveExams","err","getInactiveQuestionsSaga","getInactiveExams","rootSaga","GET_ACTIVE_EXAM_REQUEST","GET_INACTIVE_EXAM_REQUEST"],"mappings":"AAAA,SAASA,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,SAAzB,QAA0C,oBAA1C;AAEA,SAASC,WAAT,EAAsBC,yBAAtB,EAAiDC,2BAAjD,QAAoF,UAApF;AAEA,OAAOC,6BAAP,MAA0C,kDAA1C;;AAEA,UAAUC,sBAAV,CAAiC;AAAEC,EAAAA;AAAF,CAAjC,EAA8C;AAC1C,MAAI;AACA,UAAMC,IAAI,GAAG,MAAMR,IAAI,CAACK,6BAA6B,CAACI,cAA/B,EAA+CF,OAA/C,CAAvB;AACA,UAAMR,GAAG,CAACI,yBAAyB,CAACK,IAAD,CAA1B,CAAT;AACH,GAHD,CAGE,OAAOE,GAAP,EAAY;AACV,UAAMX,GAAG,CAACI,yBAAyB,CAAC,IAAD,CAA1B,CAAT;AACH;AACJ;;AAED,UAAUQ,wBAAV,CAAmC;AAAEJ,EAAAA;AAAF,CAAnC,EAAgD;AAC5C,MAAI;AACA,UAAMC,IAAI,GAAG,MAAMR,IAAI,CAACK,6BAA6B,CAACO,gBAA/B,EAAiDL,OAAjD,CAAvB;AACA,UAAMR,GAAG,CAACK,2BAA2B,CAACI,IAAD,CAA5B,CAAT;AACH,GAHD,CAGE,OAAOE,GAAP,EAAY;AACV,UAAMX,GAAG,CAACK,2BAA2B,CAAC,IAAD,CAA5B,CAAT;AACH;AACJ;;AAGD,eAAe,UAAUS,QAAV,GAAqB;AAChC,QAAMf,GAAG,CAAC,CAACG,SAAS,CAACC,WAAW,CAACY,uBAAb,EAAsCR,sBAAtC,CAAV,CAAD,CAAT;AACA,QAAMR,GAAG,CAAC,CAACG,SAAS,CAACC,WAAW,CAACa,yBAAb,EAAwCJ,wBAAxC,CAAV,CAAD,CAAT;AACH","sourcesContent":["import { all, put, call, takeEvery } from 'redux-saga/effects';\r\n\r\nimport { actionTypes, getActiveQuestionsSuccess, getInactiveQuestionsSuccess } from './action';\r\n\r\nimport ExaminationCalendarRepository from '../../repositories/ExaminationCalendarRepository';\r\n\r\nfunction* getActiveQuestionsSaga({ payload }) {\r\n    try {\r\n        const data = yield call(ExaminationCalendarRepository.getActiveExams, payload);\r\n        yield put(getActiveQuestionsSuccess(data));\r\n    } catch (err) {\r\n        yield put(getActiveQuestionsSuccess(null));\r\n    }\r\n}\r\n\r\nfunction* getInactiveQuestionsSaga({ payload }) {\r\n    try {\r\n        const data = yield call(ExaminationCalendarRepository.getInactiveExams, payload);\r\n        yield put(getInactiveQuestionsSuccess(data));\r\n    } catch (err) {\r\n        yield put(getInactiveQuestionsSuccess(null));\r\n    }\r\n}\r\n\r\n\r\nexport default function* rootSaga() {\r\n    yield all([takeEvery(actionTypes.GET_ACTIVE_EXAM_REQUEST, getActiveQuestionsSaga)]);\r\n    yield all([takeEvery(actionTypes.GET_INACTIVE_EXAM_REQUEST, getInactiveQuestionsSaga)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}