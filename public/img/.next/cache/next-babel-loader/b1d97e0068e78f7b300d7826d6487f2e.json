{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(getAllStudentSaga),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(getInactiveStudentSaga),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport { all, put, call, takeEvery } from 'redux-saga/effects';\nimport { actionTypes, getAllStudentSuccess, getInactiveStudentSuccess } from './action';\nimport StudentRepository from '../../repositories/StudentRepository';\n\nfunction getAllStudentSaga(_ref) {\n  var payload, data;\n  return _regeneratorRuntime.wrap(function getAllStudentSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          payload = _ref.payload;\n          console.log('11');\n          _context.prev = 2;\n          _context.next = 5;\n          return call(StudentRepository.getAllStudent, payload);\n\n        case 5:\n          data = _context.sent;\n          console.log(data, '1111');\n          _context.next = 9;\n          return put(getAllStudentSuccess(data));\n\n        case 9:\n          _context.next = 16;\n          break;\n\n        case 11:\n          _context.prev = 11;\n          _context.t0 = _context[\"catch\"](2);\n          console.log(_context.t0, '111112222');\n          _context.next = 16;\n          return put(getAllStudentSuccess(null));\n\n        case 16:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[2, 11]]);\n}\n\nfunction getInactiveStudentSaga(_ref2) {\n  var payload, data;\n  return _regeneratorRuntime.wrap(function getInactiveStudentSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          payload = _ref2.payload;\n          console.log('22');\n          _context2.prev = 2;\n          _context2.next = 5;\n          return call(StudentRepository.getInactiveStudent, payload);\n\n        case 5:\n          data = _context2.sent;\n          console.log(data, '222');\n          _context2.next = 9;\n          return put(getInactiveStudentSuccess(data));\n\n        case 9:\n          _context2.next = 16;\n          break;\n\n        case 11:\n          _context2.prev = 11;\n          _context2.t0 = _context2[\"catch\"](2);\n          console.log(_context2.t0, '22233333');\n          _context2.next = 16;\n          return put(getInactiveStudentSuccess(null));\n\n        case 16:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[2, 11]]);\n}\n\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return all([takeEvery(actionTypes.GET_ALL_STUDENT_REQUEST, getAllStudentSaga)]);\n\n        case 2:\n          _context3.next = 4;\n          return all([takeEvery(actionTypes.GET_INACTIVE_STUDENT_REQUEST, getInactiveStudentSaga)]);\n\n        case 4:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}","map":{"version":3,"sources":["D:/Question_cloud/question_cloud_admin_web_new/store/Student/saga.js"],"names":["getAllStudentSaga","getInactiveStudentSaga","rootSaga","all","put","call","takeEvery","actionTypes","getAllStudentSuccess","getInactiveStudentSuccess","StudentRepository","payload","console","log","getAllStudent","data","getInactiveStudent","GET_ALL_STUDENT_REQUEST","GET_INACTIVE_STUDENT_REQUEST"],"mappings":";;oDAMUA,iB;qDAYAC,sB;qDAYeC,Q;;AA9BzB,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,SAAzB,QAA0C,oBAA1C;AAEA,SAASC,WAAT,EAAsBC,oBAAtB,EAA4CC,yBAA5C,QAA6E,UAA7E;AAEA,OAAOC,iBAAP,MAA8B,sCAA9B;;AAEA,SAAUV,iBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8BW,UAAAA,OAA9B,QAA8BA,OAA9B;AACIC,UAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AADJ;AAAA;AAGqB,iBAAMR,IAAI,CAACK,iBAAiB,CAACI,aAAnB,EAAkCH,OAAlC,CAAV;;AAHrB;AAGcI,UAAAA,IAHd;AAIQH,UAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ,EAAmB,MAAnB;AAJR;AAKQ,iBAAMX,GAAG,CAACI,oBAAoB,CAACO,IAAD,CAArB,CAAT;;AALR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAOQH,UAAAA,OAAO,CAACC,GAAR,cAAmB,WAAnB;AAPR;AAQQ,iBAAMT,GAAG,CAACI,oBAAoB,CAAC,IAAD,CAArB,CAAT;;AARR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAYA,SAAUP,sBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmCU,UAAAA,OAAnC,SAAmCA,OAAnC;AACIC,UAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AADJ;AAAA;AAGqB,iBAAMR,IAAI,CAACK,iBAAiB,CAACM,kBAAnB,EAAuCL,OAAvC,CAAV;;AAHrB;AAGcI,UAAAA,IAHd;AAIQH,UAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ,EAAmB,KAAnB;AAJR;AAKQ,iBAAMX,GAAG,CAACK,yBAAyB,CAACM,IAAD,CAA1B,CAAT;;AALR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAOQH,UAAAA,OAAO,CAACC,GAAR,eAAmB,UAAnB;AAPR;AAQQ,iBAAMT,GAAG,CAACK,yBAAyB,CAAC,IAAD,CAA1B,CAAT;;AARR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAYA,eAAe,SAAUP,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACX,iBAAMC,GAAG,CAAC,CAACG,SAAS,CAACC,WAAW,CAACU,uBAAb,EAAsCjB,iBAAtC,CAAV,CAAD,CAAT;;AADW;AAAA;AAEX,iBAAMG,GAAG,CAAC,CAACG,SAAS,CAACC,WAAW,CAACW,4BAAb,EAA2CjB,sBAA3C,CAAV,CAAD,CAAT;;AAFW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { all, put, call, takeEvery } from 'redux-saga/effects';\r\n\r\nimport { actionTypes, getAllStudentSuccess, getInactiveStudentSuccess } from './action';\r\n\r\nimport StudentRepository from '../../repositories/StudentRepository';\r\n\r\nfunction* getAllStudentSaga({ payload }) {\r\n    console.log('11')\r\n    try {\r\n        const data = yield call(StudentRepository.getAllStudent, payload);\r\n        console.log(data , '1111')\r\n        yield put(getAllStudentSuccess(data));\r\n    } catch (err) {\r\n        console.log( err , '111112222')\r\n        yield put(getAllStudentSuccess(null));\r\n    }\r\n}\r\n\r\nfunction* getInactiveStudentSaga({ payload }) {\r\n    console.log('22')\r\n    try {\r\n        const data = yield call(StudentRepository.getInactiveStudent, payload);\r\n        console.log(data , '222')\r\n        yield put(getInactiveStudentSuccess(data));\r\n    } catch (err) {\r\n        console.log( err , '22233333')\r\n        yield put(getInactiveStudentSuccess(null));\r\n    }\r\n}\r\n\r\nexport default function* rootSaga() {\r\n    yield all([takeEvery(actionTypes.GET_ALL_STUDENT_REQUEST, getAllStudentSaga)]);\r\n    yield all([takeEvery(actionTypes.GET_INACTIVE_STUDENT_REQUEST, getInactiveStudentSaga)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}