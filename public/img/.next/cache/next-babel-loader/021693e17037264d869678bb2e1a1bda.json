{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport Repository, { apiUrl } from './Repository';\n\nvar AuthRepository = /*#__PURE__*/function () {\n  function AuthRepository(callback) {\n    _classCallCheck(this, AuthRepository);\n\n    this.callback = callback;\n  }\n\n  _createClass(AuthRepository, [{\n    key: \"getAllStudent\",\n    value: function () {\n      var _getAllStudent = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(payload) {\n        var reponse;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return Repository.get(\"\".concat(apiUrl, \"/student/status/Y?_start=\").concat(payload._start, \"&_limit=\").concat(payload._limit)).then(function (response) {\n                  return response.data;\n                })[\"catch\"](function (error) {\n                  return {\n                    error: JSON.stringify(error)\n                  };\n                });\n\n              case 2:\n                reponse = _context.sent;\n                return _context.abrupt(\"return\", reponse);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getAllStudent(_x) {\n        return _getAllStudent.apply(this, arguments);\n      }\n\n      return getAllStudent;\n    }()\n  }, {\n    key: \"getInactiveStudent\",\n    value: function () {\n      var _getInactiveStudent = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(payload) {\n        var reponse;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return Repository.get(\"\".concat(apiUrl, \"/student/status/N?_start=\").concat(payload._start, \"&_limit=\").concat(payload._limit)).then(function (response) {\n                  return response.data;\n                })[\"catch\"](function (error) {\n                  return {\n                    error: JSON.stringify(error)\n                  };\n                });\n\n              case 2:\n                reponse = _context2.sent;\n                return _context2.abrupt(\"return\", reponse);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function getInactiveStudent(_x2) {\n        return _getInactiveStudent.apply(this, arguments);\n      }\n\n      return getInactiveStudent;\n    }()\n  }, {\n    key: \"saveStudent\",\n    value: function () {\n      var _saveStudent = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(formdata) {\n        var reponse;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return Repository.post(\"\".concat(apiUrl, \"/student/\"), formdata).then(function (response) {\n                  return response.data;\n                })[\"catch\"](function (error) {\n                  return {\n                    error: JSON.stringify(error)\n                  };\n                });\n\n              case 2:\n                reponse = _context3.sent;\n                return _context3.abrupt(\"return\", reponse);\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function saveStudent(_x3) {\n        return _saveStudent.apply(this, arguments);\n      }\n\n      return saveStudent;\n    }()\n  }, {\n    key: \"updateStudent\",\n    value: function () {\n      var _updateStudent = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(categoryId, formdata) {\n        var reponse;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                console.log(\"12345689\");\n                _context4.next = 3;\n                return Repository.put(\"\".concat(apiUrl, \"/student/id/\").concat(categoryId), formdata).then(function (response) {\n                  return response.data;\n                })[\"catch\"](function (error) {\n                  return {\n                    error: JSON.stringify(error)\n                  };\n                });\n\n              case 3:\n                reponse = _context4.sent;\n                return _context4.abrupt(\"return\", reponse);\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function updateStudent(_x4, _x5) {\n        return _updateStudent.apply(this, arguments);\n      }\n\n      return updateStudent;\n    }()\n  }, {\n    key: \"changeStatus\",\n    value: function () {\n      var _changeStatus = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(data) {\n        var reponse;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return Repository.put(\"\".concat(apiUrl, \"/student/status\"), data).then(function (response) {\n                  return response.data;\n                })[\"catch\"](function (error) {\n                  return {\n                    error: JSON.stringify(error)\n                  };\n                });\n\n              case 2:\n                reponse = _context5.sent;\n                return _context5.abrupt(\"return\", reponse);\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function changeStatus(_x6) {\n        return _changeStatus.apply(this, arguments);\n      }\n\n      return changeStatus;\n    }()\n  }, {\n    key: \"deleteStudent\",\n    value: function () {\n      var _deleteStudent = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(data) {\n        var reponse;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return Repository.put(\"\".concat(apiUrl, \"/student/status\"), data).then(function (response) {\n                  return response.data;\n                })[\"catch\"](function (error) {\n                  return {\n                    error: JSON.stringify(error)\n                  };\n                });\n\n              case 2:\n                reponse = _context6.sent;\n                return _context6.abrupt(\"return\", reponse);\n\n              case 4:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      function deleteStudent(_x7) {\n        return _deleteStudent.apply(this, arguments);\n      }\n\n      return deleteStudent;\n    }()\n  }, {\n    key: \"getStudentsCount\",\n    value: function () {\n      var _getStudentsCount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(payload) {\n        var reponse;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return Repository.get(\"\".concat(apiUrl, \"/student/stud-count/\").concat(stud_status, \"?_start=\").concat(payload._start, \"&_limit=\").concat(payload._limit)).then(function (response) {\n                  return response.data;\n                })[\"catch\"](function (error) {\n                  return {\n                    error: JSON.stringify(error)\n                  };\n                });\n\n              case 2:\n                reponse = _context7.sent;\n                return _context7.abrupt(\"return\", reponse);\n\n              case 4:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      function getStudentsCount(_x8) {\n        return _getStudentsCount.apply(this, arguments);\n      }\n\n      return getStudentsCount;\n    }()\n  }, {\n    key: \"getAllStudentDownload\",\n    value: function () {\n      var _getAllStudentDownload = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(payload) {\n        var reponse;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return Repository.get(\"\".concat(apiUrl, \"/student/download/\").concat(stud_status, \"?_start=\").concat(payload._start, \"&_limit=\").concat(payload._limit)).then(function (response) {\n                  return response.data;\n                })[\"catch\"](function (error) {\n                  return {\n                    error: JSON.stringify(error)\n                  };\n                });\n\n              case 2:\n                reponse = _context8.sent;\n                return _context8.abrupt(\"return\", reponse);\n\n              case 4:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }));\n\n      function getAllStudentDownload(_x9) {\n        return _getAllStudentDownload.apply(this, arguments);\n      }\n\n      return getAllStudentDownload;\n    }()\n  }, {\n    key: \"getStudentById\",\n    value: function () {\n      var _getStudentById = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(payload) {\n        var reponse;\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.next = 2;\n                return Repository.get(\"\".concat(apiUrl, \"/student/id/\").concat(stud_id, \"?_start=\").concat(payload._start, \"&_limit=\").concat(payload._limit)).then(function (response) {\n                  return response.data;\n                })[\"catch\"](function (error) {\n                  return {\n                    error: JSON.stringify(error)\n                  };\n                });\n\n              case 2:\n                reponse = _context9.sent;\n                return _context9.abrupt(\"return\", reponse);\n\n              case 4:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9);\n      }));\n\n      function getStudentById(_x10) {\n        return _getStudentById.apply(this, arguments);\n      }\n\n      return getStudentById;\n    }()\n  }]);\n\n  return AuthRepository;\n}();\n\nexport default new AuthRepository();","map":{"version":3,"sources":["D:/Question_cloud/question_cloud_admin_web_new/repositories/StudentRepository.js"],"names":["Repository","apiUrl","AuthRepository","callback","payload","get","_start","_limit","then","response","data","error","JSON","stringify","reponse","formdata","post","categoryId","console","log","put","stud_status","stud_id"],"mappings":"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","sourcesContent":["import Repository, { apiUrl } from './Repository';\r\n\r\nclass AuthRepository {\r\n    constructor(callback) {\r\n        this.callback = callback;\r\n    }\r\n    async getAllStudent(payload) {\r\n        const reponse = await Repository.get(`${apiUrl}/student/status/Y?_start=${payload._start}&_limit=${payload._limit}`)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n            .catch(error => ({ error: JSON.stringify(error) }));\r\n        return reponse;\r\n    }\r\n\r\n    async getInactiveStudent(payload) {\r\n        const reponse = await Repository.get(`${apiUrl}/student/status/N?_start=${payload._start}&_limit=${payload._limit}`)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n\r\n            .catch(error => ({ error: JSON.stringify(error) }));\r\n        return reponse;\r\n    }\r\n    async saveStudent(formdata) {\r\n        const reponse = await Repository.post(`${apiUrl}/student/`, formdata)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n            .catch(error => ({ error: JSON.stringify(error) }));\r\n        return reponse;\r\n    }\r\n    async updateStudent(categoryId, formdata) {\r\n        console.log(\"12345689\")\r\n        const reponse = await Repository.put(`${apiUrl}/student/id/${categoryId}`, formdata)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n            .catch(error => ({ error: JSON.stringify(error) }));\r\n        return reponse;\r\n    }\r\n    async changeStatus(data) {\r\n        const reponse = await Repository.put(`${apiUrl}/student/status`, data)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n            .catch(error => ({ error: JSON.stringify(error) }));\r\n        return reponse;\r\n    }\r\n    async deleteStudent(data) {\r\n        const reponse = await Repository.put(`${apiUrl}/student/status`, data)\r\n        .then(response => {\r\n            return response.data;\r\n        })\r\n        .catch(error => ({ error: JSON.stringify(error) }));\r\n    return reponse;\r\n    }\r\n    async getStudentsCount(payload) {\r\n    const reponse = await Repository.get(`${apiUrl}/student/stud-count/${stud_status}?_start=${payload._start}&_limit=${payload._limit}`)\r\n        .then(response => {\r\n            return response.data;\r\n        })\r\n        .catch(error => ({ error: JSON.stringify(error) }));\r\n    return reponse;\r\n}\r\nasync getAllStudentDownload(payload) {\r\n    const reponse = await Repository.get(`${apiUrl}/student/download/${stud_status}?_start=${payload._start}&_limit=${payload._limit}`)\r\n        .then(response => {\r\n            return response.data;\r\n        })\r\n        .catch(error => ({ error: JSON.stringify(error) }));\r\n    return reponse;\r\n}\r\nasync getStudentById(payload) {\r\n    const reponse = await Repository.get(`${apiUrl}/student/id/${stud_id}?_start=${payload._start}&_limit=${payload._limit}`)\r\n        .then(response => {\r\n            return response.data;\r\n        })\r\n        .catch(error => ({ error: JSON.stringify(error) }));\r\n    return reponse;\r\n}\r\n\r\n}\r\n\r\nexport default new AuthRepository();\r\n\r\n"]},"metadata":{},"sourceType":"module"}