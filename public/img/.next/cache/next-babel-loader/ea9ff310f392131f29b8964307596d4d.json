{"ast":null,"code":"import { all, put, call, takeEvery } from 'redux-saga/effects';\nimport { actionTypes, getAllCitySuccess, getInactiveCitySuccess } from './action';\nimport StateRepository from '../../repositories/LocationControllerRepository';\n\nfunction* getAllCitySaga({\n  payload\n}) {\n  try {\n    const data = yield call(StateRepository.getAllCity, payload);\n    yield put(getAllCitySuccess(data));\n  } catch (err) {\n    yield put(getAllCitySuccess(null));\n  }\n}\n\nfunction* getInactiveCitySaga({\n  payload\n}) {\n  try {\n    const data = yield call(StateRepository.getInactiveCity, payload);\n    yield put(getInactiveCitySuccess(data));\n  } catch (err) {\n    yield put(getInactiveCitySuccess(null));\n  }\n}\n\nexport default function* rootSaga() {\n  yield all([takeEvery(actionTypes.GET_ALL_CITY_REQUEST, getAllCitySaga)]);\n  yield all([takeEvery(actionTypes.GET_INACTIVE_CITY_REQUEST, getInactiveCitySaga)]);\n}","map":{"version":3,"sources":["D:/Question_cloud/question_cloud_admin_web_new/store/City/saga.js"],"names":["all","put","call","takeEvery","actionTypes","getAllCitySuccess","getInactiveCitySuccess","StateRepository","getAllCitySaga","payload","data","getAllCity","err","getInactiveCitySaga","getInactiveCity","rootSaga","GET_ALL_CITY_REQUEST","GET_INACTIVE_CITY_REQUEST"],"mappings":"AAAA,SAASA,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,SAAzB,QAA0C,oBAA1C;AAEA,SAASC,WAAT,EAAsBC,iBAAtB,EAAyCC,sBAAzC,QAAuE,UAAvE;AAEA,OAAOC,eAAP,MAA4B,iDAA5B;;AAEA,UAAUC,cAAV,CAAyB;AAAEC,EAAAA;AAAF,CAAzB,EAAsC;AAClC,MAAI;AACA,UAAMC,IAAI,GAAG,MAAMR,IAAI,CAACK,eAAe,CAACI,UAAjB,EAA6BF,OAA7B,CAAvB;AACA,UAAMR,GAAG,CAACI,iBAAiB,CAACK,IAAD,CAAlB,CAAT;AACH,GAHD,CAGE,OAAOE,GAAP,EAAY;AACV,UAAMX,GAAG,CAACI,iBAAiB,CAAC,IAAD,CAAlB,CAAT;AACH;AACJ;;AAED,UAAUQ,mBAAV,CAA8B;AAAEJ,EAAAA;AAAF,CAA9B,EAA2C;AACvC,MAAI;AACA,UAAMC,IAAI,GAAG,MAAMR,IAAI,CAACK,eAAe,CAACO,eAAjB,EAAkCL,OAAlC,CAAvB;AACA,UAAMR,GAAG,CAACK,sBAAsB,CAACI,IAAD,CAAvB,CAAT;AACH,GAHD,CAGE,OAAOE,GAAP,EAAY;AACV,UAAMX,GAAG,CAACK,sBAAsB,CAAC,IAAD,CAAvB,CAAT;AACH;AACJ;;AAED,eAAe,UAAUS,QAAV,GAAqB;AAChC,QAAMf,GAAG,CAAC,CAACG,SAAS,CAACC,WAAW,CAACY,oBAAb,EAAmCR,cAAnC,CAAV,CAAD,CAAT;AACA,QAAMR,GAAG,CAAC,CAACG,SAAS,CAACC,WAAW,CAACa,yBAAb,EAAwCJ,mBAAxC,CAAV,CAAD,CAAT;AACH","sourcesContent":["import { all, put, call, takeEvery } from 'redux-saga/effects';\r\n\r\nimport { actionTypes, getAllCitySuccess, getInactiveCitySuccess } from './action';\r\n\r\nimport StateRepository from '../../repositories/LocationControllerRepository';\r\n\r\nfunction* getAllCitySaga({ payload }) {\r\n    try {\r\n        const data = yield call(StateRepository.getAllCity, payload);\r\n        yield put(getAllCitySuccess(data));\r\n    } catch (err) {\r\n        yield put(getAllCitySuccess(null));\r\n    }\r\n}\r\n\r\nfunction* getInactiveCitySaga({ payload }) {\r\n    try {\r\n        const data = yield call(StateRepository.getInactiveCity, payload);\r\n        yield put(getInactiveCitySuccess(data));\r\n    } catch (err) {\r\n        yield put(getInactiveCitySuccess(null));\r\n    }\r\n}\r\n\r\nexport default function* rootSaga() {\r\n    yield all([takeEvery(actionTypes.GET_ALL_CITY_REQUEST, getAllCitySaga)]);\r\n    yield all([takeEvery(actionTypes.GET_INACTIVE_CITY_REQUEST, getInactiveCitySaga)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}