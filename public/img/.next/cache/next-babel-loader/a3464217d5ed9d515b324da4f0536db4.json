{"ast":null,"code":"var _jsxFileName = \"D:\\\\Question_cloud\\\\question_cloud_admin_web_new\\\\pages\\\\settings\\\\view\\\\index.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Modal, Spin, notification } from 'antd';\nimport HeaderDashboard from '../../../components/header/HeaderDashboard';\nimport Sidebar from '../../../components/sections/sidebar';\nimport adminService from '../../../repositories/AdminRepository';\nimport Joi from 'joi-browser';\n\nconst Home = props => {\n  const {\n    auth\n  } = useSelector(({\n    auth\n  }) => auth);\n  const {\n    0: showModal,\n    1: setShowModal\n  } = useState(true);\n  const {\n    0: errors,\n    1: setErrors\n  } = useState({});\n  const {\n    0: loader,\n    1: setLoader\n  } = useState(false);\n  const {\n    0: Username,\n    1: setUsername\n  } = useState('');\n  const {\n    0: oldPassword,\n    1: setOldPassword\n  } = useState('');\n  const {\n    0: newPassword,\n    1: setNewPassword\n  } = useState('');\n  const {\n    0: confirmPassword,\n    1: setConfirmPassword\n  } = useState('');\n  const {\n    0: userType,\n    1: setUserType\n  } = useState(\"\");\n  const {\n    0: userLoginType,\n    1: setUserLoginType\n  } = useState(\"\");\n  const schema = {\n    OldPassword: Joi.string().required(),\n    NewPassword: Joi.string().min(5).required(),\n    ConfirmPassword: Joi.string().required()\n  };\n  useEffect(() => {\n    let local = JSON.parse(localStorage.getItem('persist:QuestionCloudAdmin'));\n    let localAuth = local && local.auth ? JSON.parse(local.auth) : {};\n\n    if (localAuth && !localAuth.isLoggedIn) {\n      window.location.href = \"/\";\n    }\n  }, [auth]);\n\n  const closeModalOnClick = () => {\n    window.location.href = \"/home\";\n    setShowModal(false);\n  };\n\n  const UsernameOnChange = Username => {\n    let errorObj = _objectSpread({}, errors);\n\n    errorObj['Username'] = '';\n    setUsername(Username);\n    setErrors(errorObj);\n  };\n\n  const OldPasswordOnChange = oldPassword => {\n    let errorObj = _objectSpread({}, errors);\n\n    errorObj['OldPassword'] = '';\n    setOldPassword(oldPassword);\n    setErrors(errorObj);\n  };\n\n  const NewPasswordOnChange = newPassword => {\n    let errorObj = _objectSpread({}, errors);\n\n    errorObj['NewPassword'] = '';\n    setNewPassword(newPassword);\n    setErrors(errorObj);\n  };\n\n  const ConfirmPasswordOnChange = confirmPassword => {\n    let errorObj = _objectSpread({}, errors);\n\n    errorObj['ConfirmPassword'] = '';\n    setConfirmPassword(confirmPassword);\n    setErrors(errorObj);\n  };\n\n  const saveOnClick = () => {\n    changePassword();\n  };\n\n  const handleRefresh = async () => {\n    setLoader(true);\n    setOldPassword('');\n    setNewPassword('');\n    setConfirmPassword('');\n    setUsername(auth.name);\n    setUserType(auth.type);\n    setUserLoginType(auth.logintype);\n    setLoader(false);\n  };\n\n  useEffect(() => {\n    handleRefresh();\n  }, []);\n\n  const valiadateProperty = e => {\n    let {\n      name,\n      value,\n      className\n    } = e.currentTarget;\n    const obj = {\n      [name]: value\n    };\n    const filedSchema = {\n      [name]: schema[name]\n    };\n    const {\n      error\n    } = Joi.validate(obj, filedSchema);\n    let message = error ? error.details[0].message : null;\n    setErrors(_objectSpread(_objectSpread({}, errors), {}, {\n      [name]: message,\n      \"errordetails\": null\n    }));\n  };\n\n  const editModalOnClick = async data => {\n    console.log(data, \"data\");\n    setLoader(true);\n    setUsername(auth.name);\n    setOldPassword('');\n    setConfirmPassword('');\n    setNewPassword('');\n    setUserType(auth.type);\n    setUserLoginType(auth.logintype);\n    setLoader(false);\n    setShowModal(true);\n  };\n\n  const changePassword = async () => {\n    if (newPassword != confirmPassword) {\n      setErrors(_objectSpread(_objectSpread({}, errors), {}, {\n        ['ConfirmPassword']: 'Confirm Password must match New Password',\n        \"errordetails\": null\n      }));\n    } else {\n      if (oldPassword && newPassword && confirmPassword && errors['ConfirmPassword'] === null && errors['NewPassword'] === null && errors['OldPassword'] === null) {\n        let obj = {\n          oldpassword: oldPassword,\n          newpassword: newPassword,\n          type: userType,\n          logintype: userLoginType\n        };\n\n        try {\n          console.log(obj, \"qq3\");\n          await adminService.changePassword(obj);\n          notification.success({\n            message: 'Password Changed Successfull'\n          });\n        } catch (err) {\n          notification.error({\n            message: 'Password Changed Failed.'\n          });\n        }\n      } else {\n        let errorObj = _objectSpread({}, errors);\n\n        if (!oldPassword) errorObj['OldPassword'] = \"Please Enter OldPassword\";\n        if (!newPassword) errorObj['NewPassword'] = \"Please Enter newPassword\";\n        if (!confirmPassword) errorObj['ConfirmPassword'] = \"Please Enter ConfirmPassword\";\n        setErrors(errorObj);\n      }\n    }\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }, __jsx(Spin, {\n    spinning: loader,\n    tip: 'Loading...',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, __jsx(HeaderDashboard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    className: \"dashboard-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"row no-gutters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    id: \"sidebar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 29\n    }\n  }, __jsx(Sidebar, {\n    page: 'Settings',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 33\n    }\n  }))), __jsx(Modal, {\n    visible: showModal,\n    okText: 'Save',\n    onCancel: closeModalOnClick,\n    title: \" ChangePassword \",\n    width: 800,\n    onOk: saveOnClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 25\n    }\n  }, __jsx(Spin, {\n    spinning: loader,\n    tip: 'Loading...',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 29\n    }\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 33\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 37\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 41\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 45\n    }\n  }, \"Username\", __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 60\n    }\n  }, \"*\")), __jsx(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    value: Username,\n    placeholder: \"qcadmin\",\n    onChange: e => UsernameOnChange(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 45\n    }\n  }), errors['Username'] && __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 49\n    }\n  }, errors['Username'])), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 41\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 45\n    }\n  }, \"OldPassword \", __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 64\n    }\n  }, \"*\")), __jsx(\"input\", {\n    className: \"form-control\",\n    type: 'password',\n    name: 'OldPassword',\n    value: oldPassword,\n    onBlur: valiadateProperty,\n    placeholder: \"\",\n    onChange: e => OldPasswordOnChange(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 45\n    }\n  }), errors['OldPassword'] && __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 49\n    }\n  }, errors['OldPassword'])), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 41\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 45\n    }\n  }, \"NewPassword \", __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 64\n    }\n  }, \"*\")), __jsx(\"input\", {\n    className: \"form-control\",\n    type: 'password',\n    name: 'NewPassword',\n    value: newPassword,\n    onBlur: valiadateProperty,\n    placeholder: \"\",\n    onChange: e => NewPasswordOnChange(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 45\n    }\n  }), errors['NewPassword'] && __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 49\n    }\n  }, errors['NewPassword'])), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 41\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 45\n    }\n  }, \"ConfirmPassword\", __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 67\n    }\n  }, \"*\")), __jsx(\"input\", {\n    className: \"form-control\",\n    type: 'password',\n    name: 'ConfirmPassword',\n    value: confirmPassword,\n    onBlur: valiadateProperty,\n    placeholder: \"\",\n    onChange: e => ConfirmPasswordOnChange(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 45\n    }\n  }), errors['ConfirmPassword'] && __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 49\n    }\n  }, errors['ConfirmPassword']))))))))));\n};\n\nexport default Home;","map":{"version":3,"sources":["D:/Question_cloud/question_cloud_admin_web_new/pages/settings/view/index.jsx"],"names":["React","useEffect","useState","useSelector","Modal","Spin","notification","HeaderDashboard","Sidebar","adminService","Joi","Home","props","auth","showModal","setShowModal","errors","setErrors","loader","setLoader","Username","setUsername","oldPassword","setOldPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","userType","setUserType","userLoginType","setUserLoginType","schema","OldPassword","string","required","NewPassword","min","ConfirmPassword","local","JSON","parse","localStorage","getItem","localAuth","isLoggedIn","window","location","href","closeModalOnClick","UsernameOnChange","errorObj","OldPasswordOnChange","NewPasswordOnChange","ConfirmPasswordOnChange","saveOnClick","changePassword","handleRefresh","name","type","logintype","valiadateProperty","e","value","className","currentTarget","obj","filedSchema","error","validate","message","details","editModalOnClick","data","console","log","oldpassword","newpassword","success","err","color","target"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Modal, Spin, notification } from 'antd';\r\nimport HeaderDashboard from '../../../components/header/HeaderDashboard';\r\nimport Sidebar from '../../../components/sections/sidebar';\r\nimport adminService from '../../../repositories/AdminRepository';\r\nimport Joi from 'joi-browser';\r\n\r\n\r\nconst Home = (props) => {\r\n    const { auth } = useSelector(({ auth }) => auth);\r\n    const [showModal, setShowModal] = useState(true);\r\n    const [errors, setErrors] = useState({});\r\n    const [loader, setLoader] = useState(false);\r\n    const [Username, setUsername] = useState('');\r\n    const [oldPassword, setOldPassword] = useState('');\r\n    const [newPassword, setNewPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [userType, setUserType] = useState(\"\");\r\n    const [userLoginType, setUserLoginType] = useState(\"\");\r\n\r\n    const schema = {\r\n        OldPassword: Joi.string().required(),\r\n        NewPassword: Joi.string().min(5).required(),\r\n        ConfirmPassword: Joi.string().required(),\r\n    }\r\n\r\n    useEffect(() => {\r\n        let local = JSON.parse(localStorage.getItem('persist:QuestionCloudAdmin'));\r\n        let localAuth = local && local.auth ? JSON.parse(local.auth) : {};\r\n        if (localAuth && !localAuth.isLoggedIn) {\r\n            window.location.href = \"/\";\r\n        }\r\n    }, [auth]);\r\n\r\n    const closeModalOnClick = () => {\r\n        window.location.href = \"/home\";\r\n        setShowModal(false);\r\n    }\r\n\r\n    const UsernameOnChange = (Username) => {\r\n        let errorObj = { ...errors };\r\n        errorObj['Username'] = '';\r\n        setUsername(Username);\r\n        setErrors(errorObj);\r\n    }\r\n\r\n    const OldPasswordOnChange = (oldPassword) => {\r\n        let errorObj = { ...errors };\r\n        errorObj['OldPassword'] = '';\r\n        setOldPassword(oldPassword);\r\n        setErrors(errorObj);\r\n    }\r\n\r\n    const NewPasswordOnChange = (newPassword) => {\r\n        let errorObj = { ...errors };\r\n        errorObj['NewPassword'] = '';\r\n        setNewPassword(newPassword);\r\n        setErrors(errorObj);\r\n    }\r\n\r\n    const ConfirmPasswordOnChange = (confirmPassword) => {\r\n        let errorObj = { ...errors };\r\n        errorObj['ConfirmPassword'] = '';\r\n        setConfirmPassword(confirmPassword);\r\n        setErrors(errorObj);\r\n    }\r\n\r\n    const saveOnClick = () => {\r\n        changePassword();\r\n    }\r\n\r\n    const handleRefresh = async () => {\r\n        setLoader(true);\r\n        setOldPassword('');\r\n        setNewPassword('');\r\n        setConfirmPassword('');\r\n        setUsername(auth.name);\r\n        setUserType(auth.type);\r\n        setUserLoginType(auth.logintype);\r\n        setLoader(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        handleRefresh()\r\n    }, [])\r\n\r\n    const valiadateProperty = (e) => {\r\n        let { name, value, className } = e.currentTarget;\r\n        const obj = { [name]: value };\r\n        const filedSchema = { [name]: schema[name] };\r\n        const { error } = Joi.validate(obj, filedSchema);\r\n\r\n        let message = error ? error.details[0].message : null;\r\n        setErrors({ ...errors, [name]: message, \"errordetails\": null })\r\n    }\r\n\r\n    const editModalOnClick = async (data) => {\r\n        console.log(data, \"data\")\r\n        setLoader(true);\r\n        setUsername(auth.name)\r\n        setOldPassword('')\r\n        setConfirmPassword('')\r\n        setNewPassword('')\r\n        setUserType(auth.type);\r\n        setUserLoginType(auth.logintype);\r\n        setLoader(false);\r\n        setShowModal(true);\r\n    }\r\n\r\n    const changePassword = async () => {\r\n        if (newPassword != confirmPassword) {\r\n            setErrors({ ...errors, ['ConfirmPassword']: 'Confirm Password must match New Password', \"errordetails\": null })\r\n        } else {\r\n            if (oldPassword && newPassword && confirmPassword && errors['ConfirmPassword'] === null &&\r\n                errors['NewPassword'] === null && errors['OldPassword'] === null) {\r\n                let obj = {\r\n                    oldpassword: oldPassword,\r\n                    newpassword: newPassword,\r\n                    type: userType,\r\n                    logintype: userLoginType\r\n                };\r\n\r\n                try {\r\n                    console.log(obj, \"qq3\");\r\n                    await adminService.changePassword(obj);\r\n                    notification.success({\r\n                        message: 'Password Changed Successfull'\r\n                    })\r\n\r\n                } catch (err) {\r\n                    notification.error({\r\n                        message: 'Password Changed Failed.'\r\n                    });\r\n                }\r\n            } else {\r\n                let errorObj = { ...errors };\r\n                if (!oldPassword) errorObj['OldPassword'] = \"Please Enter OldPassword\";\r\n                if (!newPassword) errorObj['NewPassword'] = \"Please Enter newPassword\";\r\n                if (!confirmPassword) errorObj['ConfirmPassword'] = \"Please Enter ConfirmPassword\";\r\n                setErrors(errorObj);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Spin spinning={loader} tip={'Loading...'}>\r\n                <HeaderDashboard />\r\n                <div className=\"dashboard-container\">\r\n                    <div className=\"row no-gutters\">\r\n                        <div className=\"col-md-2\">\r\n                            <div id=\"sidebar\">\r\n                                <Sidebar page={'Settings'} />\r\n                            </div>\r\n                        </div>\r\n                        <Modal\r\n                            visible={showModal}\r\n                            okText={'Save'}\r\n                           onCancel={closeModalOnClick}\r\n                            title=\" ChangePassword \"\r\n                            width={800}\r\n                            onOk={saveOnClick}\r\n                        >\r\n                            <Spin spinning={loader} tip={'Loading...'}>\r\n                                <div className='row'>\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"form-group\">\r\n                                            <label>Username<span style={{ color: 'red' }}>*</span></label>\r\n                                            <input\r\n                                                className=\"form-control\"\r\n                                                type=\"text\"\r\n                                                value={Username}\r\n                                                placeholder=\"qcadmin\"\r\n                                                onChange={(e) => UsernameOnChange(e.target.value)}\r\n                                            />\r\n                                            {errors['Username'] &&\r\n                                                <span style={{ color: 'red' }}>{errors['Username']}</span>\r\n                                            }\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label>OldPassword <span style={{ color: 'red' }}>*</span></label>\r\n                                            <input\r\n                                                className=\"form-control\"\r\n                                                type={'password'}\r\n                                                name={'OldPassword'}\r\n                                                value={oldPassword}\r\n                                                onBlur={valiadateProperty}\r\n                                                placeholder=\"\"\r\n                                                onChange={(e) => OldPasswordOnChange(e.target.value)}\r\n                                            />\r\n                                            {errors['OldPassword'] &&\r\n                                                <span style={{ color: 'red' }}>{errors['OldPassword']}</span>\r\n                                            }\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label>NewPassword <span style={{ color: 'red' }}>*</span></label>\r\n                                            <input\r\n                                                className=\"form-control\"\r\n                                                type={'password'}\r\n                                                name={'NewPassword'}\r\n                                                value={newPassword}\r\n                                                onBlur={valiadateProperty}\r\n                                                placeholder=\"\"\r\n                                                onChange={(e) => NewPasswordOnChange(e.target.value)}\r\n                                            />\r\n                                            {errors['NewPassword'] &&\r\n                                                <span style={{ color: 'red' }}>{errors['NewPassword']}</span>\r\n                                            }\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label>ConfirmPassword<span style={{ color: 'red' }}>*</span></label>\r\n                                            <input\r\n                                                className=\"form-control\"\r\n                                                type={'password'}\r\n                                                name={'ConfirmPassword'}\r\n                                                value={confirmPassword}\r\n                                                onBlur={valiadateProperty}\r\n                                                placeholder=\"\"\r\n                                                onChange={(e) => ConfirmPasswordOnChange(e.target.value)}\r\n                                            />\r\n                                            {errors['ConfirmPassword'] &&\r\n                                                <span style={{ color: 'red' }}>{errors['ConfirmPassword']}</span>\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </Spin>\r\n                        </Modal>\r\n                    </div>\r\n                </div>\r\n            </Spin>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}