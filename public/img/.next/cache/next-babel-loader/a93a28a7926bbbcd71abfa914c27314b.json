{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport Repository, { apiUrl } from './Repository';\n\nvar AuthRepository = /*#__PURE__*/function () {\n  function AuthRepository(callback) {\n    _classCallCheck(this, AuthRepository);\n\n    this.callback = callback;\n  }\n\n  _createClass(AuthRepository, [{\n    key: \"getAllQBankSubCategory\",\n    value: function () {\n      var _getAllQBankSubCategory = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(payload) {\n        var url, reponse;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                url = \"\".concat(apiUrl, \"/subcategory/status/Y?_start=\").concat(payload._start, \"&_limit=\").concat(payload._limit, \"&isNewAdmin=true\");\n\n                if (payload && payload.search) {\n                  url += \"&search=\".concat(payload.search);\n                }\n\n                if (payload && payload.searchMainCat) {\n                  url += \"&searchMainCat=\".concat(payload.searchMainCat);\n                }\n\n                _context.next = 5;\n                return Repository.get(url).then(function (response) {\n                  return response.data;\n                })[\"catch\"](function (error) {\n                  return {\n                    error: JSON.stringify(error)\n                  };\n                });\n\n              case 5:\n                reponse = _context.sent;\n                return _context.abrupt(\"return\", reponse);\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getAllQBankSubCategory(_x) {\n        return _getAllQBankSubCategory.apply(this, arguments);\n      }\n\n      return getAllQBankSubCategory;\n    }()\n  }, {\n    key: \"getInactiveQBankSubCategory\",\n    value: function () {\n      var _getInactiveQBankSubCategory = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(payload) {\n        var url, reponse;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                url = \"\".concat(apiUrl, \"/subcategory/status/N?_start=\").concat(payload._start, \"&_limit=\").concat(payload._limit, \"&isNewAdmin=true\");\n\n                if (payload && payload.search) {\n                  url += \"&search=\".concat(payload.search);\n                }\n\n                if (payload && payload.searchMainCat) {\n                  url += \"&searchMainCat=\".concat(payload.searchMainCat);\n                }\n\n                _context2.next = 5;\n                return Repository.get(url).then(function (response) {\n                  return response.data;\n                })[\"catch\"](function (error) {\n                  return {\n                    error: JSON.stringify(error)\n                  };\n                });\n\n              case 5:\n                reponse = _context2.sent;\n                return _context2.abrupt(\"return\", reponse);\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function getInactiveQBankSubCategory(_x2) {\n        return _getInactiveQBankSubCategory.apply(this, arguments);\n      }\n\n      return getInactiveQBankSubCategory;\n    }()\n  }, {\n    key: \"saveQBankSubCategory\",\n    value: function () {\n      var _saveQBankSubCategory = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(formdata) {\n        var reponse;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return Repository.post(\"\".concat(apiUrl, \"/subcategory/\"), formdata).then(function (response) {\n                  return response.data;\n                })[\"catch\"](function (error) {\n                  return {\n                    error: JSON.stringify(error)\n                  };\n                });\n\n              case 2:\n                reponse = _context3.sent;\n                return _context3.abrupt(\"return\", reponse);\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function saveQBankSubCategory(_x3) {\n        return _saveQBankSubCategory.apply(this, arguments);\n      }\n\n      return saveQBankSubCategory;\n    }()\n  }, {\n    key: \"editQBankSubCategory\",\n    value: function () {\n      var _editQBankSubCategory = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(categoryId, formdata) {\n        var reponse;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return Repository.put(\"\".concat(apiUrl, \"/subcategory/pid/\").concat(categoryId), formdata).then(function (response) {\n                  return response.data;\n                })[\"catch\"](function (error) {\n                  return {\n                    error: JSON.stringify(error)\n                  };\n                });\n\n              case 2:\n                reponse = _context4.sent;\n                return _context4.abrupt(\"return\", reponse);\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function editQBankSubCategory(_x4, _x5) {\n        return _editQBankSubCategory.apply(this, arguments);\n      }\n\n      return editQBankSubCategory;\n    }()\n  }, {\n    key: \"inactiveCategory\",\n    value: function () {\n      var _inactiveCategory = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(data) {\n        var reponse;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return Repository.put(\"\".concat(apiUrl, \"/subcategory/inactive\"), data).then(function (response) {\n                  return response.data;\n                })[\"catch\"](function (error) {\n                  return {\n                    error: JSON.stringify(error)\n                  };\n                });\n\n              case 2:\n                reponse = _context5.sent;\n                return _context5.abrupt(\"return\", reponse);\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function inactiveCategory(_x6) {\n        return _inactiveCategory.apply(this, arguments);\n      }\n\n      return inactiveCategory;\n    }()\n  }, {\n    key: \"deleteCategory\",\n    value: function () {\n      var _deleteCategory = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(data) {\n        var reponse;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return Repository[\"delete\"](\"\".concat(apiUrl, \"/subcategory/\"), {\n                  headers: {\n                    \"Content-Type\": \"application/json\"\n                  },\n                  data: data\n                }).then(function (response) {\n                  return response.data;\n                })[\"catch\"](function (error) {\n                  return {\n                    error: JSON.stringify(error)\n                  };\n                });\n\n              case 2:\n                reponse = _context6.sent;\n                ;\n                return _context6.abrupt(\"return\", reponse);\n\n              case 5:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      function deleteCategory(_x7) {\n        return _deleteCategory.apply(this, arguments);\n      }\n\n      return deleteCategory;\n    }()\n  }, {\n    key: \"changePosition\",\n    value: function () {\n      var _changePosition = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(data) {\n        var reponse;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return Repository.put(\"\".concat(apiUrl, \"/subcategory/position\"), data).then(function (response) {\n                  return response.data;\n                })[\"catch\"](function (error) {\n                  return {\n                    error: JSON.stringify(error)\n                  };\n                });\n\n              case 2:\n                reponse = _context7.sent;\n                return _context7.abrupt(\"return\", reponse);\n\n              case 4:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      function changePosition(_x8) {\n        return _changePosition.apply(this, arguments);\n      }\n\n      return changePosition;\n    }()\n  }]);\n\n  return AuthRepository;\n}();\n\nexport default new AuthRepository();","map":{"version":3,"sources":["D:/Question_cloud/question_cloud_admin_web_new/repositories/ExaminationCalendarRepository.js"],"names":["Repository","apiUrl","AuthRepository","callback","payload","url","_start","_limit","search","searchMainCat","get","then","response","data","error","JSON","stringify","reponse","formdata","post","categoryId","put","headers"],"mappings":"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","sourcesContent":["import Repository, { apiUrl } from './Repository';\r\n\r\nclass AuthRepository {\r\n    constructor(callback) {\r\n        this.callback = callback;\r\n    }\r\n\r\n    async getAllQBankSubCategory(payload) {\r\n        let url = `${apiUrl}/subcategory/status/Y?_start=${payload._start}&_limit=${payload._limit}&isNewAdmin=true`;\r\n        if (payload && payload.search) {\r\n            url += `&search=${payload.search}`\r\n        }\r\n        if (payload && payload.searchMainCat) {\r\n            url += `&searchMainCat=${payload.searchMainCat}`\r\n        }\r\n        const reponse = await Repository.get(url)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n            .catch(error => ({ error: JSON.stringify(error) }));\r\n        return reponse;\r\n    }\r\n\r\n    async getInactiveQBankSubCategory(payload) {\r\n        let url = `${apiUrl}/subcategory/status/N?_start=${payload._start}&_limit=${payload._limit}&isNewAdmin=true`;\r\n        if (payload && payload.search) {\r\n            url += `&search=${payload.search}`\r\n        }\r\n        if (payload && payload.searchMainCat) {\r\n            url += `&searchMainCat=${payload.searchMainCat}`\r\n        }\r\n        const reponse = await Repository.get(url)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n            .catch(error => ({ error: JSON.stringify(error) }));\r\n        return reponse;\r\n    }\r\n\r\n    async saveQBankSubCategory(formdata) {\r\n        const reponse = await Repository.post(`${apiUrl}/subcategory/`, formdata)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n            .catch(error => ({ error: JSON.stringify(error) }));\r\n        return reponse;\r\n    }\r\n\r\n    async editQBankSubCategory(categoryId, formdata) {\r\n        const reponse = await Repository.put(`${apiUrl}/subcategory/pid/${categoryId}`, formdata)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n            .catch(error => ({ error: JSON.stringify(error) }));\r\n        return reponse;\r\n    }\r\n\r\n    async inactiveCategory(data) {\r\n        const reponse = await Repository.put(`${apiUrl}/subcategory/inactive`, data)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n            .catch(error => ({ error: JSON.stringify(error) }));\r\n        return reponse;\r\n    }\r\n\r\n    async deleteCategory(data) {\r\n        const reponse = await Repository.delete(`${apiUrl}/subcategory/`, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            data: data\r\n        }).then(response => {\r\n            return response.data;\r\n        }).catch(error => ({ error: JSON.stringify(error) }));;\r\n        return reponse;\r\n    }\r\n\r\n    async changePosition(data) {\r\n        const reponse = await Repository.put(`${apiUrl}/subcategory/position`, data)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n            .catch(error => ({ error: JSON.stringify(error) }));\r\n        return reponse;\r\n    }\r\n\r\n}\r\n\r\nexport default new AuthRepository();\r\n\r\n"]},"metadata":{},"sourceType":"module"}