{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(loginSaga),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(logoutSaga),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport { all, put, call, takeEvery } from 'redux-saga/effects';\nimport { actionTypes, loginSuccess, logoutSuccess } from './action';\nimport AuthRepository from '../../repositories/AuthRepository';\n\nfunction loginSaga(_ref) {\n  var payload, data, res;\n  return _regeneratorRuntime.wrap(function loginSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          payload = _ref.payload;\n          _context.prev = 1;\n          _context.next = 4;\n          return call(AuthRepository.login, payload);\n\n        case 4:\n          data = _context.sent;\n\n          if (!(data && data.statusCode === 200 && data.authorization)) {\n            _context.next = 13;\n            break;\n          }\n\n          res = data.data;\n          res.authorization = data.authorization;\n          res.isLoggedIn = true;\n          _context.next = 11;\n          return put(loginSuccess(res));\n\n        case 11:\n          _context.next = 14;\n          break;\n\n        case 13:\n          if (data && data.statusCode === 400) {} else if (data && data.statusCode === 404) {} else {}\n\n        case 14:\n          _context.next = 18;\n          break;\n\n        case 16:\n          _context.prev = 16;\n          _context.t0 = _context[\"catch\"](1);\n\n        case 18:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[1, 16]]);\n}\n\nfunction logoutSaga() {\n  return _regeneratorRuntime.wrap(function logoutSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          localStorage.removeItem('usertoken'); // yield call(AuthRepository.logout);\n\n          _context2.next = 4;\n          return put(logoutSuccess());\n\n        case 4:\n          _context2.next = 8;\n          break;\n\n        case 6:\n          _context2.prev = 6;\n          _context2.t0 = _context2[\"catch\"](0);\n\n        case 8:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 6]]);\n}\n\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return all([takeEvery(actionTypes.LOGIN_REQUEST, loginSaga)]);\n\n        case 2:\n          _context3.next = 4;\n          return all([takeEvery(actionTypes.LOGOUT_REQUEST, logoutSaga)]);\n\n        case 4:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}","map":{"version":3,"sources":["F:/newapollo/store/auth/saga.js"],"names":["loginSaga","logoutSaga","rootSaga","all","put","call","takeEvery","actionTypes","loginSuccess","logoutSuccess","AuthRepository","payload","login","data","statusCode","authorization","res","isLoggedIn","localStorage","removeItem","LOGIN_REQUEST","LOGOUT_REQUEST"],"mappings":";;oDAOUA,S;qDAiBAC,U;qDAUeC,Q;;AAlCzB,SAASC,GAAT,EAAcC,GAAd,EAAkBC,IAAlB,EAAwBC,SAAxB,QAAyC,oBAAzC;AAEA,SAASC,WAAT,EAAsBC,YAAtB,EAAoCC,aAApC,QAAyD,UAAzD;AAEA,OAAOC,cAAP,MAA2B,mCAA3B;;AAGA,SAAUV,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqBW,UAAAA,OAArB,QAAqBA,OAArB;AAAA;AAAA;AAEqB,iBAAMN,IAAI,CAACK,cAAc,CAACE,KAAhB,EAAuBD,OAAvB,CAAV;;AAFrB;AAEcE,UAAAA,IAFd;;AAAA,gBAGWA,IAAI,IAAIA,IAAI,CAACC,UAAL,KAAoB,GAA5B,IAAmCD,IAAI,CAACE,aAHnD;AAAA;AAAA;AAAA;;AAIgBC,UAAAA,GAJhB,GAIsBH,IAAI,CAACA,IAJ3B;AAKYG,UAAAA,GAAG,CAACD,aAAJ,GAAoBF,IAAI,CAACE,aAAzB;AACAC,UAAAA,GAAG,CAACC,UAAJ,GAAiB,IAAjB;AANZ;AAOY,iBAAMb,GAAG,CAACI,YAAY,CAACQ,GAAD,CAAb,CAAT;;AAPZ;AAAA;AAAA;;AAAA;AAQc,cAAGH,IAAI,IAAIA,IAAI,CAACC,UAAL,KAAoB,GAA/B,EAAoC,CACzC,CADK,MACA,IAAGD,IAAI,IAAIA,IAAI,CAACC,UAAL,KAAoB,GAA/B,EAAoC,CACzC,CADK,MACD,CACJ;;AAXT;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAiBA,SAAUb,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAEQiB,UAAAA,YAAY,CAACC,UAAb,CAAwB,WAAxB,EAFR,CAGQ;;AAHR;AAIQ,iBAAMf,GAAG,CAACK,aAAa,EAAd,CAAT;;AAJR;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUA,eAAe,SAAUP,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACX,iBAAMC,GAAG,CAAC,CAACG,SAAS,CAACC,WAAW,CAACa,aAAb,EAA4BpB,SAA5B,CAAV,CAAD,CAAT;;AADW;AAAA;AAEX,iBAAMG,GAAG,CAAC,CAACG,SAAS,CAACC,WAAW,CAACc,cAAb,EAA6BpB,UAA7B,CAAV,CAAD,CAAT;;AAFW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { all, put,call, takeEvery } from 'redux-saga/effects';\r\n\r\nimport { actionTypes, loginSuccess, logoutSuccess } from './action';\r\n\r\nimport AuthRepository from '../../repositories/AuthRepository';\r\n\r\n\r\nfunction* loginSaga({payload}) {\r\n    try {\r\n        const data = yield call(AuthRepository.login, payload);\r\n        if(data && data.statusCode === 200 && data.authorization){\r\n            let res = data.data;\r\n            res.authorization = data.authorization;\r\n            res.isLoggedIn = true;\r\n            yield put(loginSuccess(res));\r\n        }else if(data && data.statusCode === 400 ){\r\n        }else if(data && data.statusCode === 404 ){\r\n        }else{\r\n        }\r\n    }  catch (err) {\r\n        // console.log(err);\r\n    }\r\n}\r\n\r\nfunction* logoutSaga() {\r\n    try {\r\n        localStorage.removeItem('usertoken');\r\n        // yield call(AuthRepository.logout);\r\n        yield put(logoutSuccess());\r\n    }  catch (err) {\r\n        // console.log(err);\r\n    }\r\n}\r\n\r\nexport default function* rootSaga() {\r\n    yield all([takeEvery(actionTypes.LOGIN_REQUEST, loginSaga)]);\r\n    yield all([takeEvery(actionTypes.LOGOUT_REQUEST, logoutSaga)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}