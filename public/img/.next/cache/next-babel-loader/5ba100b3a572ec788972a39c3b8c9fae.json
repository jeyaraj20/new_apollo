{"ast":null,"code":"import Repository, { apiUrl } from './Repository';\n\nclass AuthRepository {\n  constructor(callback) {\n    this.callback = callback;\n  }\n\n  async getAlldashboardCategory(payload) {\n    console.log(\"1234\", payload);\n    const reponse = await Repository.get(`${apiUrl}/homecategory/?_start=${payload._start}&_limit=${payload._limit}`).then(response => {\n      return response.data;\n    }).catch(error => ({\n      error: JSON.stringify(error)\n    }));\n    return reponse;\n  }\n\n  async getInactivedashboardCategory(payload) {\n    const reponse = await Repository.get(`${apiUrl}/homecategory/inactive?_start=${payload._start}&_limit=${payload._limit}`).then(response => {\n      return response.data;\n    }).catch(error => ({\n      error: JSON.stringify(error)\n    }));\n    return reponse;\n  }\n\n  async savedashboardCategory(formdata) {\n    const reponse = await Repository.post(`${apiUrl}/homecategory/`, formdata).then(response => {\n      return response.data;\n    }).catch(error => ({\n      error: JSON.stringify(error)\n    }));\n    return reponse;\n  }\n\n  async editdashboardCategory(categoryId, formdata) {\n    const reponse = await Repository.put(`${apiUrl}/homecategory/catId/${categoryId}`, formdata).then(response => {\n      return response.data;\n    }).catch(error => ({\n      error: JSON.stringify(error)\n    }));\n    return reponse;\n  }\n\n  async inactiveCategory(data) {\n    const reponse = await Repository.put(`${apiUrl}/homecategory/inactive`, data).then(response => {\n      return response.data;\n    }).catch(error => ({\n      error: JSON.stringify(error)\n    }));\n    return reponse;\n  }\n\n  async deleteCategory(data) {\n    const reponse = await Repository.delete(`${apiUrl}/homecategory/`, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      data: data\n    }).then(response => {\n      return response.data;\n    }).catch(error => ({\n      error: JSON.stringify(error)\n    }));\n    ;\n    return reponse;\n  }\n\n  async changePosition(data) {\n    const reponse = await Repository.put(`${apiUrl}/homecategory/position`, data).then(response => {\n      return response.data;\n    }).catch(error => ({\n      error: JSON.stringify(error)\n    }));\n    return reponse;\n  }\n\n  async imageUpload(formData) {\n    const reponse = await Repository.post(`${apiUrl}/image/dashboard`, formData).then(response => {\n      return response.data;\n    }).catch(error => ({\n      error: JSON.stringify(error)\n    }));\n    return reponse;\n  }\n\n}\n\nexport default new AuthRepository();","map":{"version":3,"sources":["D:/Question_cloud/question_cloud_admin_web_new/repositories/DashboardCategoryRepository.js"],"names":["Repository","apiUrl","AuthRepository","constructor","callback","getAlldashboardCategory","payload","console","log","reponse","get","_start","_limit","then","response","data","catch","error","JSON","stringify","getInactivedashboardCategory","savedashboardCategory","formdata","post","editdashboardCategory","categoryId","put","inactiveCategory","deleteCategory","delete","headers","changePosition","imageUpload","formData"],"mappings":"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","sourcesContent":["import Repository, { apiUrl } from './Repository';\r\n\r\nclass AuthRepository {\r\n    constructor(callback) {\r\n        this.callback = callback;\r\n    }\r\n\r\n    async getAlldashboardCategory(payload) {\r\n        console.log(\"1234\",payload)\r\n        const reponse = await Repository.get(`${apiUrl}/homecategory/?_start=${payload._start}&_limit=${payload._limit}`)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n            .catch(error => ({ error: JSON.stringify(error) }));\r\n        return reponse;\r\n    }\r\n\r\n    async getInactivedashboardCategory(payload) {\r\n        const reponse = await Repository.get(`${apiUrl}/homecategory/inactive?_start=${payload._start}&_limit=${payload._limit}`)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n            .catch(error => ({ error: JSON.stringify(error) }));\r\n        return reponse;\r\n    }\r\n\r\n    async savedashboardCategory(formdata) {\r\n        const reponse = await Repository.post(`${apiUrl}/homecategory/`, formdata)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n            .catch(error => ({ error: JSON.stringify(error) }));\r\n        return reponse;\r\n    }\r\n\r\n    async editdashboardCategory(categoryId, formdata) {\r\n        const reponse = await Repository.put(`${apiUrl}/homecategory/catId/${categoryId}`, formdata)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n            .catch(error => ({ error: JSON.stringify(error) }));\r\n        return reponse;\r\n    }\r\n\r\n    async inactiveCategory(data) {\r\n        const reponse = await Repository.put(`${apiUrl}/homecategory/inactive`, data)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n            .catch(error => ({ error: JSON.stringify(error) }));\r\n        return reponse;\r\n    }\r\n\r\n    async deleteCategory(data) {\r\n        const reponse = await Repository.delete(`${apiUrl}/homecategory/`, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            data: data\r\n        }).then(response => {\r\n            return response.data;\r\n        }).catch(error => ({ error: JSON.stringify(error) }));;\r\n        return reponse;\r\n    }\r\n\r\n    async changePosition(data) {\r\n        const reponse = await Repository.put(`${apiUrl}/homecategory/position`, data)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n            .catch(error => ({ error: JSON.stringify(error) }));\r\n        return reponse;\r\n    }\r\n    async imageUpload(formData) {\r\n        const reponse = await Repository.post(`${apiUrl}/image/dashboard`, formData)\r\n        .then(response => {\r\n            return response.data;\r\n        })\r\n        .catch(error => ({ error: JSON.stringify(error) }));\r\n    return reponse;\r\n    }\r\n    \r\n\r\n}\r\n\r\nexport default new AuthRepository();\r\n\r\n"]},"metadata":{},"sourceType":"module"}