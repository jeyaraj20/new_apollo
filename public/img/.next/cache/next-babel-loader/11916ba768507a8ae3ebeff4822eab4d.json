{"ast":null,"code":"import { all, put, call, takeEvery } from 'redux-saga/effects';\nimport { actionTypes, getAllStateSuccess, getInactiveStateSuccess } from './action';\nimport StateRepository from '../../repositories/LocationControllerRepository';\n\nfunction* getAllStateSaga({\n  payload\n}) {\n  try {\n    const data = yield call(StateRepository.getAllState, payload);\n    yield put(getAllStateSuccess(data));\n  } catch (err) {\n    yield put(getAllStateSuccess(null));\n  }\n}\n\nfunction* getInactiveStateSaga({\n  payload\n}) {\n  try {\n    const data = yield call(StateRepository.getInactiveState, payload);\n    yield put(getInactiveStateSuccess(data));\n  } catch (err) {\n    yield put(getInactiveStateSuccess(null));\n  }\n}\n\nexport default function* rootSaga() {\n  yield all([takeEvery(actionTypes.GET_ALL_STATE_REQUEST, getAllStateSaga)]);\n  yield all([takeEvery(actionTypes.GET_INACTIVE_STATE_REQUEST, getInactiveStateSaga)]);\n}","map":{"version":3,"sources":["D:/Question_cloud/question_cloud_admin_web_new/store/State/saga.js"],"names":["all","put","call","takeEvery","actionTypes","getAllStateSuccess","getInactiveStateSuccess","StateRepository","getAllStateSaga","payload","data","getAllState","err","getInactiveStateSaga","getInactiveState","rootSaga","GET_ALL_STATE_REQUEST","GET_INACTIVE_STATE_REQUEST"],"mappings":"AAAA,SAASA,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,SAAzB,QAA0C,oBAA1C;AAEA,SAASC,WAAT,EAAsBC,kBAAtB,EAA0CC,uBAA1C,QAAyE,UAAzE;AAEA,OAAOC,eAAP,MAA4B,iDAA5B;;AAEA,UAAUC,eAAV,CAA0B;AAAEC,EAAAA;AAAF,CAA1B,EAAuC;AACnC,MAAI;AACA,UAAMC,IAAI,GAAG,MAAMR,IAAI,CAACK,eAAe,CAACI,WAAjB,EAA8BF,OAA9B,CAAvB;AACA,UAAMR,GAAG,CAACI,kBAAkB,CAACK,IAAD,CAAnB,CAAT;AACH,GAHD,CAGE,OAAOE,GAAP,EAAY;AACV,UAAMX,GAAG,CAACI,kBAAkB,CAAC,IAAD,CAAnB,CAAT;AACH;AACJ;;AAED,UAAUQ,oBAAV,CAA+B;AAAEJ,EAAAA;AAAF,CAA/B,EAA4C;AACxC,MAAI;AACA,UAAMC,IAAI,GAAG,MAAMR,IAAI,CAACK,eAAe,CAACO,gBAAjB,EAAmCL,OAAnC,CAAvB;AACA,UAAMR,GAAG,CAACK,uBAAuB,CAACI,IAAD,CAAxB,CAAT;AACH,GAHD,CAGE,OAAOE,GAAP,EAAY;AACV,UAAMX,GAAG,CAACK,uBAAuB,CAAC,IAAD,CAAxB,CAAT;AACH;AACJ;;AAED,eAAe,UAAUS,QAAV,GAAqB;AAChC,QAAMf,GAAG,CAAC,CAACG,SAAS,CAACC,WAAW,CAACY,qBAAb,EAAoCR,eAApC,CAAV,CAAD,CAAT;AACA,QAAMR,GAAG,CAAC,CAACG,SAAS,CAACC,WAAW,CAACa,0BAAb,EAAyCJ,oBAAzC,CAAV,CAAD,CAAT;AACH","sourcesContent":["import { all, put, call, takeEvery } from 'redux-saga/effects';\r\n\r\nimport { actionTypes, getAllStateSuccess, getInactiveStateSuccess } from './action';\r\n\r\nimport StateRepository from '../../repositories/LocationControllerRepository';\r\n\r\nfunction* getAllStateSaga({ payload }) {\r\n    try {\r\n        const data = yield call(StateRepository.getAllState, payload);\r\n        yield put(getAllStateSuccess(data));\r\n    } catch (err) {\r\n        yield put(getAllStateSuccess(null));\r\n    }\r\n}\r\n\r\nfunction* getInactiveStateSaga({ payload }) {\r\n    try {\r\n        const data = yield call(StateRepository.getInactiveState, payload);\r\n        yield put(getInactiveStateSuccess(data));\r\n    } catch (err) {\r\n        yield put(getInactiveStateSuccess(null));\r\n    }\r\n}\r\n\r\nexport default function* rootSaga() {\r\n    yield all([takeEvery(actionTypes.GET_ALL_STATE_REQUEST, getAllStateSaga)]);\r\n    yield all([takeEvery(actionTypes.GET_INACTIVE_STATE_REQUEST, getInactiveStateSaga)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}