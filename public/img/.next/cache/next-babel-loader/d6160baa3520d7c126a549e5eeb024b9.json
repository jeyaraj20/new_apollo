{"ast":null,"code":"import { all, put, call, takeEvery } from 'redux-saga/effects';\nimport { actionTypes, getActiveExamsSuccess, getInactiveExamsSuccess } from './action';\nimport ExaminationCalendarRepository from '../../repositories/ExaminationCalendarRepository';\n\nfunction* getAllQBankSubCategorySaga({\n  payload\n}) {\n  try {\n    const data = yield call(ExaminationCalendarRepository.getActiveExams, payload);\n    yield put(getActiveExamsSuccess(data));\n  } catch (err) {\n    yield put(getActiveExamsSuccess(null));\n  }\n}\n\nfunction* getInactiveQBankSubCategorySaga({\n  payload\n}) {\n  try {\n    const data = yield call(ExaminationCalendarRepository.getInactiveExams, payload);\n    yield put(getInactiveExamsSuccess(data));\n  } catch (err) {\n    yield put(getInactiveExamsSuccess(null));\n  }\n}\n\nexport default function* rootSaga() {\n  yield all([takeEvery(actionTypes.GET_ALL_EXAMINATIONCALENDAR_REQUEST, getAllQBankSubCategorySaga)]);\n  yield all([takeEvery(actionTypes.GET_INACTIVE_EXAMINATIONCALENDAR_REQUEST, getInactiveQBankSubCategorySaga)]);\n}","map":{"version":3,"sources":["D:/Question_cloud/question_cloud_admin_web_new/store/ExaminationCalendar/saga.js"],"names":["all","put","call","takeEvery","actionTypes","getActiveExamsSuccess","getInactiveExamsSuccess","ExaminationCalendarRepository","getAllQBankSubCategorySaga","payload","data","getActiveExams","err","getInactiveQBankSubCategorySaga","getInactiveExams","rootSaga","GET_ALL_EXAMINATIONCALENDAR_REQUEST","GET_INACTIVE_EXAMINATIONCALENDAR_REQUEST"],"mappings":"AAAA,SAASA,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,SAAzB,QAA0C,oBAA1C;AAEA,SAASC,WAAT,EAAsBC,qBAAtB,EAA6CC,uBAA7C,QAA4E,UAA5E;AAEA,OAAOC,6BAAP,MAA0C,kDAA1C;;AAEA,UAAUC,0BAAV,CAAqC;AAAEC,EAAAA;AAAF,CAArC,EAAkD;AAC9C,MAAI;AACA,UAAMC,IAAI,GAAG,MAAMR,IAAI,CAACK,6BAA6B,CAACI,cAA/B,EAA+CF,OAA/C,CAAvB;AACA,UAAMR,GAAG,CAACI,qBAAqB,CAACK,IAAD,CAAtB,CAAT;AACH,GAHD,CAGE,OAAOE,GAAP,EAAY;AACV,UAAMX,GAAG,CAACI,qBAAqB,CAAC,IAAD,CAAtB,CAAT;AACH;AACJ;;AAED,UAAUQ,+BAAV,CAA0C;AAAEJ,EAAAA;AAAF,CAA1C,EAAuD;AACnD,MAAI;AACA,UAAMC,IAAI,GAAG,MAAMR,IAAI,CAACK,6BAA6B,CAACO,gBAA/B,EAAiDL,OAAjD,CAAvB;AACA,UAAMR,GAAG,CAACK,uBAAuB,CAACI,IAAD,CAAxB,CAAT;AACH,GAHD,CAGE,OAAOE,GAAP,EAAY;AACV,UAAMX,GAAG,CAACK,uBAAuB,CAAC,IAAD,CAAxB,CAAT;AACH;AACJ;;AAED,eAAe,UAAUS,QAAV,GAAqB;AAChC,QAAMf,GAAG,CAAC,CAACG,SAAS,CAACC,WAAW,CAACY,mCAAb,EAAkDR,0BAAlD,CAAV,CAAD,CAAT;AACA,QAAMR,GAAG,CAAC,CAACG,SAAS,CAACC,WAAW,CAACa,wCAAb,EAAuDJ,+BAAvD,CAAV,CAAD,CAAT;AACH","sourcesContent":["import { all, put, call, takeEvery } from 'redux-saga/effects';\r\n\r\nimport { actionTypes, getActiveExamsSuccess, getInactiveExamsSuccess } from './action';\r\n\r\nimport ExaminationCalendarRepository from '../../repositories/ExaminationCalendarRepository';\r\n\r\nfunction* getAllQBankSubCategorySaga({ payload }) {\r\n    try {\r\n        const data = yield call(ExaminationCalendarRepository.getActiveExams, payload);\r\n        yield put(getActiveExamsSuccess(data));\r\n    } catch (err) {\r\n        yield put(getActiveExamsSuccess(null));\r\n    }\r\n}\r\n\r\nfunction* getInactiveQBankSubCategorySaga({ payload }) {\r\n    try {\r\n        const data = yield call(ExaminationCalendarRepository.getInactiveExams, payload);\r\n        yield put(getInactiveExamsSuccess(data));\r\n    } catch (err) {\r\n        yield put(getInactiveExamsSuccess(null));\r\n    }\r\n}\r\n\r\nexport default function* rootSaga() {\r\n    yield all([takeEvery(actionTypes.GET_ALL_EXAMINATIONCALENDAR_REQUEST, getAllQBankSubCategorySaga)]);\r\n    yield all([takeEvery(actionTypes.GET_INACTIVE_EXAMINATIONCALENDAR_REQUEST, getInactiveQBankSubCategorySaga)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}