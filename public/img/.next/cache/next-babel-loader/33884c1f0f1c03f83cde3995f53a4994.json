{"ast":null,"code":"var _jsxFileName = \"D:\\\\Question_cloud\\\\question_cloud_admin_web_new\\\\pages\\\\citycategory\\\\view\\\\index.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Modal, Button, Checkbox, Spin, notification, Pagination, Tabs, Select } from 'antd';\nimport HeaderDashboard from '../../../components/header/HeaderDashboard';\nimport Sidebar from '../../../components/sections/sidebar';\nimport TableCity from '../../../components/tables/City';\nimport { getAllCity, getInactiveCity } from '../../../store/City/action';\nimport LocationControllerRepository from '../../../repositories/LocationControllerRepository';\n\nconst Home = props => {\n  const {\n    TabPane\n  } = Tabs;\n  const {\n    Option\n  } = Select;\n  const dispatch = useDispatch();\n  const {\n    auth\n  } = useSelector(({\n    auth\n  }) => auth);\n  const {\n    allCity,\n    totalActiveCount,\n    inactiveCity,\n    totalInactiveCount\n  } = useSelector(({\n    City\n  }) => City);\n  const {\n    0: showModal,\n    1: setShowModal\n  } = useState(false);\n  const {\n    0: cityname,\n    1: setCityname\n  } = useState('');\n  const {\n    0: selectedHomeCatId,\n    1: setSelectedHomeCatId\n  } = useState('');\n  const {\n    0: errors,\n    1: setErrors\n  } = useState({});\n  const {\n    0: loader,\n    1: setLoader\n  } = useState(false);\n  const {\n    0: currentPage,\n    1: setCurrentPage\n  } = useState(1);\n  const {\n    0: pageSizeTotal,\n    1: setPageSizeTotal\n  } = useState(10);\n  const {\n    0: tab,\n    1: setTab\n  } = useState('active');\n  const {\n    0: selectAll,\n    1: setSelectAll\n  } = useState(false);\n  const {\n    0: selectedHomeCatIds,\n    1: setSelectedHomeCatIds\n  } = useState([]);\n  const {\n    0: action,\n    1: setAction\n  } = useState('');\n  const {\n    0: State,\n    1: setState\n  } = useState('');\n  const {\n    0: Citycode,\n    1: setCitycode\n  } = useState('');\n  const {\n    0: stateId,\n    1: setstateId\n  } = useState('');\n  const {\n    0: search,\n    1: setsearch\n  } = useState('');\n  const {\n    0: stateitems,\n    1: setStateItems\n  } = useState([]);\n  console.log(inactiveCity, \"inactiveCity\");\n  useEffect(() => {\n    let local = JSON.parse(localStorage.getItem('persist:QuestionCloudAdmin'));\n    let localAuth = local && local.auth ? JSON.parse(local.auth) : {};\n\n    if (localAuth && !localAuth.isLoggedIn) {\n      window.location.href = \"/\";\n    }\n  }, [auth]);\n\n  const handleStateChange = (event, value) => {\n    console.log(event.target.value);\n    setStateId(event.target.value);\n  };\n\n  const handleRefresh = async () => {\n    setLoader(true);\n    setSelectAll(false);\n    const {\n      data: res\n    } = await locationService.getCity('Y');\n    const {\n      city: cityres\n    } = res;\n    const {\n      count: activecount\n    } = res;\n    console.log(cityres);\n    const {\n      data: inactiveres\n    } = await locationService.getCity('N');\n    const {\n      count: inactivecount\n    } = inactiveres;\n    setInactiveCount(inactivecount);\n    setActiveCount(activecount);\n    setData(cityres);\n    const {\n      data: stateresult\n    } = await locationService.getState('Y');\n    const {\n      state: stateres\n    } = stateresult;\n    let itemArr = [];\n\n    for (let state of stateres) {\n      itemArr.push(__jsx(MenuItem, {\n        value: state.state_id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 24\n        }\n      }, state.state_name));\n    }\n\n    setStateItems(itemArr);\n    setTimeout(() => {\n      setLoader(false);\n    }, 1000);\n  };\n\n  useEffect(() => {\n    async function fetchData() {\n      await handleRefresh();\n    }\n\n    fetchData();\n  }, []);\n  useEffect(() => {\n    setLoader(true);\n    let ctr = {};\n    ctr._start = currentPage === 1 ? 0 : (currentPage - 1) * pageSizeTotal;\n    ctr._limit = pageSizeTotal;\n    dispatch(getAllCity(ctr));\n    dispatch(getInactiveCity(ctr));\n  }, []);\n  useEffect(() => {\n    setLoader(false);\n  }, [allCity, inactiveCity]);\n\n  const addModalOnClick = async () => {\n    setLoader(true);\n    setCitycode('');\n    setState('');\n    setSelectedHomeCatId('');\n    setLoader(false);\n    setShowModal(true);\n  };\n\n  const editModalOnClick = async data => {\n    setLoader(true);\n    setSelectedHomeCatId(data.city_id);\n    setState(data.state);\n    setstateId(data.state_id);\n    setCityname(data.city_name);\n    setCitycode(data.city_code);\n    setLoader(false);\n    setShowModal(true);\n  };\n\n  const closeModalOnClick = () => {\n    setCityname('');\n    setCitycode('');\n    setSelectedHomeCatId('');\n    setState('');\n    setErrors({});\n    setShowModal(false);\n  };\n\n  const StateOnChange = State => {\n    let errorObj = _objectSpread({}, errors);\n\n    errorObj['State'] = '';\n    setState(State);\n    setErrors(errorObj);\n  };\n\n  const CitynameOnChange = cityname => {\n    let errorObj = _objectSpread({}, errors);\n\n    errorObj['cityname'] = '';\n    setCityname(cityname);\n    setErrors(errorObj);\n  };\n\n  const CitycodeOnChange = Citycode => {\n    let errorObj = _objectSpread({}, errors);\n\n    errorObj['Citycode'] = '';\n    setCitycode(Citycode);\n    setErrors(errorObj);\n  };\n\n  const saveOnClick = () => {\n    if (selectedHomeCatId) {\n      edit();\n    } else {\n      save();\n    }\n  };\n\n  const save = async () => {\n    if (cityname && Citycode) {\n      setLoader(true);\n      let obj = {\n        \"state_id\": stateId,\n        \"city_name\": cityname,\n        \"city_code\": Citycode\n      };\n\n      try {\n        await LocationControllerRepository.saveCity(obj);\n        notification.success({\n          message: 'State Added Successfully.'\n        });\n        let ctr = {};\n        ctr._start = currentPage === 1 ? 0 : (currentPage - 1) * pageSizeTotal;\n        ctr._limit = pageSizeTotal;\n\n        if (search) {\n          ctr.search = search;\n        }\n\n        dispatch(getAllCity(ctr));\n        dispatch(getInactiveCity(ctr));\n        closeModalOnClick();\n      } catch (e) {\n        notification.error({\n          message: 'State Added Failed.'\n        });\n      }\n    } else {\n      let errorObj = _objectSpread({}, errors);\n\n      if (!cityname) errorObj['cityname'] = \"Please Enter cityname\";\n      setErrors(errorObj);\n    }\n  };\n\n  const edit = async () => {\n    if (cityname && selectedHomeCatId && Citycode && cityname) {\n      setLoader(true);\n      let obj = {\n        \"city_id\": selectedHomeCatId,\n        \"city_name\": cityname,\n        \"city_code\": Citycode,\n        \"state_id\": stateId\n      };\n\n      try {\n        await LocationControllerRepository.editCity(selectedHomeCatId, obj);\n        notification.success({\n          message: 'State Updated Successfully.'\n        });\n        let ctr = {};\n        ctr._start = currentPage === 1 ? 0 : (currentPage - 1) * pageSizeTotal;\n        ctr._limit = pageSizeTotal;\n        dispatch(getAllCity(ctr));\n        dispatch(getInactiveCity(ctr));\n        closeModalOnClick();\n      } catch (e) {\n        notification.error({\n          message: 'State  Updated Failed.'\n        });\n      }\n    } else {\n      let errorObj = _objectSpread({}, errors);\n\n      if (!cityname) errorObj['cityname'] = \"Please Enter cityname\";\n      setErrors(errorObj);\n    }\n  };\n\n  const searchOnChange = search => {\n    setLoader(true);\n    let ctr = {};\n    ctr._start = 0;\n    ctr._limit = pageSizeTotal;\n    ctr.search = search;\n\n    if (search) {\n      ctr.search = search;\n    }\n\n    if (tab === 'active') {\n      dispatch(getAllCity(ctr));\n    } else {\n      dispatch(getInactiveCity(ctr));\n    }\n\n    setsearch(search);\n    setCurrentPage(1);\n  };\n\n  const pageSizeChange = async (page, pageSize) => {\n    setLoader(true);\n    let ctr = {};\n    ctr._start = page === 1 ? 0 : (page - 1) * pageSize;\n    ctr._limit = pageSize;\n\n    if (tab === \"active\") {\n      dispatch(getAllCity(ctr));\n    } else {\n      dispatch(getInactiveCity(ctr));\n    }\n\n    setCurrentPage(page);\n    setPageSizeTotal(pageSize);\n  };\n\n  const changeTab = tab => {\n    setLoader(true);\n    let ctr = {};\n    ctr._start = 0;\n    ctr._limit = 10;\n\n    if (tab === \"active\") {\n      dispatch(getAllCity(ctr));\n    } else {\n      dispatch(getInactiveCity(ctr));\n    }\n\n    setCurrentPage(1);\n    setPageSizeTotal(10);\n    setSelectedHomeCatIds([]);\n    setSelectAll(false);\n    setAction('');\n    setsearch('');\n    setTab(tab);\n  };\n\n  const onSelectAll = value => {\n    let array = [];\n\n    if (value) {\n      if (tab === 'active') {\n        array = allCity.map(h => h.state_id);\n      } else {\n        array = inactiveCity.map(h => h.state_id);\n      }\n    }\n\n    setSelectedHomeCatIds(array);\n    setSelectAll(value);\n  };\n\n  const onSelectOne = id => {\n    let array = [...selectedHomeCatIds];\n    let array1 = tab === 'active' ? [...allCity] : [...inactiveCity];\n    let index = array.indexOf(id);\n\n    if (index >= 0) {\n      array.splice(index, 1);\n    } else {\n      array.push(id);\n    }\n\n    if (array.length === array1.length) {\n      setSelectAll(true);\n    } else {\n      setSelectAll(false);\n    }\n\n    setSelectedHomeCatIds(array);\n  };\n\n  const actionOnChange = action => {\n    setAction(action);\n  };\n\n  const goOnClick = async () => {\n    let selectedHomeCatIdsArr = [...selectedHomeCatIds];\n    let obj = {\n      cityId: selectedHomeCatIdsArr\n    };\n\n    if (selectedHomeCatIdsArr && selectedHomeCatIdsArr.length > 0 && action) {\n      setLoader(true);\n\n      if (action === \"active\") {\n        obj['status'] = 'Y';\n        await LocationControllerRepository.inactiveCity(obj);\n        notification.success({\n          message: 'State  Updated Successfully.'\n        });\n      }\n\n      if (action === \"inactive\") {\n        obj['status'] = 'N';\n        await LocationControllerRepository.inactiveCity(obj);\n        notification.success({\n          message: 'State  Updated Successfully.'\n        });\n      }\n\n      if (action === \"delete\") {\n        obj['status'] = 'D';\n        await LocationControllerRepository.inactiveCity(obj);\n        notification.success({\n          message: 'State  Deleted Successfully.'\n        });\n      }\n\n      setSelectedHomeCatIds([]);\n      let ctr = {};\n      ctr._start = currentPage === 1 ? 0 : (currentPage - 1) * pageSizeTotal;\n      ctr._limit = pageSizeTotal;\n\n      if (search) {\n        ctr.search = search;\n      }\n\n      dispatch(getAllCity(ctr));\n      dispatch(getInactiveCity(ctr));\n    } else {\n      if (!action) {\n        Modal.error({\n          title: 'Please Select Action'\n        });\n      } else if (!selectedHomeCatIdsArr.length) {\n        Modal.error({\n          title: 'Please Select One Category'\n        });\n      }\n    }\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 9\n    }\n  }, __jsx(Spin, {\n    spinning: loader,\n    tip: 'Loading...',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 13\n    }\n  }, __jsx(HeaderDashboard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    className: \"dashboard-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"row no-gutters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    id: \"sidebar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 29\n    }\n  }, __jsx(Sidebar, {\n    page: 'State',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 33\n    }\n  }))), __jsx(\"div\", {\n    className: \"col-md-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    className: \"content content-width\",\n    id: \"style-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 29\n    }\n  }, __jsx(Tabs, {\n    defaultActiveKey: tab,\n    onChange: changeTab,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 33\n    }\n  }, __jsx(TabPane, {\n    tab: `Active ${totalActiveCount}`,\n    key: \"active\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 37\n    }\n  }), __jsx(TabPane, {\n    tab: `Inactive ${totalInactiveCount}`,\n    key: \"inactive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 37\n    }\n  })), __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 33\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 37\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 41\n    }\n  }, __jsx(Select, {\n    onChange: actionOnChange,\n    placeholder: \"Select Action\",\n    className: \"ps-ant-dropdown\",\n    style: {\n      width: 200\n    },\n    value: action,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 45\n    }\n  }, tab === 'active' && __jsx(Option, {\n    value: \"inactive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 70\n    }\n  }, \"Inactive\"), tab === 'inactive' && __jsx(Option, {\n    value: \"active\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 72\n    }\n  }, \"Active\"), __jsx(Option, {\n    value: \"delete\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 49\n    }\n  }, \"Delete\")))), __jsx(\"div\", {\n    className: \"col-md-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 37\n    }\n  }, __jsx(\"button\", {\n    onClick: goOnClick,\n    style: {\n      backgroundColor: '#cd4040',\n      width: 100,\n      height: 35,\n      color: '#fff',\n      border: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 41\n    }\n  }, \"Go\")), __jsx(\"div\", {\n    className: \"col-md-6 text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 37\n    }\n  }, __jsx(\"button\", {\n    onClick: addModalOnClick,\n    style: {\n      backgroundColor: '#80bc00',\n      width: 100,\n      height: 35,\n      color: '#fff',\n      border: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 41\n    }\n  }, __jsx(\"i\", {\n    className: \"fas fa-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 45\n    }\n  }), \" Add\"))), __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 33\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 37\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 41\n    }\n  }, __jsx(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    value: search,\n    placeholder: \"search\",\n    onChange: e => searchOnChange(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 45\n    }\n  })))), __jsx(\"div\", {\n    style: {\n      marginTop: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 33\n    }\n  }, __jsx(TableCity, {\n    allCity: tab === \"active\" ? allCity : inactiveCity,\n    editModalOnClick: editModalOnClick,\n    onSelectAll: onSelectAll,\n    onSelectOne: onSelectOne,\n    selectAll: selectAll,\n    selectedHomeCatIds: selectedHomeCatIds,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 37\n    }\n  })), __jsx(\"div\", {\n    style: totalActiveCount > 0 ? {\n      margin: '10px auto',\n      textAlign: 'right'\n    } : {\n      display: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 33\n    }\n  }, __jsx(Pagination, {\n    total: tab === \"active\" ? totalActiveCount : totalInactiveCount,\n    defaultCurrent: 1,\n    current: currentPage,\n    defaultPageSize: 10,\n    pageSize: pageSizeTotal,\n    pageSizeOptions: ['10', '20', '30'],\n    onChange: pageSizeChange,\n    showSizeChanger: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 37\n    }\n  })))))), __jsx(Modal, {\n    visible: showModal,\n    okText: 'Save',\n    onCancel: closeModalOnClick,\n    title: selectedHomeCatId ? \"Edit Announcements \" : \"Add New Announcements \",\n    width: 800,\n    onOk: saveOnClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 17\n    }\n  }, __jsx(Spin, {\n    spinning: loader,\n    tip: 'Loading...',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 29\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 33\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 37\n    }\n  }, \"State \", __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 50\n    }\n  }, \"*\")), __jsx(\"select\", {\n    onChange: (event, value) => {\n      handleStateChange(event, value);\n    },\n    value: stateId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 38\n    }\n  }, stateitems), errors['State'] && __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 41\n    }\n  }, errors['State'])), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 33\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 37\n    }\n  }, \"City Name \", __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 54\n    }\n  }, \"*\")), __jsx(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    value: cityname,\n    placeholder: \"\",\n    onChange: e => CitynameOnChange(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 37\n    }\n  }), errors['cityname'] && __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 41\n    }\n  }, errors['cityname'])), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 33\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 37\n    }\n  }, \"City Code \", __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 54\n    }\n  }, \"*\")), __jsx(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    value: Citycode,\n    placeholder: \"\",\n    onChange: e => CitycodeOnChange(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 37\n    }\n  }), errors['Citycode'] && __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 41\n    }\n  }, errors['Citycode']))))))));\n};\n\nexport default Home;","map":{"version":3,"sources":["D:/Question_cloud/question_cloud_admin_web_new/pages/citycategory/view/index.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","Modal","Button","Checkbox","Spin","notification","Pagination","Tabs","Select","HeaderDashboard","Sidebar","TableCity","getAllCity","getInactiveCity","LocationControllerRepository","Home","props","TabPane","Option","dispatch","auth","allCity","totalActiveCount","inactiveCity","totalInactiveCount","City","showModal","setShowModal","cityname","setCityname","selectedHomeCatId","setSelectedHomeCatId","errors","setErrors","loader","setLoader","currentPage","setCurrentPage","pageSizeTotal","setPageSizeTotal","tab","setTab","selectAll","setSelectAll","selectedHomeCatIds","setSelectedHomeCatIds","action","setAction","State","setState","Citycode","setCitycode","stateId","setstateId","search","setsearch","stateitems","setStateItems","console","log","local","JSON","parse","localStorage","getItem","localAuth","isLoggedIn","window","location","href","handleStateChange","event","value","target","setStateId","handleRefresh","data","res","locationService","getCity","city","cityres","count","activecount","inactiveres","inactivecount","setInactiveCount","setActiveCount","setData","stateresult","getState","state","stateres","itemArr","push","state_id","state_name","setTimeout","fetchData","ctr","_start","_limit","addModalOnClick","editModalOnClick","city_id","city_name","city_code","closeModalOnClick","StateOnChange","errorObj","CitynameOnChange","CitycodeOnChange","saveOnClick","edit","save","obj","saveCity","success","message","e","error","editCity","searchOnChange","pageSizeChange","page","pageSize","changeTab","onSelectAll","array","map","h","onSelectOne","id","array1","index","indexOf","splice","length","actionOnChange","goOnClick","selectedHomeCatIdsArr","cityId","title","width","backgroundColor","height","color","border","marginTop","margin","textAlign","display"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,IAAlC,EAAwCC,YAAxC,EAAsDC,UAAtD,EAAkEC,IAAlE,EAAwEC,MAAxE,QAAsF,MAAtF;AACA,OAAOC,eAAP,MAA4B,4CAA5B;AACA,OAAOC,OAAP,MAAoB,sCAApB;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,SAASC,UAAT,EAAqBC,eAArB,QAA4C,4BAA5C;AACA,OAAOC,4BAAP,MAAyC,oDAAzC;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAEpB,QAAM;AAAEC,IAAAA;AAAF,MAAcV,IAApB;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAaV,MAAnB;AACA,QAAMW,QAAQ,GAAGpB,WAAW,EAA5B;AACA,QAAM;AAAEqB,IAAAA;AAAF,MAAWpB,WAAW,CAAC,CAAC;AAAEoB,IAAAA;AAAF,GAAD,KAAcA,IAAf,CAA5B;AACA,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,gBAAX;AAA6BC,IAAAA,YAA7B;AAA2CC,IAAAA;AAA3C,MAAkExB,WAAW,CAAC,CAAC;AAAEyB,IAAAA;AAAF,GAAD,KAAcA,IAAf,CAAnF;AACA,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4B7B,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM;AAAA,OAAC8B,QAAD;AAAA,OAAWC;AAAX,MAA0B/B,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM;AAAA,OAACgC,iBAAD;AAAA,OAAoBC;AAApB,MAA4CjC,QAAQ,CAAC,EAAD,CAA1D;AACA,QAAM;AAAA,OAACkC,MAAD;AAAA,OAASC;AAAT,MAAsBnC,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM;AAAA,OAACoC,MAAD;AAAA,OAASC;AAAT,MAAsBrC,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM;AAAA,OAACsC,WAAD;AAAA,OAAcC;AAAd,MAAgCvC,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM;AAAA,OAACwC,aAAD;AAAA,OAAgBC;AAAhB,MAAoCzC,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM;AAAA,OAAC0C,GAAD;AAAA,OAAMC;AAAN,MAAgB3C,QAAQ,CAAC,QAAD,CAA9B;AACA,QAAM;AAAA,OAAC4C,SAAD;AAAA,OAAYC;AAAZ,MAA4B7C,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM;AAAA,OAAC8C,kBAAD;AAAA,OAAqBC;AAArB,MAA8C/C,QAAQ,CAAC,EAAD,CAA5D;AACA,QAAM;AAAA,OAACgD,MAAD;AAAA,OAASC;AAAT,MAAsBjD,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM;AAAA,OAACkD,KAAD;AAAA,OAAQC;AAAR,MAAoBnD,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAA,OAACoD,QAAD;AAAA,OAAWC;AAAX,MAA0BrD,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM;AAAA,OAACsD,OAAD;AAAA,OAASC;AAAT,MAAuBvD,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM;AAAA,OAACwD,MAAD;AAAA,OAASC;AAAT,MAAsBzD,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM;AAAA,OAAC0D,UAAD;AAAA,OAAaC;AAAb,MAA8B3D,QAAQ,CAAC,EAAD,CAA5C;AACJ4D,EAAAA,OAAO,CAACC,GAAR,CAAYpC,YAAZ,EAAyB,cAAzB;AACI1B,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI+D,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,4BAArB,CAAX,CAAZ;AACA,QAAIC,SAAS,GAAGL,KAAK,IAAIA,KAAK,CAACxC,IAAf,GAAsByC,IAAI,CAACC,KAAL,CAAWF,KAAK,CAACxC,IAAjB,CAAtB,GAA+C,EAA/D;;AACA,QAAI6C,SAAS,IAAI,CAACA,SAAS,CAACC,UAA5B,EAAwC;AACpCC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,GAAvB;AACH;AACJ,GANQ,EAMN,CAACjD,IAAD,CANM,CAAT;;AAOA,QAAMkD,iBAAiB,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACxCd,IAAAA,OAAO,CAACC,GAAR,CAAYY,KAAK,CAACE,MAAN,CAAaD,KAAzB;AACAE,IAAAA,UAAU,CAACH,KAAK,CAACE,MAAN,CAAaD,KAAd,CAAV;AACD,GAHH;;AAIE,QAAMG,aAAa,GAAG,YAAY;AAChCxC,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAQ,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACA,UAAM;AAAEiC,MAAAA,IAAI,EAAEC;AAAR,QAAgB,MAAMC,eAAe,CAACC,OAAhB,CAAwB,GAAxB,CAA5B;AACA,UAAM;AAAEC,MAAAA,IAAI,EAAEC;AAAR,QAAoBJ,GAA1B;AACA,UAAM;AAAEK,MAAAA,KAAK,EAAEC;AAAT,QAAyBN,GAA/B;AACAnB,IAAAA,OAAO,CAACC,GAAR,CAAYsB,OAAZ;AACA,UAAM;AAAEL,MAAAA,IAAI,EAAEQ;AAAR,QAAwB,MAAMN,eAAe,CAACC,OAAhB,CAAwB,GAAxB,CAApC;AACA,UAAM;AAAEG,MAAAA,KAAK,EAAEG;AAAT,QAA2BD,WAAjC;AACAE,IAAAA,gBAAgB,CAACD,aAAD,CAAhB;AAGAE,IAAAA,cAAc,CAACJ,WAAD,CAAd;AACAK,IAAAA,OAAO,CAACP,OAAD,CAAP;AAGA,UAAM;AAAEL,MAAAA,IAAI,EAAEa;AAAR,QAAwB,MAAMX,eAAe,CAACY,QAAhB,CAAyB,GAAzB,CAApC;AACA,UAAM;AAAEC,MAAAA,KAAK,EAAEC;AAAT,QAAsBH,WAA5B;AACA,QAAII,OAAO,GAAG,EAAd;;AACA,SAAK,IAAIF,KAAT,IAAkBC,QAAlB,EAA4B;AAC1BC,MAAAA,OAAO,CAACC,IAAR,CAAa,MAAC,QAAD;AAAU,QAAA,KAAK,EAAEH,KAAK,CAACI,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkCJ,KAAK,CAACK,UAAxC,CAAb;AACD;;AACDvC,IAAAA,aAAa,CAACoC,OAAD,CAAb;AACAI,IAAAA,UAAU,CAAC,MAAM;AACf9D,MAAAA,SAAS,CAAC,KAAD,CAAT;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GA1BD;;AA2BAtC,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeqG,SAAf,GAA2B;AACzB,YAAMvB,aAAa,EAAnB;AACD;;AACDuB,IAAAA,SAAS;AACV,GALQ,EAKN,EALM,CAAT;AAOFrG,EAAAA,SAAS,CAAC,MAAM;AACZsC,IAAAA,SAAS,CAAC,IAAD,CAAT;AACA,QAAIgE,GAAG,GAAG,EAAV;AACAA,IAAAA,GAAG,CAACC,MAAJ,GAAahE,WAAW,KAAK,CAAhB,GAAoB,CAApB,GAAyB,CAACA,WAAW,GAAG,CAAf,IAAoBE,aAA1D;AACA6D,IAAAA,GAAG,CAACE,MAAJ,GAAa/D,aAAb;AACAnB,IAAAA,QAAQ,CAACP,UAAU,CAACuF,GAAD,CAAX,CAAR;AACAhF,IAAAA,QAAQ,CAACN,eAAe,CAACsF,GAAD,CAAhB,CAAR;AACH,GAPQ,EAON,EAPM,CAAT;AASAtG,EAAAA,SAAS,CAAC,MAAM;AACZsC,IAAAA,SAAS,CAAC,KAAD,CAAT;AACH,GAFQ,EAEN,CAACd,OAAD,EAAUE,YAAV,CAFM,CAAT;;AAIA,QAAM+E,eAAe,GAAG,YAAY;AAChCnE,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAgB,IAAAA,WAAW,CAAC,EAAD,CAAX;AACAF,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAlB,IAAAA,oBAAoB,CAAC,EAAD,CAApB;AACAI,IAAAA,SAAS,CAAC,KAAD,CAAT;AACAR,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACH,GAPD;;AASA,QAAM4E,gBAAgB,GAAG,MAAO3B,IAAP,IAAgB;AACrCzC,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAJ,IAAAA,oBAAoB,CAAC6C,IAAI,CAAC4B,OAAN,CAApB;AACAvD,IAAAA,QAAQ,CAAC2B,IAAI,CAACe,KAAN,CAAR;AACAtC,IAAAA,UAAU,CAACuB,IAAI,CAACmB,QAAN,CAAV;AACAlE,IAAAA,WAAW,CAAC+C,IAAI,CAAC6B,SAAN,CAAX;AACAtD,IAAAA,WAAW,CAACyB,IAAI,CAAC8B,SAAN,CAAX;AACAvE,IAAAA,SAAS,CAAC,KAAD,CAAT;AACAR,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACH,GATD;;AAWA,QAAMgF,iBAAiB,GAAG,MAAM;AAC5B9E,IAAAA,WAAW,CAAC,EAAD,CAAX;AACAsB,IAAAA,WAAW,CAAC,EAAD,CAAX;AACApB,IAAAA,oBAAoB,CAAC,EAAD,CAApB;AACAkB,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAhB,IAAAA,SAAS,CAAC,EAAD,CAAT;AACAN,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,GAPD;;AASA,QAAMiF,aAAa,GAAI5D,KAAD,IAAW;AAC7B,QAAI6D,QAAQ,qBAAQ7E,MAAR,CAAZ;;AACA6E,IAAAA,QAAQ,CAAC,OAAD,CAAR,GAAoB,EAApB;AACA5D,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACAf,IAAAA,SAAS,CAAC4E,QAAD,CAAT;AACH,GALD;;AAOA,QAAMC,gBAAgB,GAAIlF,QAAD,IAAc;AACnC,QAAIiF,QAAQ,qBAAQ7E,MAAR,CAAZ;;AACA6E,IAAAA,QAAQ,CAAC,UAAD,CAAR,GAAuB,EAAvB;AACAhF,IAAAA,WAAW,CAACD,QAAD,CAAX;AACAK,IAAAA,SAAS,CAAC4E,QAAD,CAAT;AACH,GALD;;AAMA,QAAME,gBAAgB,GAAI7D,QAAD,IAAc;AACnC,QAAI2D,QAAQ,qBAAQ7E,MAAR,CAAZ;;AACA6E,IAAAA,QAAQ,CAAC,UAAD,CAAR,GAAuB,EAAvB;AACA1D,IAAAA,WAAW,CAACD,QAAD,CAAX;AACAjB,IAAAA,SAAS,CAAC4E,QAAD,CAAT;AACH,GALD;;AAMA,QAAMG,WAAW,GAAG,MAAM;AACtB,QAAIlF,iBAAJ,EAAuB;AACnBmF,MAAAA,IAAI;AACP,KAFD,MAEO;AACHC,MAAAA,IAAI;AACP;AACJ,GAND;;AAQA,QAAMA,IAAI,GAAG,YAAY;AACrB,QAAMtF,QAAQ,IAAIsB,QAAlB,EAA4B;AACxBf,MAAAA,SAAS,CAAC,IAAD,CAAT;AACA,UAAIgF,GAAG,GAAG;AACN,oBAAY/D,OADN;AAEN,qBAAaxB,QAFP;AAGN,qBAAasB;AAHP,OAAV;;AAKA,UAAI;AACA,cAAMpC,4BAA4B,CAACsG,QAA7B,CAAsCD,GAAtC,CAAN;AACA9G,QAAAA,YAAY,CAACgH,OAAb,CAAqB;AACjBC,UAAAA,OAAO,EAAE;AADQ,SAArB;AAGA,YAAInB,GAAG,GAAG,EAAV;AACAA,QAAAA,GAAG,CAACC,MAAJ,GAAahE,WAAW,KAAK,CAAhB,GAAoB,CAApB,GAAyB,CAACA,WAAW,GAAG,CAAf,IAAoBE,aAA1D;AACA6D,QAAAA,GAAG,CAACE,MAAJ,GAAa/D,aAAb;;AAEA,YAAIgB,MAAJ,EAAY;AACR6C,UAAAA,GAAG,CAAC7C,MAAJ,GAAaA,MAAb;AACH;;AACDnC,QAAAA,QAAQ,CAACP,UAAU,CAACuF,GAAD,CAAX,CAAR;AACAhF,QAAAA,QAAQ,CAACN,eAAe,CAACsF,GAAD,CAAhB,CAAR;AACAQ,QAAAA,iBAAiB;AACpB,OAfD,CAeE,OAAOY,CAAP,EAAU;AACRlH,QAAAA,YAAY,CAACmH,KAAb,CAAmB;AACfF,UAAAA,OAAO,EAAE;AADM,SAAnB;AAGH;AACJ,KA3BD,MA2BO;AACH,UAAIT,QAAQ,qBAAQ7E,MAAR,CAAZ;;AACA,UAAI,CAACJ,QAAL,EAAeiF,QAAQ,CAAC,UAAD,CAAR,GAAuB,uBAAvB;AACf5E,MAAAA,SAAS,CAAC4E,QAAD,CAAT;AACH;AACJ,GAjCD;;AAmCA,QAAMI,IAAI,GAAG,YAAY;AACrB,QAAIrF,QAAQ,IAAIE,iBAAZ,IAAiCoB,QAAjC,IAA6CtB,QAAjD,EAA2D;AACvDO,MAAAA,SAAS,CAAC,IAAD,CAAT;AACA,UAAIgF,GAAG,GAAG;AACN,mBAAWrF,iBADL;AAEN,qBAAaF,QAFP;AAGN,qBAAasB,QAHP;AAIN,oBAAYE;AAJN,OAAV;;AAMA,UAAI;AACA,cAAMtC,4BAA4B,CAAC2G,QAA7B,CAAsC3F,iBAAtC,EAAyDqF,GAAzD,CAAN;AACA9G,QAAAA,YAAY,CAACgH,OAAb,CAAqB;AACjBC,UAAAA,OAAO,EAAE;AADQ,SAArB;AAGA,YAAInB,GAAG,GAAG,EAAV;AACAA,QAAAA,GAAG,CAACC,MAAJ,GAAahE,WAAW,KAAK,CAAhB,GAAoB,CAApB,GAAyB,CAACA,WAAW,GAAG,CAAf,IAAoBE,aAA1D;AACA6D,QAAAA,GAAG,CAACE,MAAJ,GAAa/D,aAAb;AACAnB,QAAAA,QAAQ,CAACP,UAAU,CAACuF,GAAD,CAAX,CAAR;AACAhF,QAAAA,QAAQ,CAACN,eAAe,CAACsF,GAAD,CAAhB,CAAR;AACAQ,QAAAA,iBAAiB;AACpB,OAXD,CAWE,OAAOY,CAAP,EAAU;AACRlH,QAAAA,YAAY,CAACmH,KAAb,CAAmB;AACfF,UAAAA,OAAO,EAAE;AADM,SAAnB;AAGH;AACJ,KAxBD,MAwBO;AACH,UAAIT,QAAQ,qBAAQ7E,MAAR,CAAZ;;AACA,UAAI,CAACJ,QAAL,EAAeiF,QAAQ,CAAC,UAAD,CAAR,GAAuB,uBAAvB;AACf5E,MAAAA,SAAS,CAAC4E,QAAD,CAAT;AACH;AACJ,GA9BD;;AAgCA,QAAMa,cAAc,GAAIpE,MAAD,IAAY;AAC/BnB,IAAAA,SAAS,CAAC,IAAD,CAAT;AACA,QAAIgE,GAAG,GAAG,EAAV;AACAA,IAAAA,GAAG,CAACC,MAAJ,GAAa,CAAb;AACAD,IAAAA,GAAG,CAACE,MAAJ,GAAa/D,aAAb;AACA6D,IAAAA,GAAG,CAAC7C,MAAJ,GAAaA,MAAb;;AACA,QAAIA,MAAJ,EAAY;AACR6C,MAAAA,GAAG,CAAC7C,MAAJ,GAAaA,MAAb;AACH;;AACD,QAAId,GAAG,KAAK,QAAZ,EAAsB;AAClBrB,MAAAA,QAAQ,CAACP,UAAU,CAACuF,GAAD,CAAX,CAAR;AACH,KAFD,MAEO;AACHhF,MAAAA,QAAQ,CAACN,eAAe,CAACsF,GAAD,CAAhB,CAAR;AACH;;AACD5C,IAAAA,SAAS,CAACD,MAAD,CAAT;AACAjB,IAAAA,cAAc,CAAC,CAAD,CAAd;AACH,GAhBD;;AAkBA,QAAMsF,cAAc,GAAG,OAAOC,IAAP,EAAaC,QAAb,KAA0B;AAC7C1F,IAAAA,SAAS,CAAC,IAAD,CAAT;AACA,QAAIgE,GAAG,GAAG,EAAV;AACAA,IAAAA,GAAG,CAACC,MAAJ,GAAawB,IAAI,KAAK,CAAT,GAAa,CAAb,GAAkB,CAACA,IAAI,GAAG,CAAR,IAAaC,QAA5C;AACA1B,IAAAA,GAAG,CAACE,MAAJ,GAAawB,QAAb;;AAEA,QAAIrF,GAAG,KAAK,QAAZ,EAAsB;AAClBrB,MAAAA,QAAQ,CAACP,UAAU,CAACuF,GAAD,CAAX,CAAR;AACH,KAFD,MAEO;AACHhF,MAAAA,QAAQ,CAACN,eAAe,CAACsF,GAAD,CAAhB,CAAR;AACH;;AACD9D,IAAAA,cAAc,CAACuF,IAAD,CAAd;AACArF,IAAAA,gBAAgB,CAACsF,QAAD,CAAhB;AACH,GAbD;;AAeA,QAAMC,SAAS,GAAItF,GAAD,IAAS;AACvBL,IAAAA,SAAS,CAAC,IAAD,CAAT;AACA,QAAIgE,GAAG,GAAG,EAAV;AACAA,IAAAA,GAAG,CAACC,MAAJ,GAAa,CAAb;AACAD,IAAAA,GAAG,CAACE,MAAJ,GAAa,EAAb;;AACA,QAAI7D,GAAG,KAAK,QAAZ,EAAsB;AAClBrB,MAAAA,QAAQ,CAACP,UAAU,CAACuF,GAAD,CAAX,CAAR;AACH,KAFD,MAEO;AACHhF,MAAAA,QAAQ,CAACN,eAAe,CAACsF,GAAD,CAAhB,CAAR;AACH;;AACD9D,IAAAA,cAAc,CAAC,CAAD,CAAd;AACAE,IAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACAM,IAAAA,qBAAqB,CAAC,EAAD,CAArB;AACAF,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAI,IAAAA,SAAS,CAAC,EAAD,CAAT;AACAQ,IAAAA,SAAS,CAAC,EAAD,CAAT;AACAd,IAAAA,MAAM,CAACD,GAAD,CAAN;AACH,GAjBD;;AAmBA,QAAMuF,WAAW,GAAIvD,KAAD,IAAW;AAC3B,QAAIwD,KAAK,GAAG,EAAZ;;AACA,QAAIxD,KAAJ,EAAW;AACP,UAAIhC,GAAG,KAAK,QAAZ,EAAsB;AAClBwF,QAAAA,KAAK,GAAG3G,OAAO,CAAC4G,GAAR,CAAYC,CAAC,IAAIA,CAAC,CAACnC,QAAnB,CAAR;AACH,OAFD,MAEO;AACHiC,QAAAA,KAAK,GAAGzG,YAAY,CAAC0G,GAAb,CAAiBC,CAAC,IAAIA,CAAC,CAACnC,QAAxB,CAAR;AACH;AACJ;;AACDlD,IAAAA,qBAAqB,CAACmF,KAAD,CAArB;AACArF,IAAAA,YAAY,CAAC6B,KAAD,CAAZ;AACH,GAXD;;AAaA,QAAM2D,WAAW,GAAIC,EAAD,IAAQ;AACxB,QAAIJ,KAAK,GAAG,CAAC,GAAGpF,kBAAJ,CAAZ;AACA,QAAIyF,MAAM,GAAG7F,GAAG,KAAK,QAAR,GAAmB,CAAC,GAAGnB,OAAJ,CAAnB,GAAkC,CAAC,GAAGE,YAAJ,CAA/C;AACA,QAAI+G,KAAK,GAAGN,KAAK,CAACO,OAAN,CAAcH,EAAd,CAAZ;;AACA,QAAIE,KAAK,IAAI,CAAb,EAAgB;AACZN,MAAAA,KAAK,CAACQ,MAAN,CAAaF,KAAb,EAAoB,CAApB;AACH,KAFD,MAEO;AACHN,MAAAA,KAAK,CAAClC,IAAN,CAAWsC,EAAX;AACH;;AACD,QAAIJ,KAAK,CAACS,MAAN,KAAiBJ,MAAM,CAACI,MAA5B,EAAoC;AAChC9F,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACH,KAFD,MAEO;AACHA,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;;AACDE,IAAAA,qBAAqB,CAACmF,KAAD,CAArB;AACH,GAfD;;AAiBA,QAAMU,cAAc,GAAI5F,MAAD,IAAY;AAC/BC,IAAAA,SAAS,CAACD,MAAD,CAAT;AACH,GAFD;;AAIA,QAAM6F,SAAS,GAAG,YAAY;AAC1B,QAAIC,qBAAqB,GAAG,CAAC,GAAGhG,kBAAJ,CAA5B;AACA,QAAIuE,GAAG,GAAG;AACN0B,MAAAA,MAAM,EAAED;AADF,KAAV;;AAGA,QAAIA,qBAAqB,IAAIA,qBAAqB,CAACH,MAAtB,GAA+B,CAAxD,IAA6D3F,MAAjE,EAAyE;AACrEX,MAAAA,SAAS,CAAC,IAAD,CAAT;;AACA,UAAIW,MAAM,KAAK,QAAf,EAAyB;AACrBqE,QAAAA,GAAG,CAAC,QAAD,CAAH,GAAgB,GAAhB;AACA,cAAMrG,4BAA4B,CAACS,YAA7B,CAA0C4F,GAA1C,CAAN;AACA9G,QAAAA,YAAY,CAACgH,OAAb,CAAqB;AACjBC,UAAAA,OAAO,EAAE;AADQ,SAArB;AAGH;;AACD,UAAIxE,MAAM,KAAK,UAAf,EAA2B;AACvBqE,QAAAA,GAAG,CAAC,QAAD,CAAH,GAAgB,GAAhB;AACA,cAAMrG,4BAA4B,CAACS,YAA7B,CAA0C4F,GAA1C,CAAN;AACA9G,QAAAA,YAAY,CAACgH,OAAb,CAAqB;AACjBC,UAAAA,OAAO,EAAE;AADQ,SAArB;AAGH;;AACD,UAAIxE,MAAM,KAAK,QAAf,EAAyB;AACrBqE,QAAAA,GAAG,CAAC,QAAD,CAAH,GAAgB,GAAhB;AACA,cAAMrG,4BAA4B,CAACS,YAA7B,CAA0C4F,GAA1C,CAAN;AACA9G,QAAAA,YAAY,CAACgH,OAAb,CAAqB;AACjBC,UAAAA,OAAO,EAAE;AADQ,SAArB;AAGH;;AACDzE,MAAAA,qBAAqB,CAAC,EAAD,CAArB;AACA,UAAIsD,GAAG,GAAG,EAAV;AACAA,MAAAA,GAAG,CAACC,MAAJ,GAAahE,WAAW,KAAK,CAAhB,GAAoB,CAApB,GAAyB,CAACA,WAAW,GAAG,CAAf,IAAoBE,aAA1D;AACA6D,MAAAA,GAAG,CAACE,MAAJ,GAAa/D,aAAb;;AAEA,UAAIgB,MAAJ,EAAY;AACR6C,QAAAA,GAAG,CAAC7C,MAAJ,GAAaA,MAAb;AACH;;AACDnC,MAAAA,QAAQ,CAACP,UAAU,CAACuF,GAAD,CAAX,CAAR;AACAhF,MAAAA,QAAQ,CAACN,eAAe,CAACsF,GAAD,CAAhB,CAAR;AACH,KAjCD,MAiCO;AACH,UAAI,CAACrD,MAAL,EAAa;AACT7C,QAAAA,KAAK,CAACuH,KAAN,CAAY;AACRsB,UAAAA,KAAK,EAAE;AADC,SAAZ;AAGH,OAJD,MAIO,IAAI,CAACF,qBAAqB,CAACH,MAA3B,EAAmC;AACtCxI,QAAAA,KAAK,CAACuH,KAAN,CAAY;AACRsB,UAAAA,KAAK,EAAE;AADC,SAAZ;AAGH;AACJ;AACJ,GAjDD;;AAmDA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAE5G,MAAhB;AAAwB,IAAA,GAAG,EAAE,YAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,OAAD;AAAS,IAAA,IAAI,EAAE,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ,EAMI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAuC,IAAA,EAAE,EAAC,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,gBAAgB,EAAEM,GAAxB;AAA6B,IAAA,QAAQ,EAAEsF,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,OAAD;AAAS,IAAA,GAAG,EAAG,UAASxG,gBAAiB,EAAzC;AAA4C,IAAA,GAAG,EAAC,QAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAGI,MAAC,OAAD;AAAS,IAAA,GAAG,EAAG,YAAWE,kBAAmB,EAA7C;AAAgD,IAAA,GAAG,EAAC,UAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ,EAOI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AACI,IAAA,QAAQ,EAAEkH,cADd;AAEI,IAAA,WAAW,EAAC,eAFhB;AAGI,IAAA,SAAS,EAAC,iBAHd;AAII,IAAA,KAAK,EAAE;AAAEK,MAAAA,KAAK,EAAE;AAAT,KAJX;AAKI,IAAA,KAAK,EAAEjG,MALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOKN,GAAG,KAAK,QAAR,IAAoB,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPzB,EAQKA,GAAG,KAAK,UAAR,IAAsB,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAR3B,EASI,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ,CADJ,CADJ,CADJ,EAgBI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,OAAO,EAAEmG,SAAjB;AAA4B,IAAA,KAAK,EAAE;AAAEK,MAAAA,eAAe,EAAE,SAAnB;AAA8BD,MAAAA,KAAK,EAAE,GAArC;AAA0CE,MAAAA,MAAM,EAAE,EAAlD;AAAsDC,MAAAA,KAAK,EAAE,MAA7D;AAAqEC,MAAAA,MAAM,EAAE;AAA7E,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CAhBJ,EAqBI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,OAAO,EAAE7C,eAAjB;AAAkC,IAAA,KAAK,EAAE;AAAE0C,MAAAA,eAAe,EAAE,SAAnB;AAA8BD,MAAAA,KAAK,EAAE,GAArC;AAA0CE,MAAAA,MAAM,EAAE,EAAlD;AAAsDC,MAAAA,KAAK,EAAE,MAA7D;AAAqEC,MAAAA,MAAM,EAAE;AAA7E,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,SADJ,CArBJ,CAPJ,EAmCI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,SAAS,EAAC,cADd;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,KAAK,EAAE7F,MAHX;AAII,IAAA,WAAW,EAAC,QAJhB;AAKI,IAAA,QAAQ,EAAGiE,CAAD,IAAOG,cAAc,CAACH,CAAC,CAAC9C,MAAF,CAASD,KAAV,CALnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ,CAnCJ,EAgDI;AAAK,IAAA,KAAK,EAAE;AAAE4E,MAAAA,SAAS,EAAE;AAAb,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AACI,IAAA,OAAO,EAAE5G,GAAG,KAAK,QAAR,GAAmBnB,OAAnB,GAA6BE,YAD1C;AAEI,IAAA,gBAAgB,EAAEgF,gBAFtB;AAGI,IAAA,WAAW,EAAEwB,WAHjB;AAII,IAAA,WAAW,EAAEI,WAJjB;AAKI,IAAA,SAAS,EAAEzF,SALf;AAMI,IAAA,kBAAkB,EAAEE,kBANxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAhDJ,EA0DI;AAAK,IAAA,KAAK,EAAEtB,gBAAgB,GAAG,CAAnB,GAAuB;AAAE+H,MAAAA,MAAM,EAAE,WAAV;AAAuBC,MAAAA,SAAS,EAAE;AAAlC,KAAvB,GAAqE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,UAAD;AACI,IAAA,KAAK,EAAE/G,GAAG,KAAK,QAAR,GAAmBlB,gBAAnB,GAAsCE,kBADjD;AAEI,IAAA,cAAc,EAAE,CAFpB;AAGI,IAAA,OAAO,EAAEY,WAHb;AAII,IAAA,eAAe,EAAE,EAJrB;AAKI,IAAA,QAAQ,EAAEE,aALd;AAMI,IAAA,eAAe,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,CANrB;AAOI,IAAA,QAAQ,EAAEqF,cAPd;AAQI,IAAA,eAAe,EAAE,IARrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CA1DJ,CADJ,CANJ,CADJ,CAFJ,EAoFI,MAAC,KAAD;AACI,IAAA,OAAO,EAAEjG,SADb;AAEI,IAAA,MAAM,EAAE,MAFZ;AAGI,IAAA,QAAQ,EAAEiF,iBAHd;AAII,IAAA,KAAK,EAAE7E,iBAAiB,GAAG,qBAAH,GAA2B,wBAJvD;AAKI,IAAA,KAAK,EAAE,GALX;AAMI,IAAA,IAAI,EAAEkF,WANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQI,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAE9E,MAAhB;AAAwB,IAAA,GAAG,EAAE,YAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAa;AAAM,IAAA,KAAK,EAAE;AAAEgH,MAAAA,KAAK,EAAE;AAAT,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAb,CADJ,EASK;AAAQ,IAAA,QAAQ,EAAE,CAAC3E,KAAD,EAAQC,KAAR,KAAkB;AAC9BF,MAAAA,iBAAiB,CAACC,KAAD,EAAQC,KAAR,CAAjB;AACY,KAFlB;AAEoB,IAAA,KAAK,EAAEpB,OAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIiBI,UAJjB,CATL,EAeKxB,MAAM,CAAC,OAAD,CAAN,IACG;AAAM,IAAA,KAAK,EAAE;AAAEkH,MAAAA,KAAK,EAAE;AAAT,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgClH,MAAM,CAAC,OAAD,CAAtC,CAhBR,CADJ,EAoBI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAiB;AAAM,IAAA,KAAK,EAAE;AAAEkH,MAAAA,KAAK,EAAE;AAAT,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAjB,CADJ,EAEI;AACI,IAAA,SAAS,EAAC,cADd;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,KAAK,EAAEtH,QAHX;AAII,IAAA,WAAW,EAAC,EAJhB;AAKI,IAAA,QAAQ,EAAG2F,CAAD,IAAOT,gBAAgB,CAACS,CAAC,CAAC9C,MAAF,CAASD,KAAV,CALrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EASKxC,MAAM,CAAC,UAAD,CAAN,IACG;AAAM,IAAA,KAAK,EAAE;AAAEkH,MAAAA,KAAK,EAAE;AAAT,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgClH,MAAM,CAAC,UAAD,CAAtC,CAVR,CApBJ,EAiCI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAiB;AAAM,IAAA,KAAK,EAAE;AAAEkH,MAAAA,KAAK,EAAE;AAAT,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAjB,CADJ,EAEI;AACI,IAAA,SAAS,EAAC,cADd;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,KAAK,EAAEhG,QAHX;AAII,IAAA,WAAW,EAAC,EAJhB;AAKI,IAAA,QAAQ,EAAGqE,CAAD,IAAOR,gBAAgB,CAACQ,CAAC,CAAC9C,MAAF,CAASD,KAAV,CALrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EASKxC,MAAM,CAAC,UAAD,CAAN,IACG;AAAM,IAAA,KAAK,EAAE;AAAEkH,MAAAA,KAAK,EAAE;AAAT,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgClH,MAAM,CAAC,UAAD,CAAtC,CAVR,CAjCJ,CADJ,CADJ,CARJ,CApFJ,CADJ,CADJ;AAsJH,CA5eD;;AA+eA,eAAejB,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Modal, Button, Checkbox, Spin, notification, Pagination, Tabs, Select } from 'antd';\r\nimport HeaderDashboard from '../../../components/header/HeaderDashboard';\r\nimport Sidebar from '../../../components/sections/sidebar';\r\nimport TableCity from '../../../components/tables/City';\r\nimport { getAllCity, getInactiveCity } from '../../../store/City/action';\r\nimport LocationControllerRepository from '../../../repositories/LocationControllerRepository';\r\n\r\nconst Home = (props) => {\r\n\r\n    const { TabPane } = Tabs;\r\n    const { Option } = Select;\r\n    const dispatch = useDispatch();\r\n    const { auth } = useSelector(({ auth }) => auth);\r\n    const { allCity, totalActiveCount, inactiveCity, totalInactiveCount } = useSelector(({ City }) => City);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [cityname, setCityname] = useState('');\r\n    const [selectedHomeCatId, setSelectedHomeCatId] = useState('');\r\n    const [errors, setErrors] = useState({});\r\n    const [loader, setLoader] = useState(false);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [pageSizeTotal, setPageSizeTotal] = useState(10);\r\n    const [tab, setTab] = useState('active');\r\n    const [selectAll, setSelectAll] = useState(false);\r\n    const [selectedHomeCatIds, setSelectedHomeCatIds] = useState([]);\r\n    const [action, setAction] = useState('');\r\n    const [State, setState] = useState('');\r\n    const [Citycode, setCitycode] = useState('');\r\n    const [stateId,setstateId] = useState('');\r\n    const [search, setsearch] = useState('');\r\n    const [stateitems, setStateItems] = useState([]);\r\nconsole.log(inactiveCity,\"inactiveCity\")\r\n    useEffect(() => {\r\n        let local = JSON.parse(localStorage.getItem('persist:QuestionCloudAdmin'));\r\n        let localAuth = local && local.auth ? JSON.parse(local.auth) : {};\r\n        if (localAuth && !localAuth.isLoggedIn) {\r\n            window.location.href = \"/\";\r\n        }\r\n    }, [auth]);\r\n    const handleStateChange = (event, value) => {\r\n        console.log(event.target.value);\r\n        setStateId(event.target.value);\r\n      }\r\n      const handleRefresh = async () => {\r\n        setLoader(true);\r\n        setSelectAll(false);\r\n        const { data: res } = await locationService.getCity('Y');\r\n        const { city: cityres } = res;\r\n        const { count: activecount } = res;\r\n        console.log(cityres);\r\n        const { data: inactiveres } = await locationService.getCity('N');\r\n        const { count: inactivecount } = inactiveres;\r\n        setInactiveCount(inactivecount);\r\n    \r\n    \r\n        setActiveCount(activecount);\r\n        setData(cityres);\r\n    \r\n    \r\n        const { data: stateresult } = await locationService.getState('Y');\r\n        const { state: stateres } = stateresult;\r\n        let itemArr = [];\r\n        for (let state of stateres) {\r\n          itemArr.push(<MenuItem value={state.state_id}>{state.state_name}</MenuItem>)\r\n        }\r\n        setStateItems(itemArr);\r\n        setTimeout(() => {\r\n          setLoader(false)\r\n        }, 1000);\r\n      }\r\n      useEffect(() => {\r\n        async function fetchData() {\r\n          await handleRefresh()\r\n        }\r\n        fetchData();\r\n      }, [])\r\n    \r\n    useEffect(() => {\r\n        setLoader(true);\r\n        let ctr = {};\r\n        ctr._start = currentPage === 1 ? 0 : ((currentPage - 1) * pageSizeTotal);\r\n        ctr._limit = pageSizeTotal;\r\n        dispatch(getAllCity(ctr));\r\n        dispatch(getInactiveCity(ctr));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setLoader(false);\r\n    }, [allCity, inactiveCity]);\r\n\r\n    const addModalOnClick = async () => {\r\n        setLoader(true);\r\n        setCitycode('');\r\n        setState('');\r\n        setSelectedHomeCatId('');\r\n        setLoader(false);\r\n        setShowModal(true);\r\n    }\r\n\r\n    const editModalOnClick = async (data) => {\r\n        setLoader(true);\r\n        setSelectedHomeCatId(data.city_id);\r\n        setState(data.state);\r\n        setstateId(data.state_id)\r\n        setCityname(data.city_name)\r\n        setCitycode(data.city_code)\r\n        setLoader(false);\r\n        setShowModal(true);\r\n    }\r\n\r\n    const closeModalOnClick = () => {\r\n        setCityname('');\r\n        setCitycode('');\r\n        setSelectedHomeCatId('');\r\n        setState('');\r\n        setErrors({});\r\n        setShowModal(false);\r\n    }\r\n\r\n    const StateOnChange = (State) => {\r\n        let errorObj = { ...errors };\r\n        errorObj['State'] = '';\r\n        setState(State);\r\n        setErrors(errorObj);\r\n    }\r\n\r\n    const CitynameOnChange = (cityname) => {\r\n        let errorObj = { ...errors };\r\n        errorObj['cityname'] = '';\r\n        setCityname(cityname);\r\n        setErrors(errorObj);\r\n    }\r\n    const CitycodeOnChange = (Citycode) => {\r\n        let errorObj = { ...errors };\r\n        errorObj['Citycode'] = '';\r\n        setCitycode(Citycode);\r\n        setErrors(errorObj);\r\n    }\r\n    const saveOnClick = () => {\r\n        if (selectedHomeCatId) {\r\n            edit();\r\n        } else {\r\n            save();\r\n        }\r\n    }\r\n\r\n    const save = async () => {\r\n        if (  cityname && Citycode) {\r\n            setLoader(true);\r\n            let obj = {\r\n                \"state_id\": stateId,\r\n                \"city_name\": cityname,\r\n                \"city_code\": Citycode\r\n            }\r\n            try {\r\n                await LocationControllerRepository.saveCity(obj);\r\n                notification.success({\r\n                    message: 'State Added Successfully.'\r\n                })\r\n                let ctr = {};\r\n                ctr._start = currentPage === 1 ? 0 : ((currentPage - 1) * pageSizeTotal);\r\n                ctr._limit = pageSizeTotal;\r\n\r\n                if (search) {\r\n                    ctr.search = search;\r\n                }\r\n                dispatch(getAllCity(ctr));\r\n                dispatch(getInactiveCity(ctr));\r\n                closeModalOnClick();\r\n            } catch (e) {\r\n                notification.error({\r\n                    message: 'State Added Failed.'\r\n                });\r\n            }\r\n        } else {\r\n            let errorObj = { ...errors };\r\n            if (!cityname) errorObj['cityname'] = \"Please Enter cityname\";\r\n            setErrors(errorObj);\r\n        }\r\n    }\r\n\r\n    const edit = async () => {\r\n        if (cityname && selectedHomeCatId && Citycode && cityname) {\r\n            setLoader(true);\r\n            let obj = {\r\n                \"city_id\": selectedHomeCatId,\r\n                \"city_name\": cityname,\r\n                \"city_code\": Citycode,\r\n                \"state_id\": stateId,\r\n            }\r\n            try {\r\n                await LocationControllerRepository.editCity(selectedHomeCatId, obj);\r\n                notification.success({\r\n                    message: 'State Updated Successfully.'\r\n                });\r\n                let ctr = {};\r\n                ctr._start = currentPage === 1 ? 0 : ((currentPage - 1) * pageSizeTotal);\r\n                ctr._limit = pageSizeTotal;\r\n                dispatch(getAllCity(ctr));\r\n                dispatch(getInactiveCity(ctr));\r\n                closeModalOnClick();\r\n            } catch (e) {\r\n                notification.error({\r\n                    message: 'State  Updated Failed.'\r\n                });\r\n            }\r\n        } else {\r\n            let errorObj = { ...errors };\r\n            if (!cityname) errorObj['cityname'] = \"Please Enter cityname\";\r\n            setErrors(errorObj);\r\n        }\r\n    }\r\n\r\n    const searchOnChange = (search) => {\r\n        setLoader(true);\r\n        let ctr = {};\r\n        ctr._start = 0;\r\n        ctr._limit = pageSizeTotal;\r\n        ctr.search = search;\r\n        if (search) {\r\n            ctr.search = search;\r\n        }\r\n        if (tab === 'active') {\r\n            dispatch(getAllCity(ctr));\r\n        } else {\r\n            dispatch(getInactiveCity(ctr));\r\n        }\r\n        setsearch(search);\r\n        setCurrentPage(1);\r\n    }\r\n\r\n    const pageSizeChange = async (page, pageSize) => {\r\n        setLoader(true);\r\n        let ctr = {};\r\n        ctr._start = page === 1 ? 0 : ((page - 1) * pageSize);\r\n        ctr._limit = pageSize;\r\n\r\n        if (tab === \"active\") {\r\n            dispatch(getAllCity(ctr));\r\n        } else {\r\n            dispatch(getInactiveCity(ctr));\r\n        }\r\n        setCurrentPage(page);\r\n        setPageSizeTotal(pageSize);\r\n    }\r\n\r\n    const changeTab = (tab) => {\r\n        setLoader(true);\r\n        let ctr = {};\r\n        ctr._start = 0;\r\n        ctr._limit = 10;\r\n        if (tab === \"active\") {\r\n            dispatch(getAllCity(ctr));\r\n        } else {\r\n            dispatch(getInactiveCity(ctr));\r\n        }\r\n        setCurrentPage(1);\r\n        setPageSizeTotal(10);\r\n        setSelectedHomeCatIds([]);\r\n        setSelectAll(false);\r\n        setAction('');\r\n        setsearch('');\r\n        setTab(tab);\r\n    }\r\n\r\n    const onSelectAll = (value) => {\r\n        let array = [];\r\n        if (value) {\r\n            if (tab === 'active') {\r\n                array = allCity.map(h => h.state_id);\r\n            } else {\r\n                array = inactiveCity.map(h => h.state_id);\r\n            }\r\n        }\r\n        setSelectedHomeCatIds(array);\r\n        setSelectAll(value);\r\n    }\r\n\r\n    const onSelectOne = (id) => {\r\n        let array = [...selectedHomeCatIds];\r\n        let array1 = tab === 'active' ? [...allCity] : [...inactiveCity];\r\n        let index = array.indexOf(id);\r\n        if (index >= 0) {\r\n            array.splice(index, 1);\r\n        } else {\r\n            array.push(id);\r\n        }\r\n        if (array.length === array1.length) {\r\n            setSelectAll(true);\r\n        } else {\r\n            setSelectAll(false);\r\n        }\r\n        setSelectedHomeCatIds(array);\r\n    }\r\n\r\n    const actionOnChange = (action) => {\r\n        setAction(action);\r\n    }\r\n\r\n    const goOnClick = async () => {\r\n        let selectedHomeCatIdsArr = [...selectedHomeCatIds];\r\n        let obj = {\r\n            cityId: selectedHomeCatIdsArr\r\n        };\r\n        if (selectedHomeCatIdsArr && selectedHomeCatIdsArr.length > 0 && action) {\r\n            setLoader(true);\r\n            if (action === \"active\") {\r\n                obj['status'] = 'Y';\r\n                await LocationControllerRepository.inactiveCity(obj);\r\n                notification.success({\r\n                    message: 'State  Updated Successfully.'\r\n                });\r\n            }\r\n            if (action === \"inactive\") {\r\n                obj['status'] = 'N';\r\n                await LocationControllerRepository.inactiveCity(obj);\r\n                notification.success({\r\n                    message: 'State  Updated Successfully.'\r\n                });\r\n            }\r\n            if (action === \"delete\") {\r\n                obj['status'] = 'D';\r\n                await LocationControllerRepository.inactiveCity(obj);\r\n                notification.success({\r\n                    message: 'State  Deleted Successfully.'\r\n                });\r\n            }\r\n            setSelectedHomeCatIds([]);\r\n            let ctr = {};\r\n            ctr._start = currentPage === 1 ? 0 : ((currentPage - 1) * pageSizeTotal);\r\n            ctr._limit = pageSizeTotal;\r\n\r\n            if (search) {\r\n                ctr.search = search;\r\n            }\r\n            dispatch(getAllCity(ctr));\r\n            dispatch(getInactiveCity(ctr));\r\n        } else {\r\n            if (!action) {\r\n                Modal.error({\r\n                    title: 'Please Select Action'\r\n                });\r\n            } else if (!selectedHomeCatIdsArr.length) {\r\n                Modal.error({\r\n                    title: 'Please Select One Category'\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Spin spinning={loader} tip={'Loading...'}>\r\n                <HeaderDashboard />\r\n                <div className=\"dashboard-container\">\r\n                    <div className=\"row no-gutters\">\r\n                        <div className=\"col-md-2\">\r\n                            <div id=\"sidebar\">\r\n                                <Sidebar page={'State'} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-10\">\r\n                            <div className=\"content content-width\" id=\"style-2\">\r\n                                <Tabs defaultActiveKey={tab} onChange={changeTab}>\r\n                                    <TabPane tab={`Active ${totalActiveCount}`} key=\"active\">\r\n                                    </TabPane>\r\n                                    <TabPane tab={`Inactive ${totalInactiveCount}`} key=\"inactive\">\r\n                                    </TabPane>\r\n                                </Tabs>\r\n                                <div className='row'>\r\n                                    <div className=\"col-md-4\">\r\n                                        <div className=\"form-group\">\r\n                                            <Select\r\n                                                onChange={actionOnChange}\r\n                                                placeholder=\"Select Action\"\r\n                                                className=\"ps-ant-dropdown\"\r\n                                                style={{ width: 200 }}\r\n                                                value={action}\r\n                                            >\r\n                                                {tab === 'active' && <Option value=\"inactive\">Inactive</Option>}\r\n                                                {tab === 'inactive' && <Option value=\"active\">Active</Option>}\r\n                                                <Option value=\"delete\">Delete</Option>\r\n                                            </Select>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-2\">\r\n                                        <button onClick={goOnClick} style={{ backgroundColor: '#cd4040', width: 100, height: 35, color: '#fff', border: 'none' }}>\r\n                                            Go\r\n                                        </button>\r\n                                    </div>\r\n                                    <div className=\"col-md-6 text-right\">\r\n                                        <button onClick={addModalOnClick} style={{ backgroundColor: '#80bc00', width: 100, height: 35, color: '#fff', border: 'none' }}>\r\n                                            <i className=\"fas fa-plus\" /> Add\r\n                                        </button>\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div className='row'>\r\n                                    <div className=\"col-md-6\">\r\n                                        <div className=\"form-group \">\r\n                                            <input\r\n                                                className=\"form-control\"\r\n                                                type=\"text\"\r\n                                                value={search}\r\n                                                placeholder=\"search\"\r\n                                                onChange={(e) => searchOnChange(e.target.value)}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div style={{ marginTop: 20 }}>\r\n                                    <TableCity\r\n                                        allCity={tab === \"active\" ? allCity : inactiveCity}\r\n                                        editModalOnClick={editModalOnClick}\r\n                                        onSelectAll={onSelectAll}\r\n                                        onSelectOne={onSelectOne}\r\n                                        selectAll={selectAll}\r\n                                        selectedHomeCatIds={selectedHomeCatIds}\r\n                                    />\r\n                                </div>\r\n                                <div style={totalActiveCount > 0 ? { margin: '10px auto', textAlign: 'right' } : { display: 'none' }}>\r\n                                    <Pagination\r\n                                        total={tab === \"active\" ? totalActiveCount : totalInactiveCount}\r\n                                        defaultCurrent={1}\r\n                                        current={currentPage}\r\n                                        defaultPageSize={10}\r\n                                        pageSize={pageSizeTotal}\r\n                                        pageSizeOptions={['10', '20', '30']}\r\n                                        onChange={pageSizeChange}\r\n                                        showSizeChanger={true}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Modal\r\n                    visible={showModal}\r\n                    okText={'Save'}\r\n                    onCancel={closeModalOnClick}\r\n                    title={selectedHomeCatId ? \"Edit Announcements \" : \"Add New Announcements \"}\r\n                    width={800}\r\n                    onOk={saveOnClick}\r\n                >\r\n                    <Spin spinning={loader} tip={'Loading...'}>\r\n                        <div className='row'>\r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"form-group\">\r\n                                    <label>State <span style={{ color: 'red' }}>*</span></label>\r\n                                    {/* <input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        value={State}\r\n                                        placeholder=\"\"\r\n                                        onChange={(e) => StateOnChange(e.target.value)}\r\n                                    /> */}\r\n                                     <select onChange={(event, value) => {\r\n                                           handleStateChange(event, value)\r\n                                                      }} value={stateId}\r\n                                              >\r\n                                                     {stateitems}\r\n                                         </select>\r\n                                    {errors['State'] &&\r\n                                        <span style={{ color: 'red' }}>{errors['State']}</span>\r\n                                    }\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>City Name <span style={{ color: 'red' }}>*</span></label>\r\n                                    <input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        value={cityname}\r\n                                        placeholder=\"\"\r\n                                        onChange={(e) => CitynameOnChange(e.target.value)}\r\n                                    />\r\n                                    {errors['cityname'] &&\r\n                                        <span style={{ color: 'red' }}>{errors['cityname']}</span>\r\n                                    }\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>City Code <span style={{ color: 'red' }}>*</span></label>\r\n                                    <input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        value={Citycode}\r\n                                        placeholder=\"\"\r\n                                        onChange={(e) => CitycodeOnChange(e.target.value)}\r\n                                    />\r\n                                    {errors['Citycode'] &&\r\n                                        <span style={{ color: 'red' }}>{errors['Citycode']}</span>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </Spin>\r\n                </Modal>\r\n            </Spin>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}