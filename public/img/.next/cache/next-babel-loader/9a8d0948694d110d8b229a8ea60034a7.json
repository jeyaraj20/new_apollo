{"ast":null,"code":"var _jsxFileName = \"D:\\\\Question_cloud\\\\question_cloud_admin_web_new\\\\components\\\\tables\\\\TableExaminationCalendar.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Checkbox, Table } from 'antd';\nimport Link from 'next/link';\n\nconst TableExaminationCalendar = ({\n  allExaminationCalendary,\n  editModalOnClick,\n  onSelectAll,\n  onSelectOne,\n  selectAll,\n  selectedCatIds,\n  mainPositionOnChange,\n  posotionChangeCategorys,\n  totalActiveCount\n}) => {\n  const columns = [{\n    title: 'Name',\n    dataIndex: 'category',\n    width: '20%'\n  }, {\n    title: 'Position',\n    dataIndex: 'position',\n    width: '5%'\n  }, {\n    title: 'Questions',\n    dataIndex: 'questions',\n    align: 'center',\n    width: '12%'\n  }, {\n    title: 'Edit',\n    dataIndex: 'edit',\n    align: 'center',\n    width: '5%'\n  }, {\n    title: __jsx(Checkbox, {\n      checked: selectAll,\n      onClick: e => onSelectAll(e.target.checked),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 14\n      }\n    }),\n    dataIndex: 'check',\n    width: '5%'\n  }];\n  console.log(1234, allExaminationCalendary);\n  let data = allExaminationCalendary.map(a => {\n    let position = posotionChangeCategorys.filter(p => p.catId === a.exam_id);\n    let activeCountFinded = totalActiveCount.find(aq => aq.exam_id === a.exam_id);\n    let obj = {\n      key: a.exam_id,\n      category: a.exam_name,\n      position: __jsx(\"input\", {\n        type: \"text\",\n        onChange: event => mainPositionOnChange(a.exam_id, event.target.value),\n        style: {\n          width: '50px',\n          textAlign: 'center',\n          padding: '0px'\n        },\n        value: position && position.length > 0 ? position[0].position : a.exam_pos,\n        className: \"form-control form-control-lg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }\n      }),\n      edit: __jsx(\"i\", {\n        className: \"fas fa-pen\",\n        onClick: () => editModalOnClick(a),\n        style: {\n          cursor: 'pointer'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }\n      }),\n      check: __jsx(Checkbox, {\n        onClick: () => onSelectOne(a.exam_id),\n        checked: selectedCatIds.indexOf(a.exam_id) >= 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }\n      }),\n      questions: __jsx(\"div\", {\n        className: \"row text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }\n      }, __jsx(\"div\", {\n        style: {\n          backgroundColor: '#4caf50',\n          width: 50,\n          height: 30,\n          border: 'none',\n          borderRadius: 10,\n          padding: 5,\n          marginLeft: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }\n      }, __jsx(Link, {\n        href: `/examinationCalendar/exams?exam_id=${a.cat_id}&exam_name=${a.exam_name}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }\n      }, __jsx(\"a\", {\n        style: {\n          color: '#fff'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }\n      }, activeCountFinded && activeCountFinded.activecount ? activeCountFinded.activecount : 0))))\n    };\n    console.log(obj, \"qqqqqqqqqwqw\");\n    return obj;\n  });\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, __jsx(Table, {\n    columns: columns,\n    dataSource: data,\n    pagination: false,\n    bordered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default TableExaminationCalendar;","map":{"version":3,"sources":["D:/Question_cloud/question_cloud_admin_web_new/components/tables/TableExaminationCalendar.jsx"],"names":["React","Checkbox","Table","Link","TableExaminationCalendar","allExaminationCalendary","editModalOnClick","onSelectAll","onSelectOne","selectAll","selectedCatIds","mainPositionOnChange","posotionChangeCategorys","totalActiveCount","columns","title","dataIndex","width","align","e","target","checked","console","log","data","map","a","position","filter","p","catId","exam_id","activeCountFinded","find","aq","obj","key","category","exam_name","event","value","textAlign","padding","length","exam_pos","edit","cursor","check","indexOf","questions","backgroundColor","height","border","borderRadius","marginLeft","cat_id","color","activecount"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Checkbox, Table } from 'antd';\r\nimport Link from 'next/link';\r\n\r\nconst TableExaminationCalendar = ({\r\n  allExaminationCalendary, editModalOnClick, onSelectAll, onSelectOne,\r\n  selectAll, selectedCatIds, mainPositionOnChange, posotionChangeCategorys, totalActiveCount\r\n}) => {\r\n  const columns = [\r\n  \r\n    {\r\n      title: 'Name',\r\n      dataIndex: 'category',\r\n      width: '20%',\r\n    },\r\n    {\r\n      title: 'Position',\r\n      dataIndex: 'position',\r\n      width: '5%',\r\n    },\r\n    {\r\n      title: 'Questions',\r\n      dataIndex: 'questions',\r\n      align: 'center',\r\n      width: '12%',\r\n    },\r\n    {\r\n      title: 'Edit',\r\n      dataIndex: 'edit',\r\n      align: 'center',\r\n      width: '5%',\r\n    },\r\n   \r\n    {\r\n      title: <Checkbox checked={selectAll} onClick={(e) => onSelectAll(e.target.checked)}></Checkbox>,\r\n      dataIndex: 'check',\r\n      width: '5%',\r\n    }\r\n  ];\r\nconsole.log(1234,allExaminationCalendary)\r\n  let data = allExaminationCalendary.map(a => {\r\n    let position = posotionChangeCategorys.filter(p => p.catId === a.exam_id);\r\n   \r\n    let activeCountFinded = totalActiveCount.find(aq => aq.exam_id === a.exam_id);\r\n\r\n    let obj = {\r\n      key: a.exam_id,\r\n      category: a.exam_name,\r\n      position: (\r\n        <input\r\n          type=\"text\"\r\n          onChange={event => mainPositionOnChange(a.exam_id, event.target.value)}\r\n          style={{ width: '50px', textAlign: 'center', padding: '0px' }}\r\n          value={position && position.length > 0 ? position[0].position : a.exam_pos}\r\n          className=\"form-control form-control-lg\"\r\n        />\r\n      ),\r\n      edit: (\r\n        <i className=\"fas fa-pen\" onClick={() => editModalOnClick(a)} style={{ cursor: 'pointer' }}></i>\r\n      ),\r\n      check: (\r\n        <Checkbox\r\n          onClick={() => onSelectOne(a.exam_id)}\r\n          checked={selectedCatIds.indexOf(a.exam_id) >= 0}\r\n        />\r\n      ),\r\n     \r\n      questions: (\r\n        <div className='row text-center'>\r\n          <div style={{ backgroundColor: '#4caf50', width: 50, height: 30, border: 'none', borderRadius: 10, padding: 5, marginLeft: 10 }}>\r\n            <Link href={`/examinationCalendar/exams?exam_id=${a.cat_id}&exam_name=${a.exam_name}`}>\r\n            <a style={{ color: '#fff' }}>{activeCountFinded && activeCountFinded.activecount ? activeCountFinded.activecount : 0}</a>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      ),\r\n    }\r\n    console.log(obj,\"qqqqqqqqqwqw\")\r\n    return (obj);\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Table columns={columns} dataSource={data} pagination={false} bordered />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableExaminationCalendar;\r\n"]},"metadata":{},"sourceType":"module"}