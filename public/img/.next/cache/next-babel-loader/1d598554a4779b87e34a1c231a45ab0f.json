{"ast":null,"code":"var _jsxFileName = \"D:\\\\Question_cloud\\\\question_cloud_admin_web_new\\\\pages\\\\changepassword\\\\view\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n// import React from 'react'\n// import PropTypes from 'prop-types'\n// import HeaderDashboard from '../../../components/header/HeaderDashboard';\n// import { Modal, Button, Checkbox, Spin, notification, Pagination, Tabs, Select } from 'antd';\n// class CreateDogForm extends React.Component {\n//   state = {\n//     name: '',\n//     ageInYears: \"0\",\n//     ageInMonths: \"0\",\n//     gender: null,\n//     neuteredOrSpayed: null,\n//     weightInLbs: \"0\",\n//     bodyCondition: null,\n//     activityLevel: null,\n//     breeds: [],\n//   }\n//   handleChange = (e) => {\n//     console.log('value:', e.target.value)\n//     console.log('options:', e.target.options)\n//     console.log('type:', e.target.type)\n//     let value = e.target.value\n//     if(e.target.type === 'number') {\n//       value = parseInt(e.target.value)\n//     }\n//     this.setState({[e.target.name]: value})\n//   }\n//   handleSubmit = (e) => {\n//     e.preventDefault()\n//     const dog = {\n//       name: this.state.name,\n//       ageInYears: this.state.ageInYears,\n//       ageInMonths: this.state.ageInMonths,\n//       gender: this.state.gender,\n//       neuteredOrSpayed: this.state.neuteredOrSpayed,\n//       weightInLbs: this.state.weightInLbs,\n//       bodyCondition: this.state.bodyCondition,\n//       activityLevel: this.state.activityLevel,\n//       breeds: this.state.breeds,\n//       createdAt: new Date(),\n//       createdBy: \"kamtodo\"\n//     }\n//     if (dog.name) {\n//       this.props.createNewDog(dog)\n//     } else {\n//       alert('Please fix all errors. ')\n//     }\n//   }\n//   render() {\n//     return (\n//       <Spin spinning={loader} tip={'Loading...'}>\n//         <HeaderDashboard />\n//       <div className='row'>\n//       <form className=\"create-dog-wrapper\" onSubmit={this.handleSubmit}>\n//       <div className=\"col-md-12\">\n//         <div className=\"form-group\">\n//           <label>Dog's Name:</label>\n//           <input \n//           type=\"text\"\n//            name=\"name\" \n//            className=\"form-control\"\n//            placeholder=\"Dog name\"\n//             required \n//             onChange={this.handleChange}\n//             />\n//         </div>\n//         <div className=\"form-group\">\n//           <label>Dog's Name:</label>\n//           <input\n//            className=\"form-control\"\n//            type=\"text\" \n//            name=\"name\" \n//            placeholder=\"Dog name\" \n//            required \n//            onChange={this.handleChange}\n//            />\n//         </div>\n//         <div className=\"form-group\">\n//           <label>Dog's Name:</label>\n//           <input \n//            className=\"form-control\"\n//           type=\"text\" \n//           name=\"name\" \n//           placeholder=\"Dog name\" \n//           required \n//           onChange={this.handleChange}/>\n//         </div>\n//         <div className=\"form-group\">\n//           <label>Dog's Name:</label>\n//           <input \n//            className=\"form-control\"\n//           type=\"text\" \n//           name=\"name\" \n//           placeholder=\"Dog name\" \n//           required \n//           onChange={this.handleChange}/>\n//         </div>\n//         <div>\n//           <button type=\"submit\">Create New Dog</button>\n//         </div>\n//         </div>\n//       </form>\n//       </div>\n//       </Spin>\n//     )\n//   }\n// }\n// CreateDogForm.propTypes = {\n//   createNewDog: PropTypes.func.isRequired\n// }\n// export default CreateDogForm\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles.css\";\n\nfunction App() {\n  _s();\n\n  var _this = this;\n\n  // React States\n  var _useState = useState({}),\n      errorMessages = _useState[0],\n      setErrorMessages = _useState[1];\n\n  var _useState2 = useState(false),\n      isSubmitted = _useState2[0],\n      setIsSubmitted = _useState2[1]; // User Login info\n\n\n  var database = [{\n    username: \"user1\",\n    password: \"pass1\"\n  }, {\n    username: \"user2\",\n    password: \"pass2\"\n  }];\n  var errors = {\n    uname: \"invalid username\",\n    pass: \"invalid password\"\n  };\n\n  var handleSubmit = function handleSubmit(event) {\n    //Prevent page reload\n    event.preventDefault();\n    var _document$forms$ = document.forms[0],\n        uname = _document$forms$.uname,\n        pass = _document$forms$.pass; // Find user login info\n\n    var userData = database.find(function (user) {\n      return user.username === uname.value;\n    }); // Compare user info\n\n    if (userData) {\n      if (userData.password !== pass.value) {\n        // Invalid password\n        setErrorMessages({\n          name: \"pass\",\n          message: errors.pass\n        });\n      } else {\n        setIsSubmitted(true);\n      }\n    } else {\n      // Username not found\n      setErrorMessages({\n        name: \"uname\",\n        message: errors.uname\n      });\n    }\n  }; // Generate JSX code for error message\n\n\n  var renderErrorMessage = function renderErrorMessage(name) {\n    return name === errorMessages.name && __jsx(\"div\", {\n      className: \"error\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 7\n      }\n    }, errorMessages.message);\n  }; // JSX code for login form\n\n\n  var renderForm = __jsx(\"div\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 5\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 11\n    }\n  }, \"Username \"), __jsx(\"input\", {\n    type: \"text\",\n    name: \"uname\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 11\n    }\n  }), renderErrorMessage(\"uname\")), __jsx(\"div\", {\n    className: \"input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 11\n    }\n  }, \"Password \"), __jsx(\"input\", {\n    type: \"password\",\n    name: \"pass\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 11\n    }\n  }), renderErrorMessage(\"pass\")), __jsx(\"div\", {\n    className: \"button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 11\n    }\n  }))));\n\n  return __jsx(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"login-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }\n  }, \"Sign In\"), isSubmitted ? __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 24\n    }\n  }, \"User is successfully logged in\") : renderForm));\n}\n\n_s(App, \"xHac37XC1FUyoDun112aRZB/AH4=\");\n\n_c = App;\nvar rootElement = document.getElementById(\"root\");\nReactDOM.render(__jsx(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 212,\n    columnNumber: 17\n  }\n}), rootElement);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/Question_cloud/question_cloud_admin_web_new/pages/changepassword/view/index.jsx"],"names":["React","useState","ReactDOM","App","errorMessages","setErrorMessages","isSubmitted","setIsSubmitted","database","username","password","errors","uname","pass","handleSubmit","event","preventDefault","document","forms","userData","find","user","value","name","message","renderErrorMessage","renderForm","rootElement","getElementById","render"],"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","sourcesContent":["\r\n// import React from 'react'\r\n// import PropTypes from 'prop-types'\r\n// import HeaderDashboard from '../../../components/header/HeaderDashboard';\r\n// import { Modal, Button, Checkbox, Spin, notification, Pagination, Tabs, Select } from 'antd';\r\n\r\n// class CreateDogForm extends React.Component {\r\n//   state = {\r\n//     name: '',\r\n//     ageInYears: \"0\",\r\n//     ageInMonths: \"0\",\r\n//     gender: null,\r\n//     neuteredOrSpayed: null,\r\n//     weightInLbs: \"0\",\r\n//     bodyCondition: null,\r\n//     activityLevel: null,\r\n//     breeds: [],\r\n//   }\r\n\r\n//   handleChange = (e) => {\r\n//     console.log('value:', e.target.value)\r\n//     console.log('options:', e.target.options)\r\n//     console.log('type:', e.target.type)\r\n//     let value = e.target.value\r\n//     if(e.target.type === 'number') {\r\n//       value = parseInt(e.target.value)\r\n//     }\r\n\r\n//     this.setState({[e.target.name]: value})\r\n//   }\r\n\r\n//   handleSubmit = (e) => {\r\n//     e.preventDefault()\r\n//     const dog = {\r\n//       name: this.state.name,\r\n//       ageInYears: this.state.ageInYears,\r\n//       ageInMonths: this.state.ageInMonths,\r\n//       gender: this.state.gender,\r\n//       neuteredOrSpayed: this.state.neuteredOrSpayed,\r\n//       weightInLbs: this.state.weightInLbs,\r\n//       bodyCondition: this.state.bodyCondition,\r\n//       activityLevel: this.state.activityLevel,\r\n//       breeds: this.state.breeds,\r\n//       createdAt: new Date(),\r\n//       createdBy: \"kamtodo\"\r\n//     }\r\n\r\n//     if (dog.name) {\r\n//       this.props.createNewDog(dog)\r\n//     } else {\r\n//       alert('Please fix all errors. ')\r\n//     }\r\n//   }\r\n\r\n//   render() {\r\n//     return (\r\n//       <Spin spinning={loader} tip={'Loading...'}>\r\n//         <HeaderDashboard />\r\n//       <div className='row'>\r\n       \r\n//       <form className=\"create-dog-wrapper\" onSubmit={this.handleSubmit}>\r\n//       <div className=\"col-md-12\">\r\n//         <div className=\"form-group\">\r\n//           <label>Dog's Name:</label>\r\n//           <input \r\n//           type=\"text\"\r\n//            name=\"name\" \r\n//            className=\"form-control\"\r\n//            placeholder=\"Dog name\"\r\n//             required \r\n//             onChange={this.handleChange}\r\n//             />\r\n//         </div>\r\n\r\n//         <div className=\"form-group\">\r\n//           <label>Dog's Name:</label>\r\n//           <input\r\n//            className=\"form-control\"\r\n//            type=\"text\" \r\n//            name=\"name\" \r\n//            placeholder=\"Dog name\" \r\n//            required \r\n//            onChange={this.handleChange}\r\n//            />\r\n//         </div>\r\n\r\n//         <div className=\"form-group\">\r\n//           <label>Dog's Name:</label>\r\n//           <input \r\n//            className=\"form-control\"\r\n//           type=\"text\" \r\n//           name=\"name\" \r\n//           placeholder=\"Dog name\" \r\n//           required \r\n//           onChange={this.handleChange}/>\r\n//         </div>\r\n//         <div className=\"form-group\">\r\n//           <label>Dog's Name:</label>\r\n//           <input \r\n//            className=\"form-control\"\r\n//           type=\"text\" \r\n//           name=\"name\" \r\n//           placeholder=\"Dog name\" \r\n//           required \r\n//           onChange={this.handleChange}/>\r\n//         </div>\r\n\r\n//         <div>\r\n//           <button type=\"submit\">Create New Dog</button>\r\n//         </div>\r\n//         </div>\r\n//       </form>\r\n//       </div>\r\n//       </Spin>\r\n//     )\r\n//   }\r\n// }\r\n\r\n// CreateDogForm.propTypes = {\r\n//   createNewDog: PropTypes.func.isRequired\r\n// }\r\n\r\n// export default CreateDogForm\r\nimport React, { useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"./styles.css\";\r\n\r\nfunction App() {\r\n  // React States\r\n  const [errorMessages, setErrorMessages] = useState({});\r\n  const [isSubmitted, setIsSubmitted] = useState(false);\r\n\r\n  // User Login info\r\n  const database = [\r\n    {\r\n      username: \"user1\",\r\n      password: \"pass1\"\r\n    },\r\n    {\r\n      username: \"user2\",\r\n      password: \"pass2\"\r\n    }\r\n  ];\r\n\r\n  const errors = {\r\n    uname: \"invalid username\",\r\n    pass: \"invalid password\"\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    //Prevent page reload\r\n    event.preventDefault();\r\n\r\n    var { uname, pass } = document.forms[0];\r\n\r\n    // Find user login info\r\n    const userData = database.find((user) => user.username === uname.value);\r\n\r\n    // Compare user info\r\n    if (userData) {\r\n      if (userData.password !== pass.value) {\r\n        // Invalid password\r\n        setErrorMessages({ name: \"pass\", message: errors.pass });\r\n      } else {\r\n        setIsSubmitted(true);\r\n      }\r\n    } else {\r\n      // Username not found\r\n      setErrorMessages({ name: \"uname\", message: errors.uname });\r\n    }\r\n  };\r\n\r\n  // Generate JSX code for error message\r\n  const renderErrorMessage = (name) =>\r\n    name === errorMessages.name && (\r\n      <div className=\"error\">{errorMessages.message}</div>\r\n    );\r\n\r\n  // JSX code for login form\r\n  const renderForm = (\r\n    <div className=\"form\">\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"input-container\">\r\n          <label>Username </label>\r\n          <input type=\"text\" name=\"uname\" required />\r\n          {renderErrorMessage(\"uname\")}\r\n        </div>\r\n        <div className=\"input-container\">\r\n          <label>Password </label>\r\n          <input type=\"password\" name=\"pass\" required />\r\n          {renderErrorMessage(\"pass\")}\r\n        </div>\r\n        <div className=\"button-container\">\r\n          <input type=\"submit\" />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"login-form\">\r\n        <div className=\"title\">Sign In</div>\r\n        {isSubmitted ? <div>User is successfully logged in</div> : renderForm}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<App />, rootElement);"]},"metadata":{},"sourceType":"module"}