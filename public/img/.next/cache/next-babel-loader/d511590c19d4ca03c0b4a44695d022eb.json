{"ast":null,"code":"var _jsxFileName = \"F:\\\\newapollo\\\\pages\\\\announcements\\\\view\\\\index.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Modal, Button, Checkbox, Spin, notification, Pagination, Tabs, Select } from 'antd';\nimport HeaderDashboard from '../../../components/header/HeaderDashboard';\nimport Sidebar from '../../../components/sections/sidebar';\nimport TableAnnouncements from '../../../components/tables/Announcements';\nimport { getAllAnnouncements, getInactiveAnnouncements } from '../../../store/Announcements/action';\nimport AnnouncementsRepository from '../../../repositories/AnnouncementsRepository';\n\nconst Home = props => {\n  const {\n    TabPane\n  } = Tabs;\n  const {\n    Option\n  } = Select;\n  const dispatch = useDispatch();\n  const {\n    auth\n  } = useSelector(({\n    auth\n  }) => auth);\n  const {\n    allAnnouncements,\n    totalActiveCount,\n    inactiveAnnouncements,\n    totalInactiveCount\n  } = useSelector(({\n    Announcements\n  }) => Announcements);\n  const {\n    0: showModal,\n    1: setShowModal\n  } = useState(false);\n  const {\n    0: position,\n    1: setPosition\n  } = useState('');\n  const {\n    0: selectedHomeCatId,\n    1: setSelectedHomeCatId\n  } = useState('');\n  const {\n    0: errors,\n    1: setErrors\n  } = useState({});\n  const {\n    0: loader,\n    1: setLoader\n  } = useState(false);\n  const {\n    0: currentPage,\n    1: setCurrentPage\n  } = useState(1);\n  const {\n    0: pageSizeTotal,\n    1: setPageSizeTotal\n  } = useState(10);\n  const {\n    0: tab,\n    1: setTab\n  } = useState('active');\n  const {\n    0: selectAll,\n    1: setSelectAll\n  } = useState(false);\n  const {\n    0: selectedHomeCatIds,\n    1: setSelectedHomeCatIds\n  } = useState([]);\n  const {\n    0: action,\n    1: setAction\n  } = useState('');\n  const {\n    0: Announcements,\n    1: setAnnouncements\n  } = useState('');\n  const {\n    0: search,\n    1: setsearch\n  } = useState('');\n  const {\n    0: posotionChangeCategorys,\n    1: setPosotionChangeCategorys\n  } = useState([]);\n  useEffect(() => {\n    let local = JSON.parse(localStorage.getItem('persist:QuestionCloudAdmin'));\n    let localAuth = local && local.auth ? JSON.parse(local.auth) : {};\n\n    if (localAuth && !localAuth.isLoggedIn) {\n      window.location.href = \"/\";\n    }\n  }, [auth]);\n  useEffect(() => {\n    setLoader(true);\n    let ctr = {};\n    ctr._start = currentPage === 1 ? 0 : (currentPage - 1) * pageSizeTotal;\n    ctr._limit = pageSizeTotal;\n    dispatch(getAllAnnouncements(ctr));\n    dispatch(getInactiveAnnouncements(ctr));\n  }, []);\n  useEffect(() => {\n    setLoader(false);\n  }, [allAnnouncements, inactiveAnnouncements]);\n\n  const addModalOnClick = async () => {\n    setLoader(true);\n    setPosition('');\n    setSelectedHomeCatId('');\n    setLoader(false);\n    setShowModal(true);\n  };\n\n  const deleteOneAnnouncements = data => {\n    Modal.confirm({\n      title: 'Confirm',\n      content: 'Do you want to delete this Announcements.',\n      okText: 'Yes',\n      onOk: () => deleteOneCategory(data),\n      cancelText: 'No'\n    });\n  };\n\n  const deleteOneCategory = async data => {\n    let obj = {\n      \"AnnouncementsId\": [data.Announcements_id]\n    };\n    await AnnouncementsRepository.deleteCategory(obj);\n    Modal.success({\n      title: 'Announcements Deleted Successfully.'\n    });\n    let ctr = {};\n    ctr._start = currentPage === 1 ? 0 : (currentPage - 1) * pageSizeTotal;\n    ctr._limit = pageSizeTotal;\n    dispatch(getAllAnnouncements(ctr));\n    dispatch(getInactiveAnnouncements(ctr));\n  };\n\n  const editModalOnClick = async data => {\n    setLoader(true);\n    setPosition(data.Announcements_pos);\n    setSelectedHomeCatId(data.Announcements_id);\n    setAnnouncements(data.Announcements);\n    setLoader(false);\n    setShowModal(true);\n  };\n\n  const closeModalOnClick = () => {\n    setPosition('');\n    setSelectedHomeCatId('');\n    setAnnouncements('');\n    setErrors({});\n    setShowModal(false);\n  };\n\n  const AnnouncementsOnChange = Announcements => {\n    let errorObj = _objectSpread({}, errors);\n\n    errorObj['Announcements'] = '';\n    setAnnouncements(Announcements);\n    setErrors(errorObj);\n  };\n\n  const positionOnChange = position => {\n    const re = /^[0-9\\b]+$/; //rules\n\n    if (position === \"\" || re.test(position)) {\n      let errorObj = _objectSpread({}, errors);\n\n      errorObj['position'] = '';\n      setPosition(position);\n      setErrors(errorObj);\n    }\n  };\n\n  const saveOnClick = () => {\n    if (selectedHomeCatId) {\n      edit();\n    } else {\n      save();\n    }\n  };\n\n  const save = async () => {\n    if (position && Announcements) {\n      setLoader(true);\n      let obj = {\n        \"Announcements_pos\": position,\n        \"Announcements\": Announcements\n      };\n\n      try {\n        await AnnouncementsRepository.saveAnnouncements(obj);\n        notification.success({\n          message: 'Announcements Added Successfully.'\n        });\n        let ctr = {};\n        ctr._start = currentPage === 1 ? 0 : (currentPage - 1) * pageSizeTotal;\n        ctr._limit = pageSizeTotal;\n        ctr.search = search;\n        dispatch(getAllAnnouncements(ctr));\n        dispatch(getInactiveAnnouncements(ctr));\n        closeModalOnClick();\n      } catch (e) {\n        notification.error({\n          message: 'Announcements Added Failed.'\n        });\n      }\n    } else {\n      let errorObj = _objectSpread({}, errors);\n\n      if (!Announcements) errorObj['Announcements'] = \"Please Enter Title\";\n      if (!position) errorObj['position'] = \"Please Enter Position\";\n      setErrors(errorObj);\n    }\n  };\n\n  const edit = async () => {\n    if (position && selectedHomeCatId && Announcements) {\n      setLoader(true);\n      let obj = {\n        \"Announcements_id\": selectedHomeCatId,\n        \"Announcements_pos\": position,\n        \"Announcements\": Announcements\n      };\n\n      try {\n        await AnnouncementsRepository.editAnnouncements(selectedHomeCatId, obj);\n        notification.success({\n          message: 'Announcements Updated Successfully.'\n        });\n        let ctr = {};\n        ctr._start = currentPage === 1 ? 0 : (currentPage - 1) * pageSizeTotal;\n        ctr._limit = pageSizeTotal;\n        dispatch(getAllAnnouncements(ctr));\n        dispatch(getInactiveAnnouncements(ctr));\n        closeModalOnClick();\n      } catch (e) {\n        notification.error({\n          message: 'Announcements  Updated Failed.'\n        });\n      }\n    } else {\n      let errorObj = _objectSpread({}, errors);\n\n      if (!Announcements) errorObj['Announcements'] = \"Please Enter Title\";\n      if (!position) errorObj['position'] = \"Please Enter Position\";\n      setErrors(errorObj);\n    }\n  }; // const searchOnChange = async (search) => {\n  //     debugger\n  //     setsearch(search);\n  //     if (search) {\n  //         setLoader(true);\n  //         let obj = { \"searchString\": search }\n  //             const result = await AnnouncementsRepository.SearchResult(obj);\n  //             let ctr = {};\n  //             ctr._start = 0;\n  //             ctr._limit = pageSizeTotal;\n  //             console.log(result, \"12345\")\n  //             if (tab === 'active') {\n  //                 dispatch(getAllAnnouncements(ctr));\n  //             } else {\n  //                 dispatch(getInactiveAnnouncements(ctr));\n  //             }\n  //             setsearch(search);\n  //             setCurrentPage(1);\n  //     } else {\n  //         let errorObj = { ...errors };\n  //         setErrors(errorObj);\n  //     }\n  // }\n\n\n  const searchOnChange = search => {\n    setLoader(true);\n    let ctr = {};\n    ctr._start = 0;\n    ctr._limit = pageSizeTotal;\n    ctr.search = search;\n\n    if (tab === 'active') {\n      dispatch(getAllAnnouncements(ctr));\n    } else {\n      dispatch(getInactiveAnnouncements(ctr));\n    }\n\n    setsearch(search);\n    setCurrentPage(1);\n  };\n\n  const pageSizeChange = async (page, pageSize) => {\n    setLoader(true);\n    let ctr = {};\n    ctr._start = page === 1 ? 0 : (page - 1) * pageSize;\n    ctr._limit = pageSize;\n\n    if (search) {\n      ctr.search = search;\n    }\n\n    if (tab === \"active\") {\n      dispatch(getAllAnnouncements(ctr));\n    } else {\n      dispatch(getInactiveAnnouncements(ctr));\n    }\n\n    setCurrentPage(page);\n    setPageSizeTotal(pageSize);\n  };\n\n  const changeTab = tab => {\n    setLoader(true);\n    let ctr = {};\n    ctr._start = 0;\n    ctr._limit = 10;\n\n    if (tab === \"active\") {\n      dispatch(getAllAnnouncements(ctr));\n    } else {\n      dispatch(getInactiveAnnouncements(ctr));\n    }\n\n    setCurrentPage(1);\n    setPageSizeTotal(10);\n    setSelectedHomeCatIds([]);\n    setSelectAll(false);\n    setAction('');\n    setsearch('');\n    setPosotionChangeCategorys([]);\n    setTab(tab);\n  };\n\n  const onSelectAll = value => {\n    let array = [];\n\n    if (value) {\n      if (tab === 'active') {\n        array = allAnnouncements.map(h => h.Announcements_id);\n      } else {\n        array = inactiveAnnouncements.map(h => h.Announcements_id);\n      }\n    }\n\n    setSelectedHomeCatIds(array);\n    setSelectAll(value);\n  };\n\n  const onSelectOne = id => {\n    let array = [...selectedHomeCatIds];\n    let array1 = tab === 'active' ? [...allAnnouncements] : [...inactiveAnnouncements];\n    let index = array.indexOf(id);\n\n    if (index >= 0) {\n      array.splice(index, 1);\n    } else {\n      array.push(id);\n    }\n\n    if (array.length === array1.length) {\n      setSelectAll(true);\n    } else {\n      setSelectAll(false);\n    }\n\n    setSelectedHomeCatIds(array);\n  };\n\n  const mainPositionOnChange = (id, position) => {\n    let array = [...posotionChangeCategorys];\n    const re = /^[0-9\\b]+$/; //rules\n\n    if (position === \"\" || re.test(position)) {\n      let index = array.findIndex(a => a.AnnouncementsId === id);\n\n      if (index >= 0) {\n        array[index]['position'] = position;\n      } else {\n        array.push({\n          AnnouncementsId: id,\n          position: position\n        });\n      }\n\n      setPosotionChangeCategorys(array);\n    }\n  };\n\n  const actionOnChange = action => {\n    setAction(action);\n  };\n\n  const goOnClick = async () => {\n    let selectedHomeCatIdsArr = [...selectedHomeCatIds];\n    let obj = {\n      AnnouncementsId: selectedHomeCatIdsArr\n    };\n\n    if (selectedHomeCatIdsArr && selectedHomeCatIdsArr.length > 0 && action) {\n      setLoader(true);\n\n      if (action === \"active\") {\n        obj['status'] = 'Y';\n        await AnnouncementsRepository.inactiveCategory(obj);\n        notification.success({\n          message: 'Announcements  Updated Successfully.'\n        });\n      }\n\n      if (action === \"inactive\") {\n        obj['status'] = 'N';\n        await AnnouncementsRepository.inactiveCategory(obj);\n        notification.success({\n          message: 'Announcements  Updated Successfully.'\n        });\n      }\n\n      if (action === \"delete\") {\n        await AnnouncementsRepository.deleteCategory(obj);\n        notification.success({\n          message: 'Announcements  Deleted Successfully.'\n        });\n      }\n\n      if (action === \"position\") {\n        let array = [...posotionChangeCategorys];\n        array = array.filter(a => selectedHomeCatIdsArr.indexOf(a.AnnouncementsId) >= 0);\n        await AnnouncementsRepository.changePosition({\n          values: array\n        });\n        notification.success({\n          message: 'Announcements  Updated Successfully.'\n        });\n      }\n\n      setSelectedHomeCatIds([]);\n      setPosotionChangeCategorys([]);\n      let ctr = {};\n      ctr._start = currentPage === 1 ? 0 : (currentPage - 1) * pageSizeTotal;\n      ctr._limit = pageSizeTotal;\n\n      if (search) {\n        ctr.search = search;\n      }\n\n      dispatch(getAllAnnouncements(ctr));\n      dispatch(getInactiveAnnouncements(ctr));\n    } else {\n      if (!action) {\n        Modal.error({\n          title: 'Please Select Action'\n        });\n      } else if (!selectedHomeCatIdsArr.length) {\n        Modal.error({\n          title: 'Please Select One Category'\n        });\n      }\n    }\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 9\n    }\n  }, __jsx(Spin, {\n    spinning: loader,\n    tip: 'Loading...',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 13\n    }\n  }, __jsx(HeaderDashboard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    className: \"dashboard-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"row no-gutters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    id: \"sidebar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 29\n    }\n  }, __jsx(Sidebar, {\n    page: 'Announcements',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 33\n    }\n  }))), __jsx(\"div\", {\n    className: \"col-md-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    className: \"content content-width\",\n    id: \"style-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 29\n    }\n  }, __jsx(Tabs, {\n    defaultActiveKey: tab,\n    onChange: changeTab,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 33\n    }\n  }, __jsx(TabPane, {\n    tab: `Active ${totalActiveCount}`,\n    key: \"active\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 37\n    }\n  }), __jsx(TabPane, {\n    tab: `Inactive ${totalInactiveCount}`,\n    key: \"inactive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 37\n    }\n  })), __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 33\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 37\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 41\n    }\n  }, __jsx(Select, {\n    onChange: actionOnChange,\n    placeholder: \"Select Action\",\n    className: \"ps-ant-dropdown\",\n    style: {\n      width: 200\n    },\n    value: action,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 45\n    }\n  }, tab === 'active' && __jsx(Option, {\n    value: \"inactive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 70\n    }\n  }, \"Inactive\"), tab === 'inactive' && __jsx(Option, {\n    value: \"active\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 72\n    }\n  }, \"Active\"), __jsx(Option, {\n    value: \"position\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 49\n    }\n  }, \"Position\"), __jsx(Option, {\n    value: \"delete\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 49\n    }\n  }, \"Delete\")))), __jsx(\"div\", {\n    className: \"col-md-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 37\n    }\n  }, __jsx(\"button\", {\n    onClick: goOnClick,\n    style: {\n      backgroundColor: '#cd4040',\n      width: 100,\n      height: 35,\n      color: '#fff',\n      border: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 41\n    }\n  }, \"Go\")), __jsx(\"div\", {\n    className: \"col-md-6 text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 37\n    }\n  }, __jsx(\"button\", {\n    onClick: addModalOnClick,\n    style: {\n      backgroundColor: '#80bc00',\n      width: 100,\n      height: 35,\n      color: '#fff',\n      border: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 41\n    }\n  }, __jsx(\"i\", {\n    className: \"fas fa-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 45\n    }\n  }), \" Add\"))), __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 33\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 37\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 41\n    }\n  }, __jsx(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    value: search,\n    placeholder: \"search\",\n    onChange: e => searchOnChange(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 45\n    }\n  })))), __jsx(\"div\", {\n    style: {\n      marginTop: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 33\n    }\n  }, __jsx(TableAnnouncements, {\n    allAnnouncements: tab === \"active\" ? allAnnouncements : inactiveAnnouncements,\n    editModalOnClick: editModalOnClick,\n    deleteOneAnnouncements: deleteOneAnnouncements,\n    onSelectAll: onSelectAll,\n    onSelectOne: onSelectOne,\n    selectAll: selectAll,\n    selectedHomeCatIds: selectedHomeCatIds,\n    mainPositionOnChange: mainPositionOnChange,\n    posotionChangeCategorys: posotionChangeCategorys,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 37\n    }\n  })), __jsx(\"div\", {\n    style: totalActiveCount > 0 ? {\n      margin: '10px auto',\n      textAlign: 'right'\n    } : {\n      display: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 33\n    }\n  }, __jsx(Pagination, {\n    total: tab === \"active\" ? totalActiveCount : totalInactiveCount,\n    defaultCurrent: 1,\n    current: currentPage,\n    defaultPageSize: 10,\n    pageSize: pageSizeTotal,\n    pageSizeOptions: ['10', '20', '30'],\n    onChange: pageSizeChange,\n    showSizeChanger: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 37\n    }\n  })))))), __jsx(Modal, {\n    visible: showModal,\n    okText: 'Save',\n    onCancel: closeModalOnClick,\n    title: selectedHomeCatId ? \"Edit Announcements \" : \"Add New Announcements \",\n    width: 800,\n    onOk: saveOnClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 17\n    }\n  }, __jsx(Spin, {\n    spinning: loader,\n    tip: 'Loading...',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 29\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 33\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 37\n    }\n  }, \"Announcements \", __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 58\n    }\n  }, \"*\")), __jsx(\"textarea\", {\n    style: {\n      height: '100px'\n    },\n    className: \"form-control\",\n    type: \"text\",\n    value: Announcements,\n    placeholder: \"\",\n    onChange: e => AnnouncementsOnChange(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 37\n    }\n  }, \" \"), errors['Announcements'] && __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 41\n    }\n  }, errors['Announcements'])), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 33\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 37\n    }\n  }, \"Position \", __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 53\n    }\n  }, \"*\")), __jsx(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    value: position,\n    placeholder: \"\",\n    onChange: e => positionOnChange(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 37\n    }\n  }), errors['position'] && __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 41\n    }\n  }, errors['position']))))))));\n};\n\nexport default Home;","map":{"version":3,"sources":["F:/newapollo/pages/announcements/view/index.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","Modal","Button","Checkbox","Spin","notification","Pagination","Tabs","Select","HeaderDashboard","Sidebar","TableAnnouncements","getAllAnnouncements","getInactiveAnnouncements","AnnouncementsRepository","Home","props","TabPane","Option","dispatch","auth","allAnnouncements","totalActiveCount","inactiveAnnouncements","totalInactiveCount","Announcements","showModal","setShowModal","position","setPosition","selectedHomeCatId","setSelectedHomeCatId","errors","setErrors","loader","setLoader","currentPage","setCurrentPage","pageSizeTotal","setPageSizeTotal","tab","setTab","selectAll","setSelectAll","selectedHomeCatIds","setSelectedHomeCatIds","action","setAction","setAnnouncements","search","setsearch","posotionChangeCategorys","setPosotionChangeCategorys","local","JSON","parse","localStorage","getItem","localAuth","isLoggedIn","window","location","href","ctr","_start","_limit","addModalOnClick","deleteOneAnnouncements","data","confirm","title","content","okText","onOk","deleteOneCategory","cancelText","obj","Announcements_id","deleteCategory","success","editModalOnClick","Announcements_pos","closeModalOnClick","AnnouncementsOnChange","errorObj","positionOnChange","re","test","saveOnClick","edit","save","saveAnnouncements","message","e","error","editAnnouncements","searchOnChange","pageSizeChange","page","pageSize","changeTab","onSelectAll","value","array","map","h","onSelectOne","id","array1","index","indexOf","splice","push","length","mainPositionOnChange","findIndex","a","AnnouncementsId","actionOnChange","goOnClick","selectedHomeCatIdsArr","inactiveCategory","filter","changePosition","values","width","backgroundColor","height","color","border","target","marginTop","margin","textAlign","display"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Modal, Button, Checkbox, Spin, notification, Pagination, Tabs, Select } from 'antd';\r\nimport HeaderDashboard from '../../../components/header/HeaderDashboard';\r\nimport Sidebar from '../../../components/sections/sidebar';\r\nimport TableAnnouncements from '../../../components/tables/Announcements';\r\nimport { getAllAnnouncements, getInactiveAnnouncements } from '../../../store/Announcements/action';\r\nimport AnnouncementsRepository from '../../../repositories/AnnouncementsRepository';\r\n\r\nconst Home = (props) => {\r\n\r\n    const { TabPane } = Tabs;\r\n    const { Option } = Select;\r\n    const dispatch = useDispatch();\r\n    const { auth } = useSelector(({ auth }) => auth);\r\n    const { allAnnouncements, totalActiveCount, inactiveAnnouncements, totalInactiveCount } = useSelector(({ Announcements }) => Announcements);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [position, setPosition] = useState('');\r\n    const [selectedHomeCatId, setSelectedHomeCatId] = useState('');\r\n    const [errors, setErrors] = useState({});\r\n    const [loader, setLoader] = useState(false);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [pageSizeTotal, setPageSizeTotal] = useState(10);\r\n    const [tab, setTab] = useState('active');\r\n    const [selectAll, setSelectAll] = useState(false);\r\n    const [selectedHomeCatIds, setSelectedHomeCatIds] = useState([]);\r\n    const [action, setAction] = useState('');\r\n    const [Announcements, setAnnouncements] = useState('');\r\n    const [search, setsearch] = useState('');\r\n    const [posotionChangeCategorys, setPosotionChangeCategorys] = useState([]);\r\n\r\n    useEffect(() => {\r\n        let local = JSON.parse(localStorage.getItem('persist:QuestionCloudAdmin'));\r\n        let localAuth = local && local.auth ? JSON.parse(local.auth) : {};\r\n        if (localAuth && !localAuth.isLoggedIn) {\r\n            window.location.href = \"/\";\r\n        }\r\n    }, [auth]);\r\n\r\n    useEffect(() => {\r\n        setLoader(true);\r\n        let ctr = {};\r\n        ctr._start = currentPage === 1 ? 0 : ((currentPage - 1) * pageSizeTotal);\r\n        ctr._limit = pageSizeTotal;\r\n        dispatch(getAllAnnouncements(ctr));\r\n        dispatch(getInactiveAnnouncements(ctr));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setLoader(false);\r\n    }, [allAnnouncements, inactiveAnnouncements]);\r\n\r\n    const addModalOnClick = async () => {\r\n        setLoader(true);\r\n        setPosition('');\r\n        setSelectedHomeCatId('');\r\n        setLoader(false);\r\n        setShowModal(true);\r\n    }\r\n\r\n    const deleteOneAnnouncements = (data) => {\r\n        Modal.confirm({\r\n            title: 'Confirm',\r\n            content: 'Do you want to delete this Announcements.',\r\n            okText: 'Yes',\r\n            onOk: () => deleteOneCategory(data),\r\n            cancelText: 'No',\r\n        });\r\n    }\r\n\r\n    const deleteOneCategory = async (data) => {\r\n        let obj = { \"AnnouncementsId\": [data.Announcements_id] };\r\n        await AnnouncementsRepository.deleteCategory(obj);\r\n        Modal.success({\r\n            title: 'Announcements Deleted Successfully.'\r\n        });\r\n        let ctr = {};\r\n        ctr._start = currentPage === 1 ? 0 : ((currentPage - 1) * pageSizeTotal);\r\n        ctr._limit = pageSizeTotal;\r\n        dispatch(getAllAnnouncements(ctr));\r\n        dispatch(getInactiveAnnouncements(ctr));\r\n    }\r\n\r\n    const editModalOnClick = async (data) => {\r\n        setLoader(true);\r\n        setPosition(data.Announcements_pos);\r\n        setSelectedHomeCatId(data.Announcements_id);\r\n        setAnnouncements(data.Announcements);\r\n        setLoader(false);\r\n        setShowModal(true);\r\n    }\r\n\r\n    const closeModalOnClick = () => {\r\n        setPosition('');\r\n        setSelectedHomeCatId('');\r\n        setAnnouncements('');\r\n        setErrors({});\r\n        setShowModal(false);\r\n    }\r\n\r\n    const AnnouncementsOnChange = (Announcements) => {\r\n        let errorObj = { ...errors };\r\n        errorObj['Announcements'] = '';\r\n        setAnnouncements(Announcements);\r\n        setErrors(errorObj);\r\n    }\r\n\r\n    const positionOnChange = (position) => {\r\n        const re = /^[0-9\\b]+$/; //rules\r\n        if (position === \"\" || re.test(position)) {\r\n            let errorObj = { ...errors };\r\n            errorObj['position'] = '';\r\n            setPosition(position);\r\n            setErrors(errorObj);\r\n        }\r\n    }\r\n    const saveOnClick = () => {\r\n        if (selectedHomeCatId) {\r\n            edit();\r\n        } else {\r\n            save();\r\n        }\r\n    }\r\n\r\n    const save = async () => {\r\n        if (position && Announcements) {\r\n            setLoader(true);\r\n            let obj = {\r\n                \"Announcements_pos\": position,\r\n                \"Announcements\": Announcements\r\n            }\r\n            try {\r\n                await AnnouncementsRepository.saveAnnouncements(obj);\r\n                notification.success({\r\n                    message: 'Announcements Added Successfully.'\r\n                })\r\n                let ctr = {};\r\n                ctr._start = currentPage === 1 ? 0 : ((currentPage - 1) * pageSizeTotal);\r\n                ctr._limit = pageSizeTotal;\r\n                ctr.search = search;\r\n               \r\n                dispatch(getAllAnnouncements(ctr));\r\n                dispatch(getInactiveAnnouncements(ctr));\r\n                closeModalOnClick();\r\n            } catch (e) {\r\n                notification.error({\r\n                    message: 'Announcements Added Failed.'\r\n                });\r\n            }\r\n        } else {\r\n            let errorObj = { ...errors };\r\n            if (!Announcements) errorObj['Announcements'] = \"Please Enter Title\";\r\n            if (!position) errorObj['position'] = \"Please Enter Position\";\r\n            setErrors(errorObj);\r\n        }\r\n    }\r\n\r\n    const edit = async () => {\r\n        if (position && selectedHomeCatId && Announcements) {\r\n            setLoader(true);\r\n            let obj = {\r\n                \"Announcements_id\": selectedHomeCatId,\r\n                \"Announcements_pos\": position,\r\n                \"Announcements\": Announcements\r\n            }\r\n            try {\r\n                await AnnouncementsRepository.editAnnouncements(selectedHomeCatId, obj);\r\n                notification.success({\r\n                    message: 'Announcements Updated Successfully.'\r\n                });\r\n                let ctr = {};\r\n                ctr._start = currentPage === 1 ? 0 : ((currentPage - 1) * pageSizeTotal);\r\n                ctr._limit = pageSizeTotal;\r\n                dispatch(getAllAnnouncements(ctr));\r\n                dispatch(getInactiveAnnouncements(ctr));\r\n                closeModalOnClick();\r\n            } catch (e) {\r\n                notification.error({\r\n                    message: 'Announcements  Updated Failed.'\r\n                });\r\n            }\r\n        } else {\r\n            let errorObj = { ...errors };\r\n            if (!Announcements) errorObj['Announcements'] = \"Please Enter Title\";\r\n            if (!position) errorObj['position'] = \"Please Enter Position\";\r\n            setErrors(errorObj);\r\n        }\r\n    }\r\n    // const searchOnChange = async (search) => {\r\n    //     debugger\r\n    //     setsearch(search);\r\n    //     if (search) {\r\n    //         setLoader(true);\r\n    //         let obj = { \"searchString\": search }\r\n    //             const result = await AnnouncementsRepository.SearchResult(obj);\r\n    //             let ctr = {};\r\n    //             ctr._start = 0;\r\n    //             ctr._limit = pageSizeTotal;\r\n    //             console.log(result, \"12345\")\r\n    //             if (tab === 'active') {\r\n    //                 dispatch(getAllAnnouncements(ctr));\r\n    //             } else {\r\n    //                 dispatch(getInactiveAnnouncements(ctr));\r\n    //             }\r\n    //             setsearch(search);\r\n    //             setCurrentPage(1);\r\n    //     } else {\r\n    //         let errorObj = { ...errors };\r\n    //         setErrors(errorObj);\r\n    //     }\r\n    // }\r\n    const searchOnChange = (search) => {\r\n      \r\n        setLoader(true);\r\n        let ctr = {};\r\n        ctr._start = 0;\r\n        ctr._limit = pageSizeTotal;\r\n        ctr.search = search;\r\n        if (tab === 'active') {\r\n            dispatch(getAllAnnouncements(ctr));\r\n        } else {\r\n            dispatch(getInactiveAnnouncements(ctr));\r\n        }\r\n        setsearch(search);\r\n        setCurrentPage(1);\r\n    }\r\n   \r\n    const pageSizeChange = async (page, pageSize) => {\r\n        setLoader(true);\r\n        let ctr = {};\r\n        ctr._start = page === 1 ? 0 : ((page - 1) * pageSize);\r\n        ctr._limit = pageSize;\r\n\r\n        if (search) {\r\n            ctr.search = search;\r\n        }\r\n        if (tab === \"active\") {\r\n            dispatch(getAllAnnouncements(ctr));\r\n        } else {\r\n            dispatch(getInactiveAnnouncements(ctr));\r\n        }\r\n        setCurrentPage(page);\r\n        setPageSizeTotal(pageSize);\r\n    }\r\n\r\n    const changeTab = (tab) => {\r\n        setLoader(true);\r\n        let ctr = {};\r\n        ctr._start = 0;\r\n        ctr._limit = 10;\r\n        if (tab === \"active\") {\r\n            dispatch(getAllAnnouncements(ctr));\r\n        } else {\r\n            dispatch(getInactiveAnnouncements(ctr));\r\n        }\r\n        setCurrentPage(1);\r\n        setPageSizeTotal(10);\r\n        setSelectedHomeCatIds([]);\r\n        setSelectAll(false);\r\n        setAction('');\r\n        setsearch('');\r\n        setPosotionChangeCategorys([]);\r\n        setTab(tab);\r\n    }\r\n\r\n    const onSelectAll = (value) => {\r\n        let array = [];\r\n        if (value) {\r\n            if (tab === 'active') {\r\n                array = allAnnouncements.map(h => h.Announcements_id);\r\n            } else {\r\n                array = inactiveAnnouncements.map(h => h.Announcements_id);\r\n            }\r\n        }\r\n        setSelectedHomeCatIds(array);\r\n        setSelectAll(value);\r\n    }\r\n\r\n    const onSelectOne = (id) => {\r\n        let array = [...selectedHomeCatIds];\r\n        let array1 = tab === 'active' ? [...allAnnouncements] : [...inactiveAnnouncements];\r\n        let index = array.indexOf(id);\r\n        if (index >= 0) {\r\n            array.splice(index, 1);\r\n        } else {\r\n            array.push(id);\r\n        }\r\n        if (array.length === array1.length) {\r\n            setSelectAll(true);\r\n        } else {\r\n            setSelectAll(false);\r\n        }\r\n        setSelectedHomeCatIds(array);\r\n    }\r\n\r\n    const mainPositionOnChange = (id, position) => {\r\n        let array = [...posotionChangeCategorys];\r\n        const re = /^[0-9\\b]+$/; //rules\r\n        if (position === \"\" || re.test(position)) {\r\n            let index = array.findIndex(a => a.AnnouncementsId === id);\r\n            if (index >= 0) {\r\n                array[index]['position'] = position;\r\n            } else {\r\n                array.push({\r\n                    AnnouncementsId: id,\r\n                    position: position\r\n                });\r\n            }\r\n            setPosotionChangeCategorys(array);\r\n        }\r\n    }\r\n\r\n    const actionOnChange = (action) => {\r\n        setAction(action);\r\n    }\r\n\r\n    const goOnClick = async () => {\r\n        let selectedHomeCatIdsArr = [...selectedHomeCatIds];\r\n        let obj = {\r\n            AnnouncementsId: selectedHomeCatIdsArr\r\n        };\r\n        if (selectedHomeCatIdsArr && selectedHomeCatIdsArr.length > 0 && action) {\r\n            setLoader(true);\r\n            if (action === \"active\") {\r\n                obj['status'] = 'Y';\r\n                await AnnouncementsRepository.inactiveCategory(obj);\r\n                notification.success({\r\n                    message: 'Announcements  Updated Successfully.'\r\n                });\r\n            }\r\n            if (action === \"inactive\") {\r\n                obj['status'] = 'N';\r\n                await AnnouncementsRepository.inactiveCategory(obj);\r\n                notification.success({\r\n                    message: 'Announcements  Updated Successfully.'\r\n                });\r\n            }\r\n            if (action === \"delete\") {\r\n                await AnnouncementsRepository.deleteCategory(obj);\r\n                notification.success({\r\n                    message: 'Announcements  Deleted Successfully.'\r\n                });\r\n            }\r\n            if (action === \"position\") {\r\n                let array = [...posotionChangeCategorys];\r\n                array = array.filter(a => selectedHomeCatIdsArr.indexOf(a.AnnouncementsId) >= 0);\r\n                await AnnouncementsRepository.changePosition({ values: array });\r\n                notification.success({\r\n                    message: 'Announcements  Updated Successfully.'\r\n                });\r\n            }\r\n            setSelectedHomeCatIds([]);\r\n            setPosotionChangeCategorys([]);\r\n            let ctr = {};\r\n            ctr._start = currentPage === 1 ? 0 : ((currentPage - 1) * pageSizeTotal);\r\n            ctr._limit = pageSizeTotal;\r\n\r\n            if (search) {\r\n                ctr.search = search;\r\n            }\r\n            dispatch(getAllAnnouncements(ctr));\r\n            dispatch(getInactiveAnnouncements(ctr));\r\n        } else {\r\n            if (!action) {\r\n                Modal.error({\r\n                    title: 'Please Select Action'\r\n                });\r\n            } else if (!selectedHomeCatIdsArr.length) {\r\n                Modal.error({\r\n                    title: 'Please Select One Category'\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Spin spinning={loader} tip={'Loading...'}>\r\n                <HeaderDashboard />\r\n                <div className=\"dashboard-container\">\r\n                    <div className=\"row no-gutters\">\r\n                        <div className=\"col-md-2\">\r\n                            <div id=\"sidebar\">\r\n                                <Sidebar page={'Announcements'} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-10\">\r\n                            <div className=\"content content-width\" id=\"style-2\">\r\n                                <Tabs defaultActiveKey={tab} onChange={changeTab}>\r\n                                    <TabPane tab={`Active ${totalActiveCount}`} key=\"active\">\r\n                                    </TabPane>\r\n                                    <TabPane tab={`Inactive ${totalInactiveCount}`} key=\"inactive\">\r\n                                    </TabPane>\r\n                                </Tabs>\r\n                                <div className='row'>\r\n                                    <div className=\"col-md-4\">\r\n                                        <div className=\"form-group\">\r\n                                            <Select\r\n                                                onChange={actionOnChange}\r\n                                                placeholder=\"Select Action\"\r\n                                                className=\"ps-ant-dropdown\"\r\n                                                style={{ width: 200 }}\r\n                                                value={action}\r\n                                            >\r\n                                                {tab === 'active' && <Option value=\"inactive\">Inactive</Option>}\r\n                                                {tab === 'inactive' && <Option value=\"active\">Active</Option>}\r\n                                                <Option value=\"position\">Position</Option>\r\n                                                <Option value=\"delete\">Delete</Option>\r\n                                            </Select>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-2\">\r\n                                        <button onClick={goOnClick} style={{ backgroundColor: '#cd4040', width: 100, height: 35, color: '#fff', border: 'none' }}>\r\n                                            Go\r\n                                        </button>\r\n                                    </div>\r\n                                    <div className=\"col-md-6 text-right\">\r\n                                        <button onClick={addModalOnClick} style={{ backgroundColor: '#80bc00', width: 100, height: 35, color: '#fff', border: 'none' }}>\r\n                                            <i className=\"fas fa-plus\" /> Add\r\n                                        </button>\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div className='row'>\r\n                                    <div className=\"col-md-6\">\r\n                                        <div className=\"form-group \">\r\n                                            <input\r\n                                                className=\"form-control\"\r\n                                                type=\"text\"\r\n                                                value={search}\r\n                                                placeholder=\"search\"\r\n                                                onChange={(e) => searchOnChange(e.target.value)}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div style={{ marginTop: 20 }}>\r\n                                    <TableAnnouncements\r\n                                        allAnnouncements={tab === \"active\" ? allAnnouncements : inactiveAnnouncements}\r\n                                        editModalOnClick={editModalOnClick}\r\n                                        deleteOneAnnouncements={deleteOneAnnouncements}\r\n                                        onSelectAll={onSelectAll}\r\n                                        onSelectOne={onSelectOne}\r\n                                        selectAll={selectAll}\r\n                                        selectedHomeCatIds={selectedHomeCatIds}\r\n                                        mainPositionOnChange={mainPositionOnChange}\r\n                                        posotionChangeCategorys={posotionChangeCategorys}\r\n                                    />\r\n                                </div>\r\n                                <div style={totalActiveCount > 0 ? { margin: '10px auto', textAlign: 'right' } : { display: 'none' }}>\r\n                                    <Pagination\r\n                                        total={tab === \"active\" ? totalActiveCount : totalInactiveCount}\r\n                                        defaultCurrent={1}\r\n                                        current={currentPage}\r\n                                        defaultPageSize={10}\r\n                                        pageSize={pageSizeTotal}\r\n                                        pageSizeOptions={['10', '20', '30']}\r\n                                        onChange={pageSizeChange}\r\n                                        showSizeChanger={true}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Modal\r\n                    visible={showModal}\r\n                    okText={'Save'}\r\n                    onCancel={closeModalOnClick}\r\n                    title={selectedHomeCatId ? \"Edit Announcements \" : \"Add New Announcements \"}\r\n                    width={800}\r\n                    onOk={saveOnClick}\r\n                >\r\n                    <Spin spinning={loader} tip={'Loading...'}>\r\n                        <div className='row'>\r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Announcements <span style={{ color: 'red' }}>*</span></label>\r\n                                    <textarea style={{ height: '100px' }}\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        value={Announcements}\r\n                                        placeholder=\"\"\r\n                                        onChange={(e) => AnnouncementsOnChange(e.target.value)}\r\n                                    > </textarea>\r\n                                    {errors['Announcements'] &&\r\n                                        <span style={{ color: 'red' }}>{errors['Announcements']}</span>\r\n                                    }\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Position <span style={{ color: 'red' }}>*</span></label>\r\n                                    <input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        value={position}\r\n                                        placeholder=\"\"\r\n                                        onChange={(e) => positionOnChange(e.target.value)}\r\n                                    />\r\n                                    {errors['position'] &&\r\n                                        <span style={{ color: 'red' }}>{errors['position']}</span>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </Spin>\r\n                </Modal>\r\n            </Spin>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}