{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport Repository, { apiUrl } from './Repository';\n\nvar AuthRepository = /*#__PURE__*/function () {\n  function AuthRepository(callback) {\n    _classCallCheck(this, AuthRepository);\n\n    _defineProperty(this, \"apiEndpoint\", \"\".concat(apiUrl, \"/coupon\"));\n\n    this.callback = callback;\n  } //     // getAlldashboardCategory\n  //     async getAllCoupon(status) {\n  //         console.log(\"1234\",payload)\n  //         const reponse = await Repository.get(`${apiUrl}/coupon/status/${'Y'}?_start=${payload._start}&_limit=${payload._limit}`)\n  //             .then(response => {\n  //                 return response.data;\n  //             })\n  //             .catch(error => ({ error: JSON.stringify(error) }));\n  //         return reponse;\n  //     }\n  //      //getInactivedashboardCategory\n  //     async getInactiveCoupon(status) {\n  //         const reponse = await Repository.get(`${apiUrl}/coupon/status/${'N'}?_start=${payload._start}&_limit=${payload._limit}`)\n  //             .then(response => {\n  //                 return response.data;\n  //             })\n  //             .catch(error => ({ error: JSON.stringify(error) }));\n  //         return reponse;\n  //     }\n  //     //savedashboardCategory\n  //     async saveCoupon(formdata) {\n  //         console.log(\"12345689\")\n  //         const reponse = await Repository.post(`${apiUrl}/coupon/`, formdata)\n  //             .then(response => {\n  //                 return response.data;\n  //             })\n  //             .catch(error => ({ error: JSON.stringify(error) }));\n  //         return reponse;\n  //     }\n  //     // editdashboardCategory\n  //     async updateCoupon(categoryId, formdata) {\n  //         console.log(\"12345689\")\n  //         const reponse = await Repository.put(`${apiUrl}/coupon/id/${categoryId}`, formdata)\n  //             .then(response => {\n  //                 return response.data;\n  //             })\n  //             .catch(error => ({ error: JSON.stringify(error) }));\n  //         return reponse;\n  //     }\n  //     // inactiveCategory\n  //     async changeStatus(data) {\n  //         const reponse = await Repository.put(`${apiUrl}/coupon/status`, data)\n  //             .then(response => {\n  //                 return response.data;\n  //             })\n  //             .catch(error => ({ error: JSON.stringify(error) }));\n  //         return reponse;\n  //     }\n  //    // deleteCategory\n  //     async deleteCoupon(data) {\n  //         const reponse = await Repository.delete(`${apiUrl}/coupon/`, {\n  //             headers: {\n  //                 \"Content-Type\": \"application/json\"\n  //             },\n  //             data: data\n  //         }).then(response => {\n  //             return response.data;\n  //         }).catch(error => ({ error: JSON.stringify(error) }));;\n  //         return reponse;\n  //     }\n  //   //getAllCoupon\n  //     async getAlldurations(payload) {\n  //         console.log(\"1234\",payload)\n  //         const reponse = await Repository.get(`${apiUrl}/coupon/duration/?_start=${payload._start}&_limit=${payload._limit}`)\n  //             .then(response => {\n  //                 return response.data;\n  //             })\n  //             .catch(error => ({ error: JSON.stringify(error) }));\n  //         return reponse;\n  //     }\n\n\n  _createClass(AuthRepository, [{\n    key: \"getAllCoupon\",\n    value: function () {\n      var _getAllCoupon = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(status) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return http.get(apiEndpoint + '/status/' + status);\n\n              case 2:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getAllCoupon(_x) {\n        return _getAllCoupon.apply(this, arguments);\n      }\n\n      return getAllCoupon;\n    }()\n  }, {\n    key: \"saveCoupon\",\n    value: function () {\n      var _saveCoupon = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(data) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return http.post(apiEndpoint + '/', data);\n\n              case 2:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function saveCoupon(_x2) {\n        return _saveCoupon.apply(this, arguments);\n      }\n\n      return saveCoupon;\n    }()\n  }, {\n    key: \"updateCoupon\",\n    value: function () {\n      var _updateCoupon = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(id, data) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                return _context3.abrupt(\"return\", http.put(apiEndpoint + '/id/' + id, data));\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function updateCoupon(_x3, _x4) {\n        return _updateCoupon.apply(this, arguments);\n      }\n\n      return updateCoupon;\n    }()\n  }, {\n    key: \"changeStatus\",\n    value: function () {\n      var _changeStatus = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(idArr) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                return _context4.abrupt(\"return\", http.put(apiEndpoint + '/status', idArr));\n\n              case 1:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function changeStatus(_x5) {\n        return _changeStatus.apply(this, arguments);\n      }\n\n      return changeStatus;\n    }()\n  }, {\n    key: \"getAlldurations\",\n    value: function () {\n      var _getAlldurations = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                return _context5.abrupt(\"return\", http.get(apiEndpoint + '/duration'));\n\n              case 1:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function getAlldurations() {\n        return _getAlldurations.apply(this, arguments);\n      }\n\n      return getAlldurations;\n    }()\n  }]);\n\n  return AuthRepository;\n}();\n\nexport default new AuthRepository();","map":{"version":3,"sources":["D:/Question_cloud/question_cloud_admin_web_new/repositories/CouponRepository.js"],"names":["Repository","apiUrl","AuthRepository","callback","status","http","get","apiEndpoint","data","post","id","put","idArr"],"mappings":";;;;;AAGC,OAAOA,UAAP,IAAqBC,MAArB,QAAmC,cAAnC;;IAEKC,c;AACF,0BAAYC,QAAZ,EAAsB;AAAA;;AAAA,mDA0ERF,MA1EQ;;AAClB,SAAKE,QAAL,GAAgBA,QAAhB;AACH,G,CACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;mFAGA,iBAAmBC,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACkBC,IAAI,CAACC,GAAL,CAASC,WAAW,GAAG,UAAd,GAA2BH,MAApC,CADlB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;iFAGA,kBAAiBI,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACmBH,IAAI,CAACI,IAAL,CAAUF,WAAW,GAAG,GAAxB,EAA6BC,IAA7B,CADnB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;mFAIA,kBAAmBE,EAAnB,EAAuBF,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,kDACWH,IAAI,CAACM,GAAL,CAASJ,WAAW,GAAG,MAAd,GAAuBG,EAAhC,EAAoCF,IAApC,CADX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;mFAIA,kBAAmBI,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,kDACWP,IAAI,CAACM,GAAL,CAASJ,WAAW,GAAG,SAAvB,EAAkCK,KAAlC,CADX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;sFAIA;AAAA;AAAA;AAAA;AAAA;AAAA,kDACWP,IAAI,CAACC,GAAL,CAASC,WAAW,GAAG,WAAvB,CADX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;;;AAMA,eAAe,IAAIL,cAAJ,EAAf","sourcesContent":["\r\n\r\n\r\n import Repository, { apiUrl } from './Repository';\r\n\r\nclass AuthRepository {\r\n    constructor(callback) {\r\n        this.callback = callback;\r\n    }\r\n//     // getAlldashboardCategory\r\n//     async getAllCoupon(status) {\r\n//         console.log(\"1234\",payload)\r\n//         const reponse = await Repository.get(`${apiUrl}/coupon/status/${'Y'}?_start=${payload._start}&_limit=${payload._limit}`)\r\n//             .then(response => {\r\n//                 return response.data;\r\n//             })\r\n//             .catch(error => ({ error: JSON.stringify(error) }));\r\n//         return reponse;\r\n//     }\r\n//      //getInactivedashboardCategory\r\n//     async getInactiveCoupon(status) {\r\n//         const reponse = await Repository.get(`${apiUrl}/coupon/status/${'N'}?_start=${payload._start}&_limit=${payload._limit}`)\r\n//             .then(response => {\r\n//                 return response.data;\r\n//             })\r\n        \r\n//             .catch(error => ({ error: JSON.stringify(error) }));\r\n//         return reponse;\r\n//     }\r\n//     //savedashboardCategory\r\n//     async saveCoupon(formdata) {\r\n//         console.log(\"12345689\")\r\n//         const reponse = await Repository.post(`${apiUrl}/coupon/`, formdata)\r\n//             .then(response => {\r\n//                 return response.data;\r\n//             })\r\n//             .catch(error => ({ error: JSON.stringify(error) }));\r\n//         return reponse;\r\n//     }\r\n//     // editdashboardCategory\r\n//     async updateCoupon(categoryId, formdata) {\r\n//         console.log(\"12345689\")\r\n//         const reponse = await Repository.put(`${apiUrl}/coupon/id/${categoryId}`, formdata)\r\n//             .then(response => {\r\n//                 return response.data;\r\n//             })\r\n//             .catch(error => ({ error: JSON.stringify(error) }));\r\n//         return reponse;\r\n//     }\r\n//     // inactiveCategory\r\n//     async changeStatus(data) {\r\n//         const reponse = await Repository.put(`${apiUrl}/coupon/status`, data)\r\n//             .then(response => {\r\n//                 return response.data;\r\n//             })\r\n//             .catch(error => ({ error: JSON.stringify(error) }));\r\n//         return reponse;\r\n//     }\r\n//    // deleteCategory\r\n//     async deleteCoupon(data) {\r\n//         const reponse = await Repository.delete(`${apiUrl}/coupon/`, {\r\n//             headers: {\r\n//                 \"Content-Type\": \"application/json\"\r\n//             },\r\n//             data: data\r\n//         }).then(response => {\r\n//             return response.data;\r\n//         }).catch(error => ({ error: JSON.stringify(error) }));;\r\n//         return reponse;\r\n//     }\r\n//   //getAllCoupon\r\n//     async getAlldurations(payload) {\r\n//         console.log(\"1234\",payload)\r\n//         const reponse = await Repository.get(`${apiUrl}/coupon/duration/?_start=${payload._start}&_limit=${payload._limit}`)\r\n//             .then(response => {\r\n//                 return response.data;\r\n//             })\r\n//             .catch(error => ({ error: JSON.stringify(error) }));\r\n//         return reponse;\r\n//     }\r\n apiEndpoint = `${apiUrl}/coupon`;\r\n\r\nasync getAllCoupon(status) {\r\n    return  await http.get(apiEndpoint + '/status/' + status);\r\n}\r\nasync saveCoupon(data) {\r\n    return  await  http.post(apiEndpoint + '/', data);\r\n}\r\n\r\nasync updateCoupon(id, data) {\r\n    return http.put(apiEndpoint + '/id/' + id, data);\r\n}\r\n\r\nasync changeStatus(idArr) {\r\n    return http.put(apiEndpoint + '/status', idArr);\r\n}\r\n\r\nasync getAlldurations() {\r\n    return http.get(apiEndpoint + '/duration');\r\n}\r\n\r\n}\r\n\r\nexport default new AuthRepository();\r\n"]},"metadata":{},"sourceType":"module"}