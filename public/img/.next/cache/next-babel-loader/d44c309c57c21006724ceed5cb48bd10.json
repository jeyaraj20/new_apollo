{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(getAllExaminationCalendaSaga),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(getInactiveExaminationCalendaSaga),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport { all, put, call, takeEvery } from 'redux-saga/effects';\nimport { actionTypes, getActiveMainSuccess, getInactiveMainSuccess } from './action';\nimport ExaminationCalendarRepository from '../../repositories/ExaminationCalendarRepository';\n\nfunction getAllExaminationCalendaSaga(_ref) {\n  var payload, data;\n  return _regeneratorRuntime.wrap(function getAllExaminationCalendaSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          payload = _ref.payload;\n          _context.prev = 1;\n          _context.next = 4;\n          return call(ExaminationCalendarRepository.getActiveMain, payload);\n\n        case 4:\n          data = _context.sent;\n          _context.next = 7;\n          return put(getActiveMainSuccess(data));\n\n        case 7:\n          _context.next = 13;\n          break;\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](1);\n          _context.next = 13;\n          return put(getActiveMainSuccess(null));\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[1, 9]]);\n}\n\nfunction getInactiveExaminationCalendaSaga(_ref2) {\n  var payload, data;\n  return _regeneratorRuntime.wrap(function getInactiveExaminationCalendaSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          payload = _ref2.payload;\n          _context2.prev = 1;\n          _context2.next = 4;\n          return call(ExaminationCalendarRepository.getInactiveMain, payload);\n\n        case 4:\n          data = _context2.sent;\n          _context2.next = 7;\n          return put(getInactiveMainSuccess(data));\n\n        case 7:\n          _context2.next = 13;\n          break;\n\n        case 9:\n          _context2.prev = 9;\n          _context2.t0 = _context2[\"catch\"](1);\n          _context2.next = 13;\n          return put(getInactiveMainSuccess(null));\n\n        case 13:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[1, 9]]);\n}\n\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return all([takeEvery(actionTypes.GET_ALL_EXAMINATIONCALENDAR_REQUEST, getAllExaminationCalendaSaga)]);\n\n        case 2:\n          _context3.next = 4;\n          return all([takeEvery(actionTypes.GET_INACTIVE_EXAMINATIONCALENDAR_REQUEST, getInactiveExaminationCalendaSaga)]);\n\n        case 4:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}","map":{"version":3,"sources":["D:/Question_cloud/question_cloud_admin_web_new/store/ExaminationCalendar/saga.js"],"names":["getAllExaminationCalendaSaga","getInactiveExaminationCalendaSaga","rootSaga","all","put","call","takeEvery","actionTypes","getActiveMainSuccess","getInactiveMainSuccess","ExaminationCalendarRepository","payload","getActiveMain","data","getInactiveMain","GET_ALL_EXAMINATIONCALENDAR_REQUEST","GET_INACTIVE_EXAMINATIONCALENDAR_REQUEST"],"mappings":";;oDAMUA,4B;qDASAC,iC;qDASeC,Q;;AAxBzB,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,SAAzB,QAA0C,oBAA1C;AAEA,SAASC,WAAT,EAAsBC,oBAAtB,EAA4CC,sBAA5C,QAA0E,UAA1E;AAEA,OAAOC,6BAAP,MAA0C,kDAA1C;;AAEA,SAAUV,4BAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyCW,UAAAA,OAAzC,QAAyCA,OAAzC;AAAA;AAAA;AAEqB,iBAAMN,IAAI,CAACK,6BAA6B,CAACE,aAA/B,EAA8CD,OAA9C,CAAV;;AAFrB;AAEcE,UAAAA,IAFd;AAAA;AAGQ,iBAAMT,GAAG,CAACI,oBAAoB,CAACK,IAAD,CAArB,CAAT;;AAHR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAKQ,iBAAMT,GAAG,CAACI,oBAAoB,CAAC,IAAD,CAArB,CAAT;;AALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASA,SAAUP,iCAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8CU,UAAAA,OAA9C,SAA8CA,OAA9C;AAAA;AAAA;AAEqB,iBAAMN,IAAI,CAACK,6BAA6B,CAACI,eAA/B,EAAgDH,OAAhD,CAAV;;AAFrB;AAEcE,UAAAA,IAFd;AAAA;AAGQ,iBAAMT,GAAG,CAACK,sBAAsB,CAACI,IAAD,CAAvB,CAAT;;AAHR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAKQ,iBAAMT,GAAG,CAACK,sBAAsB,CAAC,IAAD,CAAvB,CAAT;;AALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASA,eAAe,SAAUP,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACX,iBAAMC,GAAG,CAAC,CAACG,SAAS,CAACC,WAAW,CAACQ,mCAAb,EAAkDf,4BAAlD,CAAV,CAAD,CAAT;;AADW;AAAA;AAEX,iBAAMG,GAAG,CAAC,CAACG,SAAS,CAACC,WAAW,CAACS,wCAAb,EAAuDf,iCAAvD,CAAV,CAAD,CAAT;;AAFW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { all, put, call, takeEvery } from 'redux-saga/effects';\r\n\r\nimport { actionTypes, getActiveMainSuccess, getInactiveMainSuccess } from './action';\r\n\r\nimport ExaminationCalendarRepository from '../../repositories/ExaminationCalendarRepository';\r\n\r\nfunction* getAllExaminationCalendaSaga({ payload }) {\r\n    try {\r\n        const data = yield call(ExaminationCalendarRepository.getActiveMain, payload);\r\n        yield put(getActiveMainSuccess(data));\r\n    } catch (err) {\r\n        yield put(getActiveMainSuccess(null));\r\n    }\r\n}\r\n\r\nfunction* getInactiveExaminationCalendaSaga({ payload }) {\r\n    try {\r\n        const data = yield call(ExaminationCalendarRepository.getInactiveMain, payload);\r\n        yield put(getInactiveMainSuccess(data));\r\n    } catch (err) {\r\n        yield put(getInactiveMainSuccess(null));\r\n    }\r\n}\r\n\r\nexport default function* rootSaga() {\r\n    yield all([takeEvery(actionTypes.GET_ALL_EXAMINATIONCALENDAR_REQUEST, getAllExaminationCalendaSaga)]);\r\n    yield all([takeEvery(actionTypes.GET_INACTIVE_EXAMINATIONCALENDAR_REQUEST, getInactiveExaminationCalendaSaga)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}