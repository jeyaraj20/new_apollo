{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport Repository, { apiUrl } from './Repository';\n\nvar AuthRepository = /*#__PURE__*/function () {\n  function AuthRepository(callback) {\n    _classCallCheck(this, AuthRepository);\n\n    this.callback = callback;\n  }\n\n  _createClass(AuthRepository, [{\n    key: \"getActiveExams\",\n    value: function () {\n      var _getActiveExams = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(payload) {\n        var reponse;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return Repository.get(\"\".concat(apiUrl, \"/examinationCalendar/sub?_start=\").concat(payload._start, \"&_limit=\").concat(payload._limit)).then(function (response) {\n                  return response.data;\n                })[\"catch\"](function (error) {\n                  return {\n                    error: JSON.stringify(error)\n                  };\n                });\n\n              case 2:\n                reponse = _context.sent;\n                return _context.abrupt(\"return\", reponse);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getActiveExams(_x) {\n        return _getActiveExams.apply(this, arguments);\n      }\n\n      return getActiveExams;\n    }()\n  }, {\n    key: \"getInactiveExams\",\n    value: function () {\n      var _getInactiveExams = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(payload) {\n        var reponse;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return Repository.get(\"\".concat(apiUrl, \"/examinationCalendar/sub?_start=\").concat(payload._start, \"&_limit=\").concat(payload._limit)).then(function (response) {\n                  return response.data;\n                })[\"catch\"](function (error) {\n                  return {\n                    error: JSON.stringify(error)\n                  };\n                });\n\n              case 2:\n                reponse = _context2.sent;\n                return _context2.abrupt(\"return\", reponse);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function getInactiveExams(_x2) {\n        return _getInactiveExams.apply(this, arguments);\n      }\n\n      return getInactiveExams;\n    }()\n  }, {\n    key: \"getActiveMain\",\n    value: function () {\n      var _getActiveMain = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(payload) {\n        var reponse;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return Repository.get(\"\".concat(apiUrl, \"/examinationCalendar/main?_start=\").concat(payload._start, \"&_limit=\").concat(payload._limit)).then(function (response) {\n                  return response.data;\n                })[\"catch\"](function (error) {\n                  return {\n                    error: JSON.stringify(error)\n                  };\n                });\n\n              case 2:\n                reponse = _context3.sent;\n                return _context3.abrupt(\"return\", reponse);\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function getActiveMain(_x3) {\n        return _getActiveMain.apply(this, arguments);\n      }\n\n      return getActiveMain;\n    }()\n  }, {\n    key: \"getInactiveMain\",\n    value: function () {\n      var _getInactiveMain = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(payload) {\n        var reponse;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return Repository.get(\"\".concat(apiUrl, \"/examinationCalendar/main?_start=\").concat(payload._start, \"&_limit=\").concat(payload._limit)).then(function (response) {\n                  return response.data;\n                })[\"catch\"](function (error) {\n                  return {\n                    error: JSON.stringify(error)\n                  };\n                });\n\n              case 2:\n                reponse = _context4.sent;\n                return _context4.abrupt(\"return\", reponse);\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function getInactiveMain(_x4) {\n        return _getInactiveMain.apply(this, arguments);\n      }\n\n      return getInactiveMain;\n    }()\n  }, {\n    key: \"savedashboardCategory\",\n    value: function () {\n      var _savedashboardCategory = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(formdata) {\n        var reponse;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                console.log(\"12345689\");\n                _context5.next = 3;\n                return Repository.post(\"\".concat(apiUrl, \"/dashboardCategory/\"), formdata).then(function (response) {\n                  return response.data;\n                })[\"catch\"](function (error) {\n                  return {\n                    error: JSON.stringify(error)\n                  };\n                });\n\n              case 3:\n                reponse = _context5.sent;\n                return _context5.abrupt(\"return\", reponse);\n\n              case 5:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function savedashboardCategory(_x5) {\n        return _savedashboardCategory.apply(this, arguments);\n      }\n\n      return savedashboardCategory;\n    }()\n  }]);\n\n  return AuthRepository;\n}();\n\nexport default new AuthRepository();","map":{"version":3,"sources":["D:/Question_cloud/question_cloud_admin_web_new/repositories/ExaminationCalendarRepository.js"],"names":["Repository","apiUrl","AuthRepository","callback","payload","get","_start","_limit","then","response","data","error","JSON","stringify","reponse","formdata","console","log","post"],"mappings":"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","sourcesContent":["import Repository, { apiUrl } from './Repository';\r\n\r\nclass AuthRepository {\r\n    constructor(callback) {\r\n        this.callback = callback;\r\n    }\r\n    async getActiveExams(payload) {\r\n        const reponse = await Repository.get(`${apiUrl}/examinationCalendar/sub?_start=${payload._start}&_limit=${payload._limit}`)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n            .catch(error => ({ error: JSON.stringify(error) }));\r\n        return reponse;\r\n    }\r\n    async getInactiveExams(payload) {\r\n        const reponse = await Repository.get(`${apiUrl}/examinationCalendar/sub?_start=${payload._start}&_limit=${payload._limit}`)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n            .catch(error => ({ error: JSON.stringify(error) }));\r\n        return reponse;\r\n    }\r\n    async getActiveMain(payload) {\r\n        const reponse = await Repository.get(`${apiUrl}/examinationCalendar/main?_start=${payload._start}&_limit=${payload._limit}`)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n            .catch(error => ({ error: JSON.stringify(error) }));\r\n        return reponse;\r\n    }\r\n    async getInactiveMain(payload) {\r\n        const reponse = await Repository.get(`${apiUrl}/examinationCalendar/main?_start=${payload._start}&_limit=${payload._limit}`)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n\r\n            .catch(error => ({ error: JSON.stringify(error) }));\r\n        return reponse;\r\n    }\r\n    async savedashboardCategory(formdata) {\r\n        console.log(\"12345689\")\r\n        const reponse = await Repository.post(`${apiUrl}/dashboardCategory/`, formdata)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n            .catch(error => ({ error: JSON.stringify(error) }));\r\n        return reponse;\r\n    }\r\n}\r\n\r\nexport default new AuthRepository();\r\n\r\n"]},"metadata":{},"sourceType":"module"}