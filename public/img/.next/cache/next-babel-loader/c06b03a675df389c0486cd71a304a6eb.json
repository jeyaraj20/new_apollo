{"ast":null,"code":"import { all, put, call, takeEvery } from 'redux-saga/effects';\nimport { actionTypes, getAllExampackageSuccess, getInactiveExampackageSuccess } from './action';\nimport ExampackageRepository from '../../repositories/ExampackageRepository';\n\nfunction* getAllExampackageSaga({\n  payload\n}) {\n  try {\n    const data = yield call(ExampackageRepository.getAllExampackage, payload);\n    yield put(getAllExampackageSuccess(data));\n  } catch (err) {\n    yield put(getAllExampackageSuccess(null));\n  }\n}\n\nfunction* getInactiveExampackageSaga({\n  payload\n}) {\n  try {\n    const data = yield call(ExampackageRepository.getInactiveExampackage, payload);\n    yield put(getInactiveExampackageSuccess(data));\n  } catch (err) {\n    yield put(getInactiveExampackageSuccess(null));\n  }\n}\n\nexport default function* rootSaga() {\n  yield all([takeEvery(actionTypes.GET_ALL_EXAMPACKAGE_REQUEST, getAllExampackageSaga)]);\n  yield all([takeEvery(actionTypes.GET_INACTIVE_EXAMPACKAGE_REQUEST, getInactiveExampackageSaga)]);\n}","map":{"version":3,"sources":["F:/newapollo/store/Exampackage/saga.js"],"names":["all","put","call","takeEvery","actionTypes","getAllExampackageSuccess","getInactiveExampackageSuccess","ExampackageRepository","getAllExampackageSaga","payload","data","getAllExampackage","err","getInactiveExampackageSaga","getInactiveExampackage","rootSaga","GET_ALL_EXAMPACKAGE_REQUEST","GET_INACTIVE_EXAMPACKAGE_REQUEST"],"mappings":"AAAA,SAASA,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,SAAzB,QAA0C,oBAA1C;AAEA,SAASC,WAAT,EAAsBC,wBAAtB,EAAgDC,6BAAhD,QAAqF,UAArF;AAEA,OAAOC,qBAAP,MAAkC,0CAAlC;;AAEA,UAAUC,qBAAV,CAAgC;AAAEC,EAAAA;AAAF,CAAhC,EAA6C;AACzC,MAAI;AACA,UAAMC,IAAI,GAAG,MAAMR,IAAI,CAACK,qBAAqB,CAACI,iBAAvB,EAA0CF,OAA1C,CAAvB;AACA,UAAMR,GAAG,CAACI,wBAAwB,CAACK,IAAD,CAAzB,CAAT;AACH,GAHD,CAGE,OAAOE,GAAP,EAAY;AACV,UAAMX,GAAG,CAACI,wBAAwB,CAAC,IAAD,CAAzB,CAAT;AACH;AACJ;;AAED,UAAUQ,0BAAV,CAAqC;AAAEJ,EAAAA;AAAF,CAArC,EAAkD;AAC9C,MAAI;AACA,UAAMC,IAAI,GAAG,MAAMR,IAAI,CAACK,qBAAqB,CAACO,sBAAvB,EAA+CL,OAA/C,CAAvB;AACA,UAAMR,GAAG,CAACK,6BAA6B,CAACI,IAAD,CAA9B,CAAT;AACH,GAHD,CAGE,OAAOE,GAAP,EAAY;AACV,UAAMX,GAAG,CAACK,6BAA6B,CAAC,IAAD,CAA9B,CAAT;AACH;AACJ;;AAED,eAAe,UAAUS,QAAV,GAAqB;AAChC,QAAMf,GAAG,CAAC,CAACG,SAAS,CAACC,WAAW,CAACY,2BAAb,EAA0CR,qBAA1C,CAAV,CAAD,CAAT;AACA,QAAMR,GAAG,CAAC,CAACG,SAAS,CAACC,WAAW,CAACa,gCAAb,EAA+CJ,0BAA/C,CAAV,CAAD,CAAT;AACH","sourcesContent":["import { all, put, call, takeEvery } from 'redux-saga/effects';\r\n\r\nimport { actionTypes, getAllExampackageSuccess, getInactiveExampackageSuccess } from './action';\r\n\r\nimport ExampackageRepository from '../../repositories/ExampackageRepository';\r\n\r\nfunction* getAllExampackageSaga({ payload }) {\r\n    try {\r\n        const data = yield call(ExampackageRepository.getAllExampackage, payload);\r\n        yield put(getAllExampackageSuccess(data));\r\n    } catch (err) {\r\n        yield put(getAllExampackageSuccess(null));\r\n    }\r\n}\r\n\r\nfunction* getInactiveExampackageSaga({ payload }) {\r\n    try {\r\n        const data = yield call(ExampackageRepository.getInactiveExampackage, payload);\r\n        yield put(getInactiveExampackageSuccess(data));\r\n    } catch (err) {\r\n        yield put(getInactiveExampackageSuccess(null));\r\n    }\r\n}\r\n\r\nexport default function* rootSaga() {\r\n    yield all([takeEvery(actionTypes.GET_ALL_EXAMPACKAGE_REQUEST, getAllExampackageSaga)]);\r\n    yield all([takeEvery(actionTypes.GET_INACTIVE_EXAMPACKAGE_REQUEST, getInactiveExampackageSaga)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}