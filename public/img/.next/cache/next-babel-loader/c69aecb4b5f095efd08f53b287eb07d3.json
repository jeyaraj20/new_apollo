{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport Repository, { apiUrl } from './Repository';\n\nvar AuthRepository = /*#__PURE__*/function () {\n  function AuthRepository(callback) {\n    _classCallCheck(this, AuthRepository);\n\n    this.callback = callback;\n  }\n\n  _createClass(AuthRepository, [{\n    key: \"getAdminMenuAll\",\n    value: function () {\n      var _getAdminMenuAll = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var reponse;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return Repository.get(\"\".concat(apiUrl, \"/adminmenu/all\")).then(function (response) {\n                  return response.data;\n                })[\"catch\"](function (error) {\n                  return {\n                    error: JSON.stringify(error)\n                  };\n                });\n\n              case 2:\n                reponse = _context.sent;\n                return _context.abrupt(\"return\", reponse);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getAdminMenuAll() {\n        return _getAdminMenuAll.apply(this, arguments);\n      }\n\n      return getAdminMenuAll;\n    }()\n  }, {\n    key: \"getAdminUserMenu\",\n    value: function () {\n      var _getAdminUserMenu = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var reponse;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return Repository.get(\"\".concat(apiUrl, \"/adminmenu/\")).then(function (response) {\n                  return response.data;\n                })[\"catch\"](function (error) {\n                  return {\n                    error: JSON.stringify(error)\n                  };\n                });\n\n              case 2:\n                reponse = _context2.sent;\n                return _context2.abrupt(\"return\", reponse);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function getAdminUserMenu() {\n        return _getAdminUserMenu.apply(this, arguments);\n      }\n\n      return getAdminUserMenu;\n    }()\n  }, {\n    key: \"getAllOperators\",\n    value: function () {\n      var _getAllOperators = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var reponse;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return Repository.get(\"\".concat(apiUrl, \"/operator/getoperator/Y\")).then(function (response) {\n                  return response.data;\n                })[\"catch\"](function (error) {\n                  return {\n                    error: JSON.stringify(error)\n                  };\n                });\n\n              case 2:\n                reponse = _context3.sent;\n                return _context3.abrupt(\"return\", reponse);\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function getAllOperators() {\n        return _getAllOperators.apply(this, arguments);\n      }\n\n      return getAllOperators;\n    }()\n  }, {\n    key: \"changePassword\",\n    value: function () {\n      var _changePassword = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(data) {\n        var reponse;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                console.log(user.user.type, 'data'); //  if (user.user.type === \"S\")\n\n                _context4.next = 3;\n                return Repository.put(\"\".concat(apiUrl, \"/adminmenu/changepasswordsuperadmin\"), data) // else\n                //     const reponse = await Repository.put(`${apiUrl}/adminmenu/changepasswordadminoperator`, data)\n                .then(function (response) {\n                  return response.data;\n                })[\"catch\"](function (error) {\n                  return {\n                    error: JSON.stringify(error)\n                  };\n                });\n\n              case 3:\n                reponse = _context4.sent;\n                return _context4.abrupt(\"return\", reponse);\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function changePassword(_x) {\n        return _changePassword.apply(this, arguments);\n      }\n\n      return changePassword;\n    }()\n  }]);\n\n  return AuthRepository;\n}();\n\nexport default new AuthRepository();","map":{"version":3,"sources":["D:/Question_cloud/question_cloud_admin_web_new/repositories/AdminRepository.js"],"names":["Repository","apiUrl","AuthRepository","callback","get","then","response","data","error","JSON","stringify","reponse","console","log","user","type","put"],"mappings":";;;;AAAA,OAAOA,UAAP,IAAqBC,MAArB,QAAmC,cAAnC;;IAEMC,c;AACF,0BAAYC,QAAZ,EAAsB;AAAA;;AAClB,SAAKA,QAAL,GAAgBA,QAAhB;AACH;;;;;sFAED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAC0BH,UAAU,CAACI,GAAX,WAAkBH,MAAlB,qBACjBI,IADiB,CACZ,UAAAC,QAAQ,EAAI;AACd,yBAAOA,QAAQ,CAACC,IAAhB;AACH,iBAHiB,WAIX,UAAAC,KAAK;AAAA,yBAAK;AAAEA,oBAAAA,KAAK,EAAEC,IAAI,CAACC,SAAL,CAAeF,KAAf;AAAT,mBAAL;AAAA,iBAJM,CAD1B;;AAAA;AACUG,gBAAAA,OADV;AAAA,iDAMWA,OANX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;uFASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAC0BX,UAAU,CAACI,GAAX,WAAkBH,MAAlB,kBACjBI,IADiB,CACZ,UAAAC,QAAQ,EAAI;AACd,yBAAOA,QAAQ,CAACC,IAAhB;AACH,iBAHiB,WAIX,UAAAC,KAAK;AAAA,yBAAK;AAAEA,oBAAAA,KAAK,EAAEC,IAAI,CAACC,SAAL,CAAeF,KAAf;AAAT,mBAAL;AAAA,iBAJM,CAD1B;;AAAA;AACUG,gBAAAA,OADV;AAAA,kDAMWA,OANX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;sFASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAC0BX,UAAU,CAACI,GAAX,WAAkBH,MAAlB,8BACjBI,IADiB,CACZ,UAAAC,QAAQ,EAAI;AACd,yBAAOA,QAAQ,CAACC,IAAhB;AACH,iBAHiB,WAIX,UAAAC,KAAK;AAAA,yBAAK;AAAEA,oBAAAA,KAAK,EAAEC,IAAI,CAACC,SAAL,CAAeF,KAAf;AAAT,mBAAL;AAAA,iBAJM,CAD1B;;AAAA;AACUG,gBAAAA,OADV;AAAA,kDAMWA,OANX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;qFASA,kBAAqBJ,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AACIK,gBAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACA,IAAL,CAAUC,IAAtB,EAA2B,MAA3B,EADJ,CAEE;;AAFF;AAAA,uBAG8Bf,UAAU,CAACgB,GAAX,WAAkBf,MAAlB,0CAA+DM,IAA/D,EAC1B;AACA;AAF0B,iBAGzBF,IAHyB,CAGpB,UAAAC,QAAQ,EAAI;AACN,yBAAOA,QAAQ,CAACC,IAAhB;AACH,iBALiB,WAMX,UAAAC,KAAK;AAAA,yBAAK;AAAEA,oBAAAA,KAAK,EAAEC,IAAI,CAACC,SAAL,CAAeF,KAAf;AAAT,mBAAL;AAAA,iBANM,CAH9B;;AAAA;AAGcG,gBAAAA,OAHd;AAAA,kDAUWA,OAVX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;;;AAcJ,eAAe,IAAIT,cAAJ,EAAf","sourcesContent":["import Repository, { apiUrl } from './Repository';\r\n\r\nclass AuthRepository {\r\n    constructor(callback) {\r\n        this.callback = callback;\r\n    }\r\n\r\n    async getAdminMenuAll() {\r\n        const reponse = await Repository.get(`${apiUrl}/adminmenu/all`)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n            .catch(error => ({ error: JSON.stringify(error) }));\r\n        return reponse;\r\n    }\r\n\r\n    async getAdminUserMenu() {\r\n        const reponse = await Repository.get(`${apiUrl}/adminmenu/`)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n            .catch(error => ({ error: JSON.stringify(error) }));\r\n        return reponse;\r\n    }\r\n\r\n    async getAllOperators() {\r\n        const reponse = await Repository.get(`${apiUrl}/operator/getoperator/Y`)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n            .catch(error => ({ error: JSON.stringify(error) }));\r\n        return reponse;\r\n    }\r\n\r\n    async changePassword(data) {\r\n        console.log(user.user.type,'data')\r\n      //  if (user.user.type === \"S\")\r\n            const reponse = await Repository.put(`${apiUrl}/adminmenu/changepasswordsuperadmin`, data)\r\n        // else\r\n        //     const reponse = await Repository.put(`${apiUrl}/adminmenu/changepasswordadminoperator`, data)\r\n        .then(response => {\r\n                    return response.data;\r\n                })\r\n                .catch(error => ({ error: JSON.stringify(error) }));\r\n        return reponse;\r\n    }\r\n}\r\n\r\nexport default new AuthRepository();\r\n\r\n"]},"metadata":{},"sourceType":"module"}