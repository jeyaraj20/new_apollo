{"ast":null,"code":"var _jsxFileName = \"D:\\\\Question_cloud\\\\question_cloud_admin_web_new\\\\pages\\\\qbanksubcategory\\\\questions\\\\addEditQuestion.jsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useRef, useEffect, useState } from 'react';\nimport { Editor } from '@tinymce/tinymce-react';\nimport { decode, encode } from 'html-entities';\nimport { useDropzone } from \"react-dropzone\";\nimport { Spin, Modal } from 'antd';\nimport Router from 'next/router';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Button from '@material-ui/core/Button';\nimport HeaderDashboard from '../../../components/header/HeaderDashboard';\nimport Sidebar from '../../../components/sections/sidebar';\nimport { getQuery } from '../../../helper/auth';\nimport { questionImageDir, schoolquestionImageDir, TINY_EDITOR_KEY } from \"../../../config\";\nimport QuestionRepository from '../../../repositories/QuestionRepository';\n\nconst AddEditQuestion = props => {\n  const questionEditorRef = useRef(null);\n  const opt1EditorRef = useRef(null);\n  const opt2EditorRef = useRef(null);\n  const opt3EditorRef = useRef(null);\n  const opt4EditorRef = useRef(null);\n  const opt5EditorRef = useRef(null);\n  const {\n    0: loader,\n    1: setLoader\n  } = useState(false);\n  const {\n    0: question,\n    1: setQuestion\n  } = useState('');\n  const {\n    0: questionInit,\n    1: setQuestionInit\n  } = useState('');\n  const {\n    0: questionNo,\n    1: setQuestionNo\n  } = useState('');\n  const {\n    0: questionType,\n    1: setQuestionType\n  } = useState('T');\n  const {\n    0: questionId,\n    1: setQuestionId\n  } = useState('');\n  const {\n    0: questionDesc,\n    1: setQuestionDesc\n  } = useState('');\n  const {\n    0: option1Type,\n    1: setOption1Type\n  } = useState('T');\n  const {\n    0: option2Type,\n    1: setOption2Type\n  } = useState('T');\n  const {\n    0: option3Type,\n    1: setOption3Type\n  } = useState('T');\n  const {\n    0: option4Type,\n    1: setOption4Type\n  } = useState('T');\n  const {\n    0: option5Type,\n    1: setOption5Type\n  } = useState('T');\n  const {\n    0: difficultyLevel,\n    1: setDifficultyLevel\n  } = useState('');\n  const {\n    0: option1,\n    1: setOption1\n  } = useState('');\n  const {\n    0: option2,\n    1: setOption2\n  } = useState('');\n  const {\n    0: option3,\n    1: setOption3\n  } = useState('');\n  const {\n    0: option4,\n    1: setOption4\n  } = useState('');\n  const {\n    0: option5,\n    1: setOption5\n  } = useState('');\n  const {\n    0: option1Init,\n    1: setOption1Init\n  } = useState('');\n  const {\n    0: option2Init,\n    1: setOption2Init\n  } = useState('');\n  const {\n    0: option3Init,\n    1: setOption3Init\n  } = useState('');\n  const {\n    0: option4Init,\n    1: setOption4Init\n  } = useState('');\n  const {\n    0: option5Init,\n    1: setOption5Init\n  } = useState('');\n  const {\n    0: files,\n    1: setFiles\n  } = useState([]);\n  const {\n    0: opt1files,\n    1: setOpt1Files\n  } = useState([]);\n  const {\n    0: opt2files,\n    1: setOpt2Files\n  } = useState([]);\n  const {\n    0: opt3files,\n    1: setOpt3Files\n  } = useState([]);\n  const {\n    0: opt4files,\n    1: setOpt4Files\n  } = useState([]);\n  const {\n    0: opt5files,\n    1: setOpt5Files\n  } = useState([]);\n  const {\n    0: viewQuesImg,\n    1: setviewQuesImg\n  } = useState(false);\n  const {\n    0: viewQuesDropzone,\n    1: setQuesDropzone\n  } = useState(true);\n  const {\n    0: viewOpt1Img,\n    1: setviewOpt1Img\n  } = useState(false);\n  const {\n    0: viewOpt1Dropzone,\n    1: setOpt1Dropzone\n  } = useState(true);\n  const {\n    0: viewOpt2Img,\n    1: setviewOpt2Img\n  } = useState(false);\n  const {\n    0: viewOpt2Dropzone,\n    1: setOpt2Dropzone\n  } = useState(true);\n  const {\n    0: viewOpt3Img,\n    1: setviewOpt3Img\n  } = useState(false);\n  const {\n    0: viewOpt3Dropzone,\n    1: setOpt3Dropzone\n  } = useState(true);\n  const {\n    0: viewOpt4Img,\n    1: setviewOpt4Img\n  } = useState(false);\n  const {\n    0: viewOpt4Dropzone,\n    1: setOpt4Dropzone\n  } = useState(true);\n  const {\n    0: viewOpt5Img,\n    1: setviewOpt5Img\n  } = useState(false);\n  const {\n    0: viewOpt5Dropzone,\n    1: setOpt5Dropzone\n  } = useState(true);\n  const {\n    0: opt,\n    1: setOpt\n  } = useState('');\n  const {\n    0: correctAnswer,\n    1: setCorrectAnswer\n  } = useState('');\n  const {\n    0: screenmode,\n    1: setMode\n  } = useState(\"\");\n  const {\n    0: ipaddr,\n    1: setIpAddr\n  } = useState('');\n  const {\n    0: categoryId,\n    1: setCategoryId\n  } = useState(\"\");\n  const {\n    0: subCategoryId,\n    1: setSubCategoryId\n  } = useState(\"\");\n  const {\n    0: categoryName,\n    1: setCategoryName\n  } = useState(\"\");\n  const {\n    0: subCategoryName,\n    1: setSubCategoryName\n  } = useState(\"\");\n\n  const publicIp = require('public-ip');\n\n  const thumbsContainer = {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    marginTop: 16\n  };\n  const thumb = {\n    display: 'inline-flex',\n    borderRadius: 2,\n    border: '1px solid #eaeaea',\n    marginBottom: 8,\n    marginRight: 8,\n    width: '100%',\n    height: 150,\n    padding: 4,\n    boxSizing: 'border-box'\n  };\n  const thumbInner = {\n    display: 'flex',\n    minWidth: 0,\n    overflow: 'hidden'\n  };\n  const img = {\n    display: 'block',\n    width: 'auto',\n    height: '100%'\n  };\n\n  const handleRefresh = async () => {\n    setLoader(true);\n    let query = getQuery();\n    let ip = await publicIp.v4();\n    let mode = query && query.qid ? 'Edit' : 'Add';\n    setMode(mode);\n    setCategoryId(query.mainId);\n    setSubCategoryId(query.subId);\n    let mainName = query.mainName.replace(/%20/g, ' ');\n    let subName = query.subName.replace(/%20/g, ' ');\n    setCategoryName(mainName);\n    setSubCategoryName(subName);\n    setIpAddr(ip);\n\n    if (mode !== 'Edit') {\n      let getdata = {\n        \"cat_id\": query.mainId,\n        \"sub_id\": query.subId\n      };\n      let questionNoRes = await QuestionRepository.getQuestionId(getdata);\n      setQuestionType('T');\n      setQuestion('');\n      setOption1Type('T');\n      setOption2Type('T');\n      setOption3Type('T');\n      setOption4Type('T');\n      setOption5Type('T');\n      setOption1(\"\");\n      setOption2(\"\");\n      setOption3(\"\");\n      setOption4(\"\");\n      setOption5(\"\");\n      setQuestionNo(questionNoRes && questionNoRes.questionNo ? questionNoRes.questionNo : '');\n    } else {\n      let response = await QuestionRepository.getQuestionById(query.qid);\n      let questiondatadetail = response.question;\n      setQuestionNo(questiondatadetail.question_code);\n      setQuestionId(questiondatadetail.qid); // let user = auth.getCurrentUser();\n\n      let questionImageDirfinal = questionImageDir; // if (user.user.logintype != 'G') {\n      //     questionImageDirfinal = schoolquestionImageDir;\n      // }\n\n      if (questiondatadetail.q_type === 'I') {\n        let file = {\n          name: questiondatadetail.question,\n          preview: questionImageDirfinal + '/' + questiondatadetail.question\n        };\n        let filearray = [];\n        filearray.push(file);\n        setFiles(filearray);\n        setQuesDropzone(false);\n        setviewQuesImg(true);\n      } else {\n        let questionvalue = decode(questiondatadetail.question);\n        setQuestionInit(questionvalue);\n      }\n\n      if (questiondatadetail.opt_type1 === 'I') {\n        let opt1file = {\n          name: questiondatadetail.opt_1,\n          preview: questionImageDirfinal + '/' + questiondatadetail.opt_1\n        };\n        let opt1array = [];\n        opt1array.push(opt1file);\n        setOpt1Files(opt1array);\n        setOpt1Dropzone(false);\n        setviewOpt1Img(true);\n      } else {\n        let option1value = decode(questiondatadetail.opt_1);\n        setOption1Init(option1value);\n      }\n\n      if (questiondatadetail.opt_type2 === 'I') {\n        let opt2file = {\n          name: questiondatadetail.opt_2,\n          preview: questionImageDirfinal + '/' + questiondatadetail.opt_2\n        };\n        let opt2array = [];\n        opt2array.push(opt2file);\n        setOpt2Files(opt2array);\n        setOpt2Dropzone(false);\n        setviewOpt2Img(true);\n      } else {\n        let option2value = decode(questiondatadetail.opt_2);\n        setOption2Init(option2value);\n      }\n\n      if (questiondatadetail.opt_type3 === 'I') {\n        let opt3file = {\n          name: questiondatadetail.opt_3,\n          preview: questionImageDirfinal + '/' + questiondatadetail.opt_3\n        };\n        let opt3array = [];\n        opt3array.push(opt3file);\n        setOpt3Files(opt3array);\n        setOpt3Dropzone(false);\n        setviewOpt3Img(true);\n      } else {\n        let option3value = decode(questiondatadetail.opt_3);\n        setOption3Init(option3value);\n      }\n\n      if (questiondatadetail.opt_type4 === 'I') {\n        let opt4file = {\n          name: questiondatadetail.opt_4,\n          preview: questionImageDirfinal + '/' + questiondatadetail.opt_4\n        };\n        let opt4array = [];\n        opt4array.push(opt4file);\n        setOpt4Files(opt4array);\n        setOpt4Dropzone(false);\n        setviewOpt4Img(true);\n      } else {\n        let option4value = decode(questiondatadetail.opt_4);\n        setOption4Init(option4value);\n      }\n\n      if (questiondatadetail.opt_type5 === 'I') {\n        let opt5file = {\n          name: questiondatadetail.opt_5,\n          preview: questionImageDirfinal + '/' + questiondatadetail.opt_5\n        };\n        let opt5array = [];\n        opt5array.push(opt5file);\n        setOpt5Files(opt5array);\n        setOpt5Dropzone(false);\n        setviewOpt5Img(true);\n      } else {\n        let option5value = decode(questiondatadetail.opt_5);\n        setOption5Init(option5value);\n      }\n\n      setQuestionDesc(questiondatadetail.quest_desc);\n      setQuestionType(questiondatadetail.q_type);\n      setOption1Type(questiondatadetail.opt_type1);\n      setOption2Type(questiondatadetail.opt_type2);\n      setOption3Type(questiondatadetail.opt_type3);\n      setOption4Type(questiondatadetail.opt_type4);\n      setOption5Type(questiondatadetail.opt_type5);\n      setCorrectAnswer(questiondatadetail.crt_ans);\n      setDifficultyLevel(questiondatadetail.quest_level.toString());\n    }\n\n    setLoader(false);\n  };\n\n  useEffect(() => {\n    async function fetchData() {\n      await handleRefresh();\n    }\n\n    fetchData();\n  }, []);\n\n  const handleQuestionType = (e, opt) => {\n    setQuestionType(e.target.value);\n    setOpt(opt);\n  };\n\n  const handleOptionType1 = (e, opt) => {\n    setOption1Type(e.target.value);\n    setOpt(opt);\n  };\n\n  const handleOptionType2 = (e, opt) => {\n    setOption2Type(e.target.value);\n    setOpt(opt);\n  };\n\n  const handleOptionType3 = (e, opt) => {\n    setOption3Type(e.target.value);\n    setOpt(opt);\n  };\n\n  const handleOptionType4 = (e, opt) => {\n    setOption4Type(e.target.value);\n    setOpt(opt);\n  };\n\n  const handleOptionType5 = (e, opt) => {\n    setOption5Type(e.target.value);\n    setOpt(opt);\n  };\n\n  const handleDifficultyLevel = e => {\n    setDifficultyLevel(e.target.value);\n  };\n\n  const onCorrectAnsChange = e => {\n    const re = /^[0-9\\b]+$/;\n\n    if (re.test(e.target.value) && Number(e.target.value) <= 5) {\n      setCorrectAnswer(e.target.value);\n    } else if (e.target.value === '') {\n      setCorrectAnswer('');\n    }\n  };\n\n  const onDescriptionchange = e => {\n    setQuestionDesc(e.target.value);\n  };\n\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    accept: 'image/*',\n    onDrop: acceptedFiles => {\n      if (opt === 'question') {\n        setFiles(acceptedFiles.map(file => Object.assign(file, {\n          preview: window.webkitURL.createObjectURL(file)\n        })));\n        setviewQuesImg(true);\n        setQuesDropzone(false);\n      }\n\n      if (opt === 'opt1') {\n        console.log(acceptedFiles);\n        setOpt1Files(acceptedFiles.map(file => Object.assign(file, {\n          preview: window.webkitURL.createObjectURL(file)\n        })));\n        setviewOpt1Img(true);\n        setOpt1Dropzone(false);\n      }\n\n      if (opt === 'opt2') {\n        setOpt2Files(acceptedFiles.map(file => Object.assign(file, {\n          preview: window.webkitURL.createObjectURL(file)\n        })));\n        setviewOpt2Img(true);\n        setOpt2Dropzone(false);\n      }\n\n      if (opt === 'opt3') {\n        setOpt3Files(acceptedFiles.map(file => Object.assign(file, {\n          preview: window.webkitURL.createObjectURL(file)\n        })));\n        setviewOpt3Img(true);\n        setOpt3Dropzone(false);\n      }\n\n      if (opt === 'opt4') {\n        setOpt4Files(acceptedFiles.map(file => Object.assign(file, {\n          preview: window.webkitURL.createObjectURL(file)\n        })));\n        setviewOpt4Img(true);\n        setOpt4Dropzone(false);\n      }\n\n      if (opt === 'opt5') {\n        setOpt5Files(acceptedFiles.map(file => Object.assign(file, {\n          preview: window.webkitURL.createObjectURL(file)\n        })));\n        setviewOpt5Img(true);\n        setOpt5Dropzone(false);\n      }\n    }\n  });\n  const questionThumb = files.map(file => __jsx(\"div\", {\n    style: thumb,\n    key: file.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    style: thumbInner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 13\n    }\n  }, __jsx(\"img\", {\n    alt: file.name,\n    src: file.preview,\n    style: img,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 17\n    }\n  }))));\n  const opt1Thumb = opt1files.map(file => __jsx(\"div\", {\n    style: thumb,\n    key: file.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    style: thumbInner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 13\n    }\n  }, __jsx(\"img\", {\n    alt: file.name,\n    src: file.preview,\n    style: img,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 17\n    }\n  }))));\n  const opt2Thumb = opt2files.map(file => __jsx(\"div\", {\n    style: thumb,\n    key: file.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    style: thumbInner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 13\n    }\n  }, __jsx(\"img\", {\n    alt: file.name,\n    src: file.preview,\n    style: img,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 17\n    }\n  }))));\n  const opt3Thumb = opt3files.map(file => __jsx(\"div\", {\n    style: thumb,\n    key: file.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    style: thumbInner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 13\n    }\n  }, __jsx(\"img\", {\n    alt: file.name,\n    src: file.preview,\n    style: img,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 17\n    }\n  }))));\n  const opt4Thumb = opt4files.map(file => __jsx(\"div\", {\n    style: thumb,\n    key: file.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    style: thumbInner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 13\n    }\n  }, __jsx(\"img\", {\n    alt: file.name,\n    src: file.preview,\n    style: img,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 17\n    }\n  }))));\n  const opt5Thumb = opt5files.map(file => __jsx(\"div\", {\n    style: thumb,\n    key: file.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    style: thumbInner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 13\n    }\n  }, __jsx(\"img\", {\n    alt: file.name,\n    src: file.preview,\n    style: img,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 17\n    }\n  }))));\n\n  const deleteImage = type => {\n    if (type === 'question') {\n      setviewQuesImg(false);\n      setQuesDropzone(true);\n    }\n\n    if (type === 'opt1') {\n      setviewOpt1Img(false);\n      setOpt1Dropzone(true);\n    }\n\n    if (type === 'opt2') {\n      setviewOpt2Img(false);\n      setOpt2Dropzone(true);\n    }\n\n    if (type === 'opt3') {\n      setviewOpt3Img(false);\n      setOpt3Dropzone(true);\n    }\n\n    if (type === 'opt4') {\n      setviewOpt4Img(false);\n      setOpt4Dropzone(true);\n    }\n\n    if (type === 'opt5') {\n      setviewOpt5Img(false);\n      setOpt5Dropzone(true);\n    }\n  };\n\n  const saveQuestion = async () => {\n    setLoader(true);\n\n    try {\n      const formdata = new FormData();\n      formdata.append(\"cat_id\", categoryId);\n      formdata.append(\"sub_id\", subCategoryId);\n      formdata.append(\"q_type\", questionType);\n\n      if (questionType === 'I') {\n        if (files[0] !== undefined) {\n          formdata.append(\"question\", files[0]);\n        } else {\n          setLoader(false);\n          Modal.error({\n            title: 'Question is required'\n          });\n          return false;\n        }\n      } else {\n        if (question !== '') {\n          let questionvalue = encode(question);\n          formdata.append(\"question\", questionvalue);\n        } else {\n          setLoader(false);\n          Modal.error({\n            title: 'Question is required'\n          });\n          return false;\n        }\n      }\n\n      formdata.append(\"quest_desc\", questionDesc);\n      formdata.append(\"opt_type1\", option1Type);\n\n      if (option1Type === 'I') {\n        if (opt1files[0] !== undefined) {\n          formdata.append(\"opt_1\", opt1files[0]);\n        } else {\n          setLoader(false);\n          Modal.error({\n            title: 'Option 1 is required'\n          });\n          return false;\n        }\n      } else {\n        if (option1 !== '') {\n          let opt1value = encode(option1);\n          formdata.append(\"opt_1\", opt1value);\n        } else {\n          setLoader(false);\n          Modal.error({\n            title: 'Option 1 is required'\n          });\n          return false;\n        }\n      }\n\n      formdata.append(\"opt_type2\", option2Type);\n\n      if (option2Type === 'I') {\n        if (opt2files[0] !== undefined) {\n          formdata.append(\"opt_2\", opt2files[0]);\n        } else {\n          setLoader(false);\n          Modal.error({\n            title: 'Option 2 is required'\n          });\n          return false;\n        }\n      } else {\n        if (option2 !== '') {\n          let opt2value = encode(option2);\n          formdata.append(\"opt_2\", opt2value);\n        } else {\n          setLoader(false);\n          Modal.error({\n            title: 'Option 2 is required'\n          });\n          return false;\n        }\n      }\n\n      formdata.append(\"opt_type3\", option3Type);\n\n      if (option3Type === 'I') {\n        if (opt3files[0] !== undefined) {\n          formdata.append(\"opt_3\", opt3files[0]);\n        } else {\n          setLoader(false);\n          Modal.error({\n            title: 'Option 3 is required'\n          });\n          return false;\n        }\n      } else {\n        if (option3 !== '') {\n          let opt3value = encode(option3);\n          formdata.append(\"opt_3\", opt3value);\n        } else {\n          setLoader(false);\n          Modal.error({\n            title: 'Option 3 is required'\n          });\n          return false;\n        }\n      }\n\n      formdata.append(\"opt_type4\", option4Type);\n\n      if (option4Type === 'I') {\n        if (opt4files[0] !== undefined) {\n          formdata.append(\"opt_4\", opt4files[0]);\n        } else {\n          setLoader(false);\n          Modal.error({\n            title: 'Option 4 is required'\n          });\n          return false;\n        }\n      } else {\n        if (option4 !== '') {\n          let opt4value = encode(option4);\n          formdata.append(\"opt_4\", opt4value);\n        } else {\n          setLoader(false);\n          Modal.error({\n            title: 'Option 4 is required'\n          });\n          return false;\n        }\n      }\n\n      formdata.append(\"opt_type5\", option5Type);\n\n      if (option5Type === 'I') {\n        formdata.append(\"opt_5\", opt5files[0]);\n      } else {\n        let opt5value = encode(option5);\n        formdata.append(\"opt_5\", opt5value);\n      }\n\n      if (correctAnswer !== '') {\n        formdata.append(\"crt_ans\", correctAnswer);\n      } else {\n        setLoader(false);\n        Modal.error({\n          title: 'Correct answer is required'\n        });\n        return false;\n      }\n\n      if (difficultyLevel !== '') {\n        formdata.append(\"quest_level\", difficultyLevel);\n      } else {\n        setLoader(false);\n        Modal.error({\n          title: 'Level is required'\n        });\n        return false;\n      }\n\n      formdata.append(\"quest_pos\", \"0\");\n      formdata.append(\"quest_ipaddr\", ipaddr);\n\n      if (screenmode !== 'Edit') {\n        await QuestionRepository.saveQuestion(formdata);\n        Modal.success({\n          title: 'Question Added Successfully'\n        });\n        Router.back();\n      } else {\n        await QuestionRepository.updateQuestion(questionId, formdata);\n        Modal.success({\n          title: 'Question Updated Successfully'\n        });\n        Router.back();\n      }\n\n      setLoader(false);\n    } catch (ex) {\n      setLoader(false);\n      Modal.error({\n        title: 'Something went wrong. Please try later'\n      });\n    }\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 618,\n      columnNumber: 9\n    }\n  }, __jsx(Spin, {\n    spinning: loader,\n    tip: 'Loading...',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 619,\n      columnNumber: 13\n    }\n  }, __jsx(HeaderDashboard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 620,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    className: \"dashboard-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 621,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"row no-gutters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 622,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 623,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    id: \"sidebar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 624,\n      columnNumber: 29\n    }\n  }, __jsx(Sidebar, {\n    page: 'Q Bank Sub Category',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 625,\n      columnNumber: 33\n    }\n  }))), __jsx(\"div\", {\n    className: \"col-md-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 628,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    className: \"content content-width\",\n    id: \"style-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 629,\n      columnNumber: 29\n    }\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 630,\n      columnNumber: 33\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 631,\n      columnNumber: 37\n    }\n  }, __jsx(\"h4\", {\n    style: {\n      padding: '0.5%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 632,\n      columnNumber: 41\n    }\n  }, \"Add New Question for (\", categoryName, \" - \", subCategoryName, \")\")), __jsx(\"div\", {\n    className: \"col-md-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 634,\n      columnNumber: 37\n    }\n  }, __jsx(Button, {\n    onClick: () => Router.back(),\n    variant: \"contained\",\n    color: \"primary\",\n    className: \"jr-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 635,\n      columnNumber: 41\n    }\n  }, __jsx(\"i\", {\n    className: \"zmdi zmdi-chevron-left zmdi-hc-fw\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 636,\n      columnNumber: 45\n    }\n  }), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 637,\n      columnNumber: 45\n    }\n  }, \"Back\")))), __jsx(\"div\", {\n    className: \"col-lg-12 col-sm-6 col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 641,\n      columnNumber: 33\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 642,\n      columnNumber: 37\n    }\n  }, __jsx(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 643,\n      columnNumber: 41\n    }\n  }, \"Question ID \", __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 643,\n      columnNumber: 57\n    }\n  }, \"*\")), __jsx(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    value: questionNo,\n    placeholder: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 644,\n      columnNumber: 41\n    }\n  }))), __jsx(\"div\", {\n    className: \"col-lg-12 col-sm-6 col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 652,\n      columnNumber: 33\n    }\n  }, __jsx(FormControl, {\n    component: \"fieldset\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 653,\n      columnNumber: 37\n    }\n  }, __jsx(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 654,\n      columnNumber: 41\n    }\n  }, \"Question Type\", __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 654,\n      columnNumber: 58\n    }\n  }, \"*\")), __jsx(RadioGroup, {\n    className: \"d-flex flex-row\",\n    \"aria-label\": \"questiontype\",\n    name: \"questiontype\",\n    value: questionType,\n    onChange: e => handleQuestionType(e, 'question'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 655,\n      columnNumber: 41\n    }\n  }, __jsx(FormControlLabel, {\n    value: \"T\",\n    control: __jsx(Radio, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 662,\n        columnNumber: 82\n      }\n    }),\n    label: \"Text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 662,\n      columnNumber: 45\n    }\n  }), __jsx(FormControlLabel, {\n    value: \"I\",\n    control: __jsx(Radio, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 663,\n        columnNumber: 82\n      }\n    }),\n    label: \"Image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 663,\n      columnNumber: 45\n    }\n  })))), __jsx(\"div\", {\n    className: \"col-lg-12 col-sm-6 col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 667,\n      columnNumber: 33\n    }\n  }, questionType === 'T' && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 669,\n      columnNumber: 41\n    }\n  }, __jsx(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 670,\n      columnNumber: 45\n    }\n  }, \"Question \", __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 670,\n      columnNumber: 58\n    }\n  }, \"*\")), __jsx(Editor, {\n    apiKey: TINY_EDITOR_KEY,\n    onInit: (evt, editor) => questionEditorRef.current = editor,\n    initialValue: questionInit,\n    value: question,\n    onEditorChange: newText => setQuestion(newText),\n    init: {\n      height: 500,\n      menubar: false,\n      plugins: 'print preview powerpaste casechange importcss tinydrive searchreplace autolink autosave save directionality advcode visualblocks visualchars fullscreen image link media mediaembed template codesample table charmap hr pagebreak nonbreaking anchor toc insertdatetime advlist lists checklist wordcount tinymcespellchecker a11ychecker textpattern noneditable help formatpainter permanentpen pageembed charmap  mentions quickbars linkchecker emoticons advtable export',\n      toolbar: 'undo redo | bold italic underline strikethrough code subscript superscript | fontselect fontsizeselect formatselect | alignleft aligncenter alignright alignjustify | outdent indent |  numlist bullist checklist | forecolor backcolor casechange permanentpen formatpainter removeformat | pagebreak | charmap emoticons | fullscreen  preview save print | insertfile image media table pageembed template link anchor codesample | a11ycheck ltr rtl | tiny_mce_wiris_formulaEditor tiny_mce_wiris_formulaEditorChemistry',\n      content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }',\n      toolbar_drawer: 'sliding',\n      external_plugins: {\n        tiny_mce_wiris: 'https://www.wiris.net/demo/plugins/tiny_mce/plugin.js'\n      },\n      file_picker_callback: function (cb, value, meta) {\n        var input = document.createElement('input');\n        input.setAttribute('type', 'file');\n        input.setAttribute('accept', 'image/*');\n\n        input.onchange = function () {\n          var file = this.files[0];\n          const formData = new FormData();\n          formData.append('image', file);\n          QuestionRepository.imageUpload(formData).then(imageUploadResult => {\n            if (imageUploadResult && imageUploadResult.data && imageUploadResult.data.statusCode === 200) {\n              cb(imageUploadResult.data.data);\n            } else {\n              cb();\n            }\n          }).catch(e => {\n            cb();\n          });\n        };\n\n        input.click();\n      },\n      images_upload_handler: function (blob, success, failure) {\n        var file = blob.blob();\n\n        if (file && file.name) {\n          const formData = new FormData();\n          formData.append('image', file);\n          QuestionRepository.imageUpload(formData).then(imageUploadResult => {\n            if (imageUploadResult && imageUploadResult.data && imageUploadResult.data.statusCode === 200) {\n              success(imageUploadResult.data.data);\n            } else {\n              failure();\n            }\n          }).catch(e => {\n            failure();\n          });\n        }\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 671,\n      columnNumber: 45\n    }\n  })), questionType === 'I' && __jsx(React.Fragment, null, __jsx(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 727,\n      columnNumber: 45\n    }\n  }, \"Question Image\", __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 727,\n      columnNumber: 63\n    }\n  }, \"*\")), __jsx(\"div\", {\n    className: \"dropzone-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 728,\n      columnNumber: 45\n    }\n  }, viewQuesDropzone && __jsx(\"div\", {\n    className: \"dropzone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 730,\n      columnNumber: 53\n    }\n  }, __jsx(\"div\", _extends({\n    className: \"dropzone-file-btn\",\n    style: {\n      width: '100%'\n    }\n  }, getRootProps({\n    onClick: event => setOpt('question')\n  }), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 731,\n      columnNumber: 57\n    }\n  }), __jsx(\"input\", _extends({}, getInputProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 735,\n      columnNumber: 61\n    }\n  })), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 736,\n      columnNumber: 61\n    }\n  }, \"Drag 'n' drop some files here, or click to select files\"))), viewQuesImg && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 741,\n      columnNumber: 53\n    }\n  }, __jsx(\"div\", {\n    className: \"dropzone-content\",\n    style: thumbsContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 742,\n      columnNumber: 57\n    }\n  }, screenmode === 'Edit' ? questionThumb : questionThumb), __jsx(Button, {\n    onClick: () => deleteImage('question'),\n    variant: \"contained\",\n    className: \"jr-btn bg-danger text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 745,\n      columnNumber: 57\n    }\n  }, __jsx(\"i\", {\n    className: \"fas fa-trash\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 746,\n      columnNumber: 61\n    }\n  })))))), __jsx(\"div\", {\n    className: \"col-lg-12 col-sm-6 col-12\",\n    style: {\n      marginTop: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 754,\n      columnNumber: 33\n    }\n  }, __jsx(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 755,\n      columnNumber: 37\n    }\n  }, \"Question Description\"), __jsx(\"textarea\", {\n    id: \"required\",\n    className: \"border-1 form-control chat-textarea\",\n    onChange: e => onDescriptionchange(e),\n    value: questionDesc,\n    placeholder: \"Question Description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 756,\n      columnNumber: 37\n    }\n  })), __jsx(\"div\", {\n    className: \"col-lg-12 col-sm-6 col-12\",\n    style: {\n      marginTop: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 763,\n      columnNumber: 33\n    }\n  }, __jsx(FormControl, {\n    component: \"fieldset\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 764,\n      columnNumber: 37\n    }\n  }, __jsx(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 765,\n      columnNumber: 41\n    }\n  }, \"Option Type 1\", __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 765,\n      columnNumber: 58\n    }\n  }, \"*\")), __jsx(RadioGroup, {\n    className: \"d-flex flex-row\",\n    \"aria-label\": \"optiontype1\",\n    name: \"optiontype1\",\n    value: option1Type,\n    onChange: e => handleOptionType1(e, 'opt1'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 766,\n      columnNumber: 41\n    }\n  }, __jsx(FormControlLabel, {\n    value: \"T\",\n    control: __jsx(Radio, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 773,\n        columnNumber: 82\n      }\n    }),\n    label: \"Text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 773,\n      columnNumber: 45\n    }\n  }), __jsx(FormControlLabel, {\n    value: \"I\",\n    control: __jsx(Radio, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 774,\n        columnNumber: 82\n      }\n    }),\n    label: \"Image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 774,\n      columnNumber: 45\n    }\n  })))), __jsx(\"div\", {\n    className: \"col-lg-12 col-sm-6 col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 778,\n      columnNumber: 33\n    }\n  }, option1Type === 'T' && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 780,\n      columnNumber: 41\n    }\n  }, __jsx(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 781,\n      columnNumber: 45\n    }\n  }, \"Option 1 \", __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 781,\n      columnNumber: 58\n    }\n  }, \"*\")), __jsx(Editor, {\n    apiKey: TINY_EDITOR_KEY,\n    onInit: (evt, editor) => opt1EditorRef.current = editor,\n    initialValue: option1Init,\n    value: option1,\n    onEditorChange: newText => setOption1(newText),\n    init: {\n      height: 500,\n      menubar: false,\n      plugins: 'print preview powerpaste casechange importcss tinydrive searchreplace autolink autosave save directionality advcode visualblocks visualchars fullscreen image link media mediaembed template codesample table charmap hr pagebreak nonbreaking anchor toc insertdatetime advlist lists checklist wordcount tinymcespellchecker a11ychecker textpattern noneditable help formatpainter permanentpen pageembed charmap  mentions quickbars linkchecker emoticons advtable export',\n      toolbar: 'undo redo | bold italic underline strikethrough code subscript superscript | fontselect fontsizeselect formatselect | alignleft aligncenter alignright alignjustify | outdent indent |  numlist bullist checklist | forecolor backcolor casechange permanentpen formatpainter removeformat | pagebreak | charmap emoticons | fullscreen  preview save print | insertfile image media table pageembed template link anchor codesample | a11ycheck ltr rtl | tiny_mce_wiris_formulaEditor tiny_mce_wiris_formulaEditorChemistry',\n      content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }',\n      toolbar_drawer: 'sliding',\n      external_plugins: {\n        tiny_mce_wiris: 'https://www.wiris.net/demo/plugins/tiny_mce/plugin.js'\n      },\n      file_picker_callback: function (cb, value, meta) {\n        var input = document.createElement('input');\n        input.setAttribute('type', 'file');\n        input.setAttribute('accept', 'image/*');\n\n        input.onchange = function () {\n          var file = this.files[0];\n          const formData = new FormData();\n          formData.append('image', file);\n          QuestionRepository.imageUpload(formData).then(imageUploadResult => {\n            if (imageUploadResult && imageUploadResult.data && imageUploadResult.data.statusCode === 200) {\n              cb(imageUploadResult.data.data);\n            } else {\n              cb();\n            }\n          }).catch(e => {\n            cb();\n          });\n        };\n\n        input.click();\n      },\n      images_upload_handler: function (blob, success, failure) {\n        var file = blob.blob();\n\n        if (file && file.name) {\n          const formData = new FormData();\n          formData.append('image', file);\n          QuestionRepository.imageUpload(formData).then(imageUploadResult => {\n            if (imageUploadResult && imageUploadResult.data && imageUploadResult.data.statusCode === 200) {\n              success(imageUploadResult.data.data);\n            } else {\n              failure();\n            }\n          }).catch(e => {\n            failure();\n          });\n        }\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 782,\n      columnNumber: 45\n    }\n  })), option1Type === 'I' && __jsx(React.Fragment, null, __jsx(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 838,\n      columnNumber: 45\n    }\n  }, \"Image Option 1\", __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 838,\n      columnNumber: 63\n    }\n  }, \"*\")), __jsx(\"div\", {\n    className: \"dropzone-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 839,\n      columnNumber: 45\n    }\n  }, viewOpt1Dropzone && __jsx(\"div\", {\n    className: \"dropzone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 841,\n      columnNumber: 53\n    }\n  }, __jsx(\"div\", _extends({\n    className: \"dropzone-file-btn\",\n    style: {\n      width: '100%'\n    }\n  }, getRootProps({\n    onClick: event => setOpt('opt1')\n  }), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 842,\n      columnNumber: 57\n    }\n  }), __jsx(\"input\", _extends({}, getInputProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 844,\n      columnNumber: 61\n    }\n  })), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 845,\n      columnNumber: 61\n    }\n  }, \"Drag 'n' drop some files here, or click to select files\"))), viewOpt1Img && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 850,\n      columnNumber: 53\n    }\n  }, __jsx(\"div\", {\n    className: \"dropzone-content\",\n    style: thumbsContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 851,\n      columnNumber: 57\n    }\n  }, screenmode === 'Edit' ? opt1Thumb : opt1Thumb), __jsx(Button, {\n    onClick: () => deleteImage('opt1'),\n    variant: \"contained\",\n    className: \"jr-btn bg-danger text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 854,\n      columnNumber: 57\n    }\n  }, __jsx(\"i\", {\n    className: \"fas fa-trash\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 855,\n      columnNumber: 61\n    }\n  })))))), __jsx(\"div\", {\n    className: \"col-lg-12 col-sm-6 col-12\",\n    style: {\n      marginTop: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 863,\n      columnNumber: 33\n    }\n  }, __jsx(FormControl, {\n    component: \"fieldset\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 864,\n      columnNumber: 37\n    }\n  }, __jsx(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 865,\n      columnNumber: 41\n    }\n  }, \"Option Type 2\", __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 865,\n      columnNumber: 58\n    }\n  }, \"*\")), __jsx(RadioGroup, {\n    className: \"d-flex flex-row\",\n    \"aria-label\": \"optiontype2\",\n    name: \"optiontype2\",\n    value: option2Type,\n    onChange: e => handleOptionType2(e, 'opt2'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 866,\n      columnNumber: 41\n    }\n  }, __jsx(FormControlLabel, {\n    value: \"T\",\n    control: __jsx(Radio, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 873,\n        columnNumber: 82\n      }\n    }),\n    label: \"Text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 873,\n      columnNumber: 45\n    }\n  }), __jsx(FormControlLabel, {\n    value: \"I\",\n    control: __jsx(Radio, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 874,\n        columnNumber: 82\n      }\n    }),\n    label: \"Image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 874,\n      columnNumber: 45\n    }\n  })))), __jsx(\"div\", {\n    className: \"col-lg-12 col-sm-6 col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 878,\n      columnNumber: 33\n    }\n  }, option2Type === 'T' && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 880,\n      columnNumber: 41\n    }\n  }, __jsx(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 881,\n      columnNumber: 45\n    }\n  }, \"Option 2 \", __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 881,\n      columnNumber: 58\n    }\n  }, \"*\")), __jsx(Editor, {\n    apiKey: TINY_EDITOR_KEY,\n    onInit: (evt, editor) => opt2EditorRef.current = editor,\n    initialValue: option2Init,\n    value: option2,\n    onEditorChange: newText => setOption2(newText),\n    init: {\n      height: 500,\n      menubar: false,\n      plugins: 'print preview powerpaste casechange importcss tinydrive searchreplace autolink autosave save directionality advcode visualblocks visualchars fullscreen image link media mediaembed template codesample table charmap hr pagebreak nonbreaking anchor toc insertdatetime advlist lists checklist wordcount tinymcespellchecker a11ychecker textpattern noneditable help formatpainter permanentpen pageembed charmap  mentions quickbars linkchecker emoticons advtable export',\n      toolbar: 'undo redo | bold italic underline strikethrough code subscript superscript | fontselect fontsizeselect formatselect | alignleft aligncenter alignright alignjustify | outdent indent |  numlist bullist checklist | forecolor backcolor casechange permanentpen formatpainter removeformat | pagebreak | charmap emoticons | fullscreen  preview save print | insertfile image media table pageembed template link anchor codesample | a11ycheck ltr rtl | tiny_mce_wiris_formulaEditor tiny_mce_wiris_formulaEditorChemistry',\n      content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }',\n      toolbar_drawer: 'sliding',\n      external_plugins: {\n        tiny_mce_wiris: 'https://www.wiris.net/demo/plugins/tiny_mce/plugin.js'\n      },\n      file_picker_callback: function (cb, value, meta) {\n        var input = document.createElement('input');\n        input.setAttribute('type', 'file');\n        input.setAttribute('accept', 'image/*');\n\n        input.onchange = function () {\n          var file = this.files[0];\n          const formData = new FormData();\n          formData.append('image', file);\n          QuestionRepository.imageUpload(formData).then(imageUploadResult => {\n            if (imageUploadResult && imageUploadResult.data && imageUploadResult.data.statusCode === 200) {\n              cb(imageUploadResult.data.data);\n            } else {\n              cb();\n            }\n          }).catch(e => {\n            cb();\n          });\n        };\n\n        input.click();\n      },\n      images_upload_handler: function (blob, success, failure) {\n        var file = blob.blob();\n\n        if (file && file.name) {\n          const formData = new FormData();\n          formData.append('image', file);\n          QuestionRepository.imageUpload(formData).then(imageUploadResult => {\n            if (imageUploadResult && imageUploadResult.data && imageUploadResult.data.statusCode === 200) {\n              success(imageUploadResult.data.data);\n            } else {\n              failure();\n            }\n          }).catch(e => {\n            failure();\n          });\n        }\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 882,\n      columnNumber: 45\n    }\n  })), option2Type === 'I' && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 937,\n      columnNumber: 41\n    }\n  }, __jsx(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 938,\n      columnNumber: 45\n    }\n  }, \"Image Option 2\", __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 938,\n      columnNumber: 63\n    }\n  }, \"*\")), __jsx(\"div\", {\n    className: \"dropzone-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 939,\n      columnNumber: 45\n    }\n  }, viewOpt2Dropzone && __jsx(\"div\", {\n    className: \"dropzone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 941,\n      columnNumber: 53\n    }\n  }, __jsx(\"div\", _extends({\n    className: \"dropzone-file-btn\",\n    style: {\n      width: '100%'\n    }\n  }, getRootProps({\n    onClick: event => setOpt('opt2')\n  }), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 942,\n      columnNumber: 57\n    }\n  }), __jsx(\"input\", _extends({}, getInputProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 943,\n      columnNumber: 61\n    }\n  })), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 944,\n      columnNumber: 61\n    }\n  }, \"Drag 'n' drop some files here, or click to select files\"))), viewOpt2Img && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 949,\n      columnNumber: 53\n    }\n  }, __jsx(\"div\", {\n    className: \"dropzone-content\",\n    style: thumbsContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 950,\n      columnNumber: 57\n    }\n  }, screenmode === 'Edit' ? opt2Thumb : opt2Thumb), __jsx(Button, {\n    onClick: () => deleteImage('opt2'),\n    variant: \"contained\",\n    className: \"jr-btn bg-danger text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 953,\n      columnNumber: 57\n    }\n  }, __jsx(\"i\", {\n    className: \"fas fa-trash\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 954,\n      columnNumber: 61\n    }\n  })))))), __jsx(\"div\", {\n    className: \"col-lg-12 col-sm-6 col-12\",\n    style: {\n      marginTop: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 962,\n      columnNumber: 33\n    }\n  }, __jsx(FormControl, {\n    component: \"fieldset\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 963,\n      columnNumber: 37\n    }\n  }, __jsx(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 964,\n      columnNumber: 41\n    }\n  }, \"Option Type 3\", __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 964,\n      columnNumber: 58\n    }\n  }, \"*\")), __jsx(RadioGroup, {\n    className: \"d-flex flex-row\",\n    \"aria-label\": \"optiontype3\",\n    name: \"optiontype3\",\n    value: option3Type,\n    onChange: e => handleOptionType3(e, 'opt3'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 965,\n      columnNumber: 41\n    }\n  }, __jsx(FormControlLabel, {\n    value: \"T\",\n    control: __jsx(Radio, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 972,\n        columnNumber: 82\n      }\n    }),\n    label: \"Text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 972,\n      columnNumber: 45\n    }\n  }), __jsx(FormControlLabel, {\n    value: \"I\",\n    control: __jsx(Radio, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 973,\n        columnNumber: 82\n      }\n    }),\n    label: \"Image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 973,\n      columnNumber: 45\n    }\n  })))), __jsx(\"div\", {\n    className: \"col-lg-12 col-sm-6 col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 977,\n      columnNumber: 33\n    }\n  }, option3Type === 'T' && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 979,\n      columnNumber: 41\n    }\n  }, __jsx(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 980,\n      columnNumber: 45\n    }\n  }, \"Option 3 \", __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 980,\n      columnNumber: 58\n    }\n  }, \"*\")), __jsx(Editor, {\n    apiKey: TINY_EDITOR_KEY,\n    onInit: (evt, editor) => opt3EditorRef.current = editor,\n    initialValue: option3Init,\n    value: option3,\n    onEditorChange: newText => setOption3(newText),\n    init: {\n      height: 500,\n      menubar: false,\n      plugins: 'print preview powerpaste casechange importcss tinydrive searchreplace autolink autosave save directionality advcode visualblocks visualchars fullscreen image link media mediaembed template codesample table charmap hr pagebreak nonbreaking anchor toc insertdatetime advlist lists checklist wordcount tinymcespellchecker a11ychecker textpattern noneditable help formatpainter permanentpen pageembed charmap  mentions quickbars linkchecker emoticons advtable export',\n      toolbar: 'undo redo | bold italic underline strikethrough code subscript superscript | fontselect fontsizeselect formatselect | alignleft aligncenter alignright alignjustify | outdent indent |  numlist bullist checklist | forecolor backcolor casechange permanentpen formatpainter removeformat | pagebreak | charmap emoticons | fullscreen  preview save print | insertfile image media table pageembed template link anchor codesample | a11ycheck ltr rtl | tiny_mce_wiris_formulaEditor tiny_mce_wiris_formulaEditorChemistry',\n      content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }',\n      toolbar_drawer: 'sliding',\n      external_plugins: {\n        tiny_mce_wiris: 'https://www.wiris.net/demo/plugins/tiny_mce/plugin.js'\n      },\n      file_picker_callback: function (cb, value, meta) {\n        var input = document.createElement('input');\n        input.setAttribute('type', 'file');\n        input.setAttribute('accept', 'image/*');\n\n        input.onchange = function () {\n          var file = this.files[0];\n          const formData = new FormData();\n          formData.append('image', file);\n          QuestionRepository.imageUpload(formData).then(imageUploadResult => {\n            if (imageUploadResult && imageUploadResult.data && imageUploadResult.data.statusCode === 200) {\n              cb(imageUploadResult.data.data);\n            } else {\n              cb();\n            }\n          }).catch(e => {\n            cb();\n          });\n        };\n\n        input.click();\n      },\n      images_upload_handler: function (blob, success, failure) {\n        var file = blob.blob();\n\n        if (file && file.name) {\n          const formData = new FormData();\n          formData.append('image', file);\n          QuestionRepository.imageUpload(formData).then(imageUploadResult => {\n            if (imageUploadResult && imageUploadResult.data && imageUploadResult.data.statusCode === 200) {\n              success(imageUploadResult.data.data);\n            } else {\n              failure();\n            }\n          }).catch(e => {\n            failure();\n          });\n        }\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 981,\n      columnNumber: 45\n    }\n  })), option3Type === 'I' && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1036,\n      columnNumber: 41\n    }\n  }, __jsx(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1037,\n      columnNumber: 45\n    }\n  }, \"Image Option 3\", __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1037,\n      columnNumber: 63\n    }\n  }, \"*\")), __jsx(\"div\", {\n    className: \"dropzone-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1038,\n      columnNumber: 45\n    }\n  }, viewOpt3Dropzone && __jsx(\"div\", {\n    className: \"dropzone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1040,\n      columnNumber: 53\n    }\n  }, __jsx(\"div\", _extends({\n    className: \"dropzone-file-btn\",\n    style: {\n      width: '100%'\n    }\n  }, getRootProps({\n    onClick: event => setOpt('opt3')\n  }), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1041,\n      columnNumber: 57\n    }\n  }), __jsx(\"input\", _extends({}, getInputProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1042,\n      columnNumber: 61\n    }\n  })), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1043,\n      columnNumber: 61\n    }\n  }, \"Drag 'n' drop some files here, or click to select files\"))), viewOpt3Img && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1048,\n      columnNumber: 53\n    }\n  }, __jsx(\"div\", {\n    className: \"dropzone-content\",\n    style: thumbsContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1049,\n      columnNumber: 57\n    }\n  }, screenmode === 'Edit' ? opt3Thumb : opt3Thumb), __jsx(Button, {\n    onClick: () => deleteImage('opt3'),\n    variant: \"contained\",\n    className: \"jr-btn bg-danger text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1052,\n      columnNumber: 57\n    }\n  }, __jsx(\"i\", {\n    className: \"fas fa-trash\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1053,\n      columnNumber: 61\n    }\n  })))))), __jsx(\"div\", {\n    className: \"col-lg-12 col-sm-6 col-12\",\n    style: {\n      marginTop: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1061,\n      columnNumber: 33\n    }\n  }, __jsx(FormControl, {\n    component: \"fieldset\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1062,\n      columnNumber: 37\n    }\n  }, __jsx(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1063,\n      columnNumber: 41\n    }\n  }, \"Option Type 4\", __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1063,\n      columnNumber: 58\n    }\n  }, \"*\")), __jsx(RadioGroup, {\n    className: \"d-flex flex-row\",\n    \"aria-label\": \"questiontype\",\n    name: \"questiontype\",\n    value: option4Type,\n    onChange: e => handleOptionType4(e, 'opt4'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1064,\n      columnNumber: 41\n    }\n  }, __jsx(FormControlLabel, {\n    value: \"T\",\n    control: __jsx(Radio, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1071,\n        columnNumber: 82\n      }\n    }),\n    label: \"Text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1071,\n      columnNumber: 45\n    }\n  }), __jsx(FormControlLabel, {\n    value: \"I\",\n    control: __jsx(Radio, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1072,\n        columnNumber: 82\n      }\n    }),\n    label: \"Image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1072,\n      columnNumber: 45\n    }\n  })))), __jsx(\"div\", {\n    className: \"col-lg-12 col-sm-6 col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1076,\n      columnNumber: 33\n    }\n  }, option4Type === 'T' && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1078,\n      columnNumber: 41\n    }\n  }, __jsx(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1079,\n      columnNumber: 45\n    }\n  }, \"Option 4 \", __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1079,\n      columnNumber: 58\n    }\n  }, \"*\")), __jsx(Editor, {\n    apiKey: TINY_EDITOR_KEY,\n    onInit: (evt, editor) => opt4EditorRef.current = editor,\n    initialValue: option4Init,\n    value: option4,\n    onEditorChange: newText => setOption4(newText),\n    init: {\n      height: 500,\n      menubar: false,\n      plugins: 'print preview powerpaste casechange importcss tinydrive searchreplace autolink autosave save directionality advcode visualblocks visualchars fullscreen image link media mediaembed template codesample table charmap hr pagebreak nonbreaking anchor toc insertdatetime advlist lists checklist wordcount tinymcespellchecker a11ychecker textpattern noneditable help formatpainter permanentpen pageembed charmap  mentions quickbars linkchecker emoticons advtable export',\n      toolbar: 'undo redo | bold italic underline strikethrough code subscript superscript | fontselect fontsizeselect formatselect | alignleft aligncenter alignright alignjustify | outdent indent |  numlist bullist checklist | forecolor backcolor casechange permanentpen formatpainter removeformat | pagebreak | charmap emoticons | fullscreen  preview save print | insertfile image media table pageembed template link anchor codesample | a11ycheck ltr rtl | tiny_mce_wiris_formulaEditor tiny_mce_wiris_formulaEditorChemistry',\n      content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }',\n      toolbar_drawer: 'sliding',\n      external_plugins: {\n        tiny_mce_wiris: 'https://www.wiris.net/demo/plugins/tiny_mce/plugin.js'\n      },\n      file_picker_callback: function (cb, value, meta) {\n        var input = document.createElement('input');\n        input.setAttribute('type', 'file');\n        input.setAttribute('accept', 'image/*');\n\n        input.onchange = function () {\n          var file = this.files[0];\n          const formData = new FormData();\n          formData.append('image', file);\n          QuestionRepository.imageUpload(formData).then(imageUploadResult => {\n            if (imageUploadResult && imageUploadResult.data && imageUploadResult.data.statusCode === 200) {\n              cb(imageUploadResult.data.data);\n            } else {\n              cb();\n            }\n          }).catch(e => {\n            cb();\n          });\n        };\n\n        input.click();\n      },\n      images_upload_handler: function (blob, success, failure) {\n        var file = blob.blob();\n\n        if (file && file.name) {\n          const formData = new FormData();\n          formData.append('image', file);\n          QuestionRepository.imageUpload(formData).then(imageUploadResult => {\n            if (imageUploadResult && imageUploadResult.data && imageUploadResult.data.statusCode === 200) {\n              success(imageUploadResult.data.data);\n            } else {\n              failure();\n            }\n          }).catch(e => {\n            failure();\n          });\n        }\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1080,\n      columnNumber: 45\n    }\n  })), option4Type === 'I' && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1135,\n      columnNumber: 41\n    }\n  }, __jsx(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1136,\n      columnNumber: 45\n    }\n  }, \"Image Option 4\", __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1136,\n      columnNumber: 63\n    }\n  }, \"*\")), __jsx(\"div\", {\n    className: \"dropzone-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1137,\n      columnNumber: 45\n    }\n  }, viewOpt4Dropzone && __jsx(\"div\", {\n    className: \"dropzone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1139,\n      columnNumber: 53\n    }\n  }, __jsx(\"div\", _extends({\n    className: \"dropzone-file-btn\",\n    style: {\n      width: '100%'\n    }\n  }, getRootProps({\n    onClick: event => setOpt('opt4')\n  }), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1140,\n      columnNumber: 57\n    }\n  }), __jsx(\"input\", _extends({}, getInputProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1141,\n      columnNumber: 61\n    }\n  })), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1142,\n      columnNumber: 61\n    }\n  }, \"Drag 'n' drop some files here, or click to select files\"))), viewOpt4Img && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1147,\n      columnNumber: 53\n    }\n  }, __jsx(\"div\", {\n    className: \"dropzone-content\",\n    style: thumbsContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1148,\n      columnNumber: 57\n    }\n  }, screenmode === 'Edit' ? opt4Thumb : opt4Thumb), __jsx(Button, {\n    onClick: () => deleteImage('opt4'),\n    variant: \"contained\",\n    className: \"jr-btn bg-danger text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1151,\n      columnNumber: 57\n    }\n  }, __jsx(\"i\", {\n    className: \"fas fa-trash\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1152,\n      columnNumber: 61\n    }\n  })))))), __jsx(\"div\", {\n    className: \"col-lg-12 col-sm-6 col-12\",\n    style: {\n      marginTop: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1160,\n      columnNumber: 33\n    }\n  }, __jsx(FormControl, {\n    component: \"fieldset\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1161,\n      columnNumber: 37\n    }\n  }, __jsx(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1162,\n      columnNumber: 41\n    }\n  }, \"Option Type 5\", __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1162,\n      columnNumber: 58\n    }\n  }, \"*\")), __jsx(RadioGroup, {\n    className: \"d-flex flex-row\",\n    \"aria-label\": \"questiontype\",\n    name: \"questiontype\",\n    value: option5Type,\n    onChange: e => handleOptionType5(e, 'opt5'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1163,\n      columnNumber: 41\n    }\n  }, __jsx(FormControlLabel, {\n    value: \"T\",\n    control: __jsx(Radio, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1170,\n        columnNumber: 82\n      }\n    }),\n    label: \"Text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1170,\n      columnNumber: 45\n    }\n  }), __jsx(FormControlLabel, {\n    value: \"I\",\n    control: __jsx(Radio, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1171,\n        columnNumber: 82\n      }\n    }),\n    label: \"Image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1171,\n      columnNumber: 45\n    }\n  })))), __jsx(\"div\", {\n    className: \"col-lg-12 col-sm-6 col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1175,\n      columnNumber: 33\n    }\n  }, option5Type === 'T' && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1177,\n      columnNumber: 41\n    }\n  }, __jsx(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1178,\n      columnNumber: 45\n    }\n  }, \"Option 5 \", __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1178,\n      columnNumber: 58\n    }\n  }, \"*\")), __jsx(Editor, {\n    apiKey: TINY_EDITOR_KEY,\n    onInit: (evt, editor) => opt5EditorRef.current = editor,\n    initialValue: option5Init,\n    value: option5,\n    onEditorChange: newText => setOption5(newText),\n    init: {\n      height: 500,\n      menubar: false,\n      plugins: 'print preview powerpaste casechange importcss tinydrive searchreplace autolink autosave save directionality advcode visualblocks visualchars fullscreen image link media mediaembed template codesample table charmap hr pagebreak nonbreaking anchor toc insertdatetime advlist lists checklist wordcount tinymcespellchecker a11ychecker textpattern noneditable help formatpainter permanentpen pageembed charmap  mentions quickbars linkchecker emoticons advtable export',\n      toolbar: 'undo redo | bold italic underline strikethrough code subscript superscript | fontselect fontsizeselect formatselect | alignleft aligncenter alignright alignjustify | outdent indent |  numlist bullist checklist | forecolor backcolor casechange permanentpen formatpainter removeformat | pagebreak | charmap emoticons | fullscreen  preview save print | insertfile image media table pageembed template link anchor codesample | a11ycheck ltr rtl | tiny_mce_wiris_formulaEditor tiny_mce_wiris_formulaEditorChemistry',\n      content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }',\n      toolbar_drawer: 'sliding',\n      external_plugins: {\n        tiny_mce_wiris: 'https://www.wiris.net/demo/plugins/tiny_mce/plugin.js'\n      },\n      file_picker_callback: function (cb, value, meta) {\n        var input = document.createElement('input');\n        input.setAttribute('type', 'file');\n        input.setAttribute('accept', 'image/*');\n\n        input.onchange = function () {\n          var file = this.files[0];\n          const formData = new FormData();\n          formData.append('image', file);\n          QuestionRepository.imageUpload(formData).then(imageUploadResult => {\n            if (imageUploadResult && imageUploadResult.data && imageUploadResult.data.statusCode === 200) {\n              cb(imageUploadResult.data.data);\n            } else {\n              cb();\n            }\n          }).catch(e => {\n            cb();\n          });\n        };\n\n        input.click();\n      },\n      images_upload_handler: function (blob, success, failure) {\n        var file = blob.blob();\n\n        if (file && file.name) {\n          const formData = new FormData();\n          formData.append('image', file);\n          QuestionRepository.imageUpload(formData).then(imageUploadResult => {\n            if (imageUploadResult && imageUploadResult.data && imageUploadResult.data.statusCode === 200) {\n              success(imageUploadResult.data.data);\n            } else {\n              failure();\n            }\n          }).catch(e => {\n            failure();\n          });\n        }\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1179,\n      columnNumber: 45\n    }\n  })), option5Type === 'I' && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1234,\n      columnNumber: 41\n    }\n  }, __jsx(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1235,\n      columnNumber: 45\n    }\n  }, \"Image Option 5\", __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1235,\n      columnNumber: 63\n    }\n  }, \"*\")), __jsx(\"div\", {\n    className: \"dropzone-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1236,\n      columnNumber: 45\n    }\n  }, viewOpt5Dropzone && __jsx(\"div\", {\n    className: \"dropzone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1238,\n      columnNumber: 53\n    }\n  }, __jsx(\"div\", _extends({\n    className: \"dropzone-file-btn\",\n    style: {\n      width: '100%'\n    }\n  }, getRootProps({\n    onClick: event => setOpt('opt5')\n  }), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1239,\n      columnNumber: 57\n    }\n  }), __jsx(\"input\", _extends({}, getInputProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1240,\n      columnNumber: 61\n    }\n  })), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1241,\n      columnNumber: 61\n    }\n  }, \"Drag 'n' drop some files here, or click to select files\"))), viewOpt5Img && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1246,\n      columnNumber: 53\n    }\n  }, __jsx(\"div\", {\n    className: \"dropzone-content\",\n    style: thumbsContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1247,\n      columnNumber: 57\n    }\n  }, screenmode === 'Edit' ? opt5Thumb : opt5Thumb), __jsx(Button, {\n    onClick: () => deleteImage('opt5'),\n    variant: \"contained\",\n    className: \"jr-btn bg-danger text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1250,\n      columnNumber: 57\n    }\n  }, __jsx(\"i\", {\n    className: \"fas fa-trash\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1251,\n      columnNumber: 61\n    }\n  })))))), __jsx(\"div\", {\n    style: {\n      paddingTop: '2%'\n    },\n    className: \"col-lg-12 col-sm-6 col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1259,\n      columnNumber: 33\n    }\n  }, __jsx(\"input\", {\n    onChange: e => onCorrectAnsChange(e),\n    value: correctAnswer,\n    type: \"text\",\n    placeholder: \"Correct Answer\",\n    className: \"form-control form-control-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1260,\n      columnNumber: 37\n    }\n  })), __jsx(\"div\", {\n    style: {\n      paddingTop: '2%'\n    },\n    className: \"col-lg-12 col-sm-6 col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1262,\n      columnNumber: 33\n    }\n  }, __jsx(FormControl, {\n    component: \"fieldset\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1263,\n      columnNumber: 37\n    }\n  }, __jsx(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1264,\n      columnNumber: 41\n    }\n  }, \"Difficulty Level\", __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1264,\n      columnNumber: 61\n    }\n  }, \"*\")), __jsx(RadioGroup, {\n    className: \"d-flex flex-row\",\n    \"aria-label\": \"difficultylevel\",\n    name: \"difficultylevel\",\n    value: difficultyLevel,\n    onChange: e => handleDifficultyLevel(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1265,\n      columnNumber: 41\n    }\n  }, __jsx(FormControlLabel, {\n    value: \"1\",\n    control: __jsx(Radio, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1272,\n        columnNumber: 82\n      }\n    }),\n    label: \"Level 1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1272,\n      columnNumber: 45\n    }\n  }), __jsx(FormControlLabel, {\n    value: \"2\",\n    control: __jsx(Radio, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1273,\n        columnNumber: 82\n      }\n    }),\n    label: \"Level 2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1273,\n      columnNumber: 45\n    }\n  }), __jsx(FormControlLabel, {\n    value: \"3\",\n    control: __jsx(Radio, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1274,\n        columnNumber: 82\n      }\n    }),\n    label: \"Level 3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1274,\n      columnNumber: 45\n    }\n  }), __jsx(FormControlLabel, {\n    value: \"4\",\n    control: __jsx(Radio, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1275,\n        columnNumber: 82\n      }\n    }),\n    label: \"Level 4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1275,\n      columnNumber: 45\n    }\n  })))), __jsx(\"div\", {\n    style: {\n      paddingTop: '2%',\n      textAlign: 'right'\n    },\n    className: \"col-lg-6 col-sm-6 col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1279,\n      columnNumber: 33\n    }\n  }, __jsx(Button, {\n    onClick: () => saveQuestion(),\n    variant: \"contained\",\n    color: \"primary\",\n    className: \"jr-btn text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1280,\n      columnNumber: 37\n    }\n  }, \"Submit\"))))))));\n};\n\nexport default AddEditQuestion;","map":{"version":3,"sources":["D:/Question_cloud/question_cloud_admin_web_new/pages/qbanksubcategory/questions/addEditQuestion.jsx"],"names":["React","useRef","useEffect","useState","Editor","decode","encode","useDropzone","Spin","Modal","Router","Radio","RadioGroup","FormControl","FormControlLabel","Button","HeaderDashboard","Sidebar","getQuery","questionImageDir","schoolquestionImageDir","TINY_EDITOR_KEY","QuestionRepository","AddEditQuestion","props","questionEditorRef","opt1EditorRef","opt2EditorRef","opt3EditorRef","opt4EditorRef","opt5EditorRef","loader","setLoader","question","setQuestion","questionInit","setQuestionInit","questionNo","setQuestionNo","questionType","setQuestionType","questionId","setQuestionId","questionDesc","setQuestionDesc","option1Type","setOption1Type","option2Type","setOption2Type","option3Type","setOption3Type","option4Type","setOption4Type","option5Type","setOption5Type","difficultyLevel","setDifficultyLevel","option1","setOption1","option2","setOption2","option3","setOption3","option4","setOption4","option5","setOption5","option1Init","setOption1Init","option2Init","setOption2Init","option3Init","setOption3Init","option4Init","setOption4Init","option5Init","setOption5Init","files","setFiles","opt1files","setOpt1Files","opt2files","setOpt2Files","opt3files","setOpt3Files","opt4files","setOpt4Files","opt5files","setOpt5Files","viewQuesImg","setviewQuesImg","viewQuesDropzone","setQuesDropzone","viewOpt1Img","setviewOpt1Img","viewOpt1Dropzone","setOpt1Dropzone","viewOpt2Img","setviewOpt2Img","viewOpt2Dropzone","setOpt2Dropzone","viewOpt3Img","setviewOpt3Img","viewOpt3Dropzone","setOpt3Dropzone","viewOpt4Img","setviewOpt4Img","viewOpt4Dropzone","setOpt4Dropzone","viewOpt5Img","setviewOpt5Img","viewOpt5Dropzone","setOpt5Dropzone","opt","setOpt","correctAnswer","setCorrectAnswer","screenmode","setMode","ipaddr","setIpAddr","categoryId","setCategoryId","subCategoryId","setSubCategoryId","categoryName","setCategoryName","subCategoryName","setSubCategoryName","publicIp","require","thumbsContainer","display","flexDirection","flexWrap","marginTop","thumb","borderRadius","border","marginBottom","marginRight","width","height","padding","boxSizing","thumbInner","minWidth","overflow","img","handleRefresh","query","ip","v4","mode","qid","mainId","subId","mainName","replace","subName","getdata","questionNoRes","getQuestionId","response","getQuestionById","questiondatadetail","question_code","questionImageDirfinal","q_type","file","name","preview","filearray","push","questionvalue","opt_type1","opt1file","opt_1","opt1array","option1value","opt_type2","opt2file","opt_2","opt2array","option2value","opt_type3","opt3file","opt_3","opt3array","option3value","opt_type4","opt4file","opt_4","opt4array","option4value","opt_type5","opt5file","opt_5","opt5array","option5value","quest_desc","crt_ans","quest_level","toString","fetchData","handleQuestionType","e","target","value","handleOptionType1","handleOptionType2","handleOptionType3","handleOptionType4","handleOptionType5","handleDifficultyLevel","onCorrectAnsChange","re","test","Number","onDescriptionchange","getRootProps","getInputProps","accept","onDrop","acceptedFiles","map","Object","assign","window","webkitURL","createObjectURL","console","log","questionThumb","opt1Thumb","opt2Thumb","opt3Thumb","opt4Thumb","opt5Thumb","deleteImage","type","saveQuestion","formdata","FormData","append","undefined","error","title","opt1value","opt2value","opt3value","opt4value","opt5value","success","back","updateQuestion","ex","color","evt","editor","current","newText","menubar","plugins","toolbar","content_style","toolbar_drawer","external_plugins","tiny_mce_wiris","file_picker_callback","cb","meta","input","document","createElement","setAttribute","onchange","formData","imageUpload","then","imageUploadResult","data","statusCode","catch","click","images_upload_handler","blob","failure","onClick","event","paddingTop","textAlign"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport { Editor } from '@tinymce/tinymce-react';\r\nimport { decode, encode } from 'html-entities';\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { Spin, Modal } from 'antd';\r\nimport Router from 'next/router';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport HeaderDashboard from '../../../components/header/HeaderDashboard';\r\nimport Sidebar from '../../../components/sections/sidebar';\r\n\r\nimport { getQuery } from '../../../helper/auth';\r\nimport { questionImageDir, schoolquestionImageDir, TINY_EDITOR_KEY } from \"../../../config\";\r\nimport QuestionRepository from '../../../repositories/QuestionRepository';\r\n\r\nconst AddEditQuestion = (props) => {\r\n    const questionEditorRef = useRef(null);\r\n    const opt1EditorRef = useRef(null);\r\n    const opt2EditorRef = useRef(null);\r\n    const opt3EditorRef = useRef(null);\r\n    const opt4EditorRef = useRef(null);\r\n    const opt5EditorRef = useRef(null);\r\n\r\n    const [loader, setLoader] = useState(false);\r\n    const [question, setQuestion] = useState('');\r\n    const [questionInit, setQuestionInit] = useState('');\r\n    const [questionNo, setQuestionNo] = useState('');\r\n    const [questionType, setQuestionType] = useState('T');\r\n    const [questionId, setQuestionId] = useState('');\r\n    const [questionDesc, setQuestionDesc] = useState('');\r\n    const [option1Type, setOption1Type] = useState('T');\r\n    const [option2Type, setOption2Type] = useState('T');\r\n    const [option3Type, setOption3Type] = useState('T');\r\n    const [option4Type, setOption4Type] = useState('T');\r\n    const [option5Type, setOption5Type] = useState('T');\r\n    const [difficultyLevel, setDifficultyLevel] = useState('');\r\n    const [option1, setOption1] = useState('');\r\n    const [option2, setOption2] = useState('');\r\n    const [option3, setOption3] = useState('');\r\n    const [option4, setOption4] = useState('');\r\n    const [option5, setOption5] = useState('');\r\n    const [option1Init, setOption1Init] = useState('');\r\n    const [option2Init, setOption2Init] = useState('');\r\n    const [option3Init, setOption3Init] = useState('');\r\n    const [option4Init, setOption4Init] = useState('');\r\n    const [option5Init, setOption5Init] = useState('');\r\n    const [files, setFiles] = useState([]);\r\n    const [opt1files, setOpt1Files] = useState([]);\r\n    const [opt2files, setOpt2Files] = useState([]);\r\n    const [opt3files, setOpt3Files] = useState([]);\r\n    const [opt4files, setOpt4Files] = useState([]);\r\n    const [opt5files, setOpt5Files] = useState([]);\r\n    const [viewQuesImg, setviewQuesImg] = useState(false);\r\n    const [viewQuesDropzone, setQuesDropzone] = useState(true);\r\n    const [viewOpt1Img, setviewOpt1Img] = useState(false);\r\n    const [viewOpt1Dropzone, setOpt1Dropzone] = useState(true);\r\n    const [viewOpt2Img, setviewOpt2Img] = useState(false);\r\n    const [viewOpt2Dropzone, setOpt2Dropzone] = useState(true);\r\n    const [viewOpt3Img, setviewOpt3Img] = useState(false);\r\n    const [viewOpt3Dropzone, setOpt3Dropzone] = useState(true);\r\n    const [viewOpt4Img, setviewOpt4Img] = useState(false);\r\n    const [viewOpt4Dropzone, setOpt4Dropzone] = useState(true);\r\n    const [viewOpt5Img, setviewOpt5Img] = useState(false);\r\n    const [viewOpt5Dropzone, setOpt5Dropzone] = useState(true);\r\n    const [opt, setOpt] = useState('');\r\n    const [correctAnswer, setCorrectAnswer] = useState('');\r\n    const [screenmode, setMode] = useState(\"\");\r\n    const [ipaddr, setIpAddr] = useState('');\r\n    const [categoryId, setCategoryId] = useState(\"\");\r\n    const [subCategoryId, setSubCategoryId] = useState(\"\");\r\n    const [categoryName, setCategoryName] = useState(\"\");\r\n    const [subCategoryName, setSubCategoryName] = useState(\"\");\r\n\r\n    const publicIp = require('public-ip');\r\n\r\n    const thumbsContainer = {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        flexWrap: 'wrap',\r\n        marginTop: 16,\r\n    };\r\n\r\n    const thumb = {\r\n        display: 'inline-flex',\r\n        borderRadius: 2,\r\n        border: '1px solid #eaeaea',\r\n        marginBottom: 8,\r\n        marginRight: 8,\r\n        width: '100%',\r\n        height: 150,\r\n        padding: 4,\r\n        boxSizing: 'border-box'\r\n    };\r\n\r\n    const thumbInner = {\r\n        display: 'flex',\r\n        minWidth: 0,\r\n        overflow: 'hidden'\r\n    };\r\n\r\n    const img = {\r\n        display: 'block',\r\n        width: 'auto',\r\n        height: '100%'\r\n    };\r\n\r\n    const handleRefresh = async () => {\r\n        setLoader(true);\r\n        let query = getQuery();\r\n        let ip = await publicIp.v4();\r\n        let mode = query && query.qid ? 'Edit' : 'Add';\r\n        setMode(mode);\r\n        setCategoryId(query.mainId);\r\n        setSubCategoryId(query.subId);\r\n        let mainName = query.mainName.replace(/%20/g, ' ');\r\n        let subName = query.subName.replace(/%20/g, ' ');\r\n        setCategoryName(mainName);\r\n        setSubCategoryName(subName);\r\n        setIpAddr(ip);\r\n        if (mode !== 'Edit') {\r\n            let getdata = {\r\n                \"cat_id\": query.mainId,\r\n                \"sub_id\": query.subId\r\n            }\r\n            let questionNoRes = await QuestionRepository.getQuestionId(getdata);\r\n            setQuestionType('T');\r\n            setQuestion('');\r\n            setOption1Type('T');\r\n            setOption2Type('T');\r\n            setOption3Type('T');\r\n            setOption4Type('T');\r\n            setOption5Type('T');\r\n            setOption1(\"\");\r\n            setOption2(\"\");\r\n            setOption3(\"\");\r\n            setOption4(\"\");\r\n            setOption5(\"\");\r\n            setQuestionNo(questionNoRes && questionNoRes.questionNo ? questionNoRes.questionNo : '');\r\n        } else {\r\n            let response = await QuestionRepository.getQuestionById(query.qid);\r\n            let questiondatadetail = response.question;\r\n            setQuestionNo(questiondatadetail.question_code)\r\n            setQuestionId(questiondatadetail.qid);\r\n            // let user = auth.getCurrentUser();\r\n            let questionImageDirfinal = questionImageDir;\r\n            // if (user.user.logintype != 'G') {\r\n            //     questionImageDirfinal = schoolquestionImageDir;\r\n            // }\r\n            if (questiondatadetail.q_type === 'I') {\r\n                let file = {\r\n                    name: questiondatadetail.question,\r\n                    preview: questionImageDirfinal + '/' + questiondatadetail.question\r\n                }\r\n                let filearray = [];\r\n                filearray.push(file);\r\n                setFiles(filearray);\r\n                setQuesDropzone(false);\r\n                setviewQuesImg(true);\r\n            } else {\r\n                let questionvalue = decode(questiondatadetail.question);\r\n                setQuestionInit(questionvalue);\r\n            }\r\n            if (questiondatadetail.opt_type1 === 'I') {\r\n                let opt1file = {\r\n                    name: questiondatadetail.opt_1,\r\n                    preview: questionImageDirfinal + '/' + questiondatadetail.opt_1\r\n                }\r\n                let opt1array = [];\r\n                opt1array.push(opt1file);\r\n                setOpt1Files(opt1array);\r\n                setOpt1Dropzone(false);\r\n                setviewOpt1Img(true);\r\n            } else {\r\n                let option1value = decode(questiondatadetail.opt_1);\r\n                setOption1Init(option1value);\r\n            }\r\n            if (questiondatadetail.opt_type2 === 'I') {\r\n                let opt2file = {\r\n                    name: questiondatadetail.opt_2,\r\n                    preview: questionImageDirfinal + '/' + questiondatadetail.opt_2\r\n                }\r\n                let opt2array = [];\r\n                opt2array.push(opt2file);\r\n                setOpt2Files(opt2array);\r\n                setOpt2Dropzone(false);\r\n                setviewOpt2Img(true);\r\n            } else {\r\n                let option2value = decode(questiondatadetail.opt_2);\r\n                setOption2Init(option2value);\r\n            }\r\n            if (questiondatadetail.opt_type3 === 'I') {\r\n                let opt3file = {\r\n                    name: questiondatadetail.opt_3,\r\n                    preview: questionImageDirfinal + '/' + questiondatadetail.opt_3\r\n                }\r\n                let opt3array = [];\r\n                opt3array.push(opt3file);\r\n                setOpt3Files(opt3array);\r\n                setOpt3Dropzone(false);\r\n                setviewOpt3Img(true);\r\n            } else {\r\n                let option3value = decode(questiondatadetail.opt_3);\r\n                setOption3Init(option3value);\r\n            }\r\n            if (questiondatadetail.opt_type4 === 'I') {\r\n                let opt4file = {\r\n                    name: questiondatadetail.opt_4,\r\n                    preview: questionImageDirfinal + '/' + questiondatadetail.opt_4\r\n                }\r\n                let opt4array = [];\r\n                opt4array.push(opt4file);\r\n                setOpt4Files(opt4array);\r\n                setOpt4Dropzone(false);\r\n                setviewOpt4Img(true);\r\n            } else {\r\n                let option4value = decode(questiondatadetail.opt_4);\r\n                setOption4Init(option4value);\r\n            }\r\n            if (questiondatadetail.opt_type5 === 'I') {\r\n                let opt5file = {\r\n                    name: questiondatadetail.opt_5,\r\n                    preview: questionImageDirfinal + '/' + questiondatadetail.opt_5\r\n                }\r\n                let opt5array = [];\r\n                opt5array.push(opt5file);\r\n                setOpt5Files(opt5array);\r\n                setOpt5Dropzone(false);\r\n                setviewOpt5Img(true);\r\n            } else {\r\n                let option5value = decode(questiondatadetail.opt_5);\r\n                setOption5Init(option5value);\r\n            }\r\n            setQuestionDesc(questiondatadetail.quest_desc);\r\n            setQuestionType(questiondatadetail.q_type);\r\n            setOption1Type(questiondatadetail.opt_type1);\r\n            setOption2Type(questiondatadetail.opt_type2);\r\n            setOption3Type(questiondatadetail.opt_type3);\r\n            setOption4Type(questiondatadetail.opt_type4);\r\n            setOption5Type(questiondatadetail.opt_type5);\r\n            setCorrectAnswer(questiondatadetail.crt_ans);\r\n            setDifficultyLevel((questiondatadetail.quest_level).toString());\r\n        }\r\n        setLoader(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            await handleRefresh()\r\n        }\r\n        fetchData();\r\n    }, [])\r\n\r\n    const handleQuestionType = (e, opt) => {\r\n        setQuestionType(e.target.value);\r\n        setOpt(opt);\r\n    };\r\n\r\n    const handleOptionType1 = (e, opt) => {\r\n        setOption1Type(e.target.value);\r\n        setOpt(opt);\r\n    };\r\n\r\n    const handleOptionType2 = (e, opt) => {\r\n        setOption2Type(e.target.value);\r\n        setOpt(opt);\r\n    };\r\n\r\n    const handleOptionType3 = (e, opt) => {\r\n        setOption3Type(e.target.value);\r\n        setOpt(opt);\r\n    };\r\n\r\n    const handleOptionType4 = (e, opt) => {\r\n        setOption4Type(e.target.value);\r\n        setOpt(opt);\r\n    };\r\n\r\n    const handleOptionType5 = (e, opt) => {\r\n        setOption5Type(e.target.value);\r\n        setOpt(opt);\r\n    };\r\n\r\n    const handleDifficultyLevel = (e) => {\r\n        setDifficultyLevel(e.target.value);\r\n    };\r\n\r\n    const onCorrectAnsChange = (e) => {\r\n        const re = /^[0-9\\b]+$/;\r\n        if (re.test(e.target.value) && Number(e.target.value) <= 5) {\r\n            setCorrectAnswer(e.target.value);\r\n        } else if (e.target.value === '') {\r\n            setCorrectAnswer('');\r\n        }\r\n    };\r\n\r\n    const onDescriptionchange = (e) => {\r\n        setQuestionDesc(e.target.value);\r\n    };\r\n\r\n    const { getRootProps, getInputProps } = useDropzone({\r\n        accept: 'image/*',\r\n        onDrop: acceptedFiles => {\r\n            if (opt === 'question') {\r\n                setFiles(acceptedFiles.map(file => Object.assign(file, {\r\n                    preview: window.webkitURL.createObjectURL(file)\r\n                })));\r\n                setviewQuesImg(true);\r\n                setQuesDropzone(false);\r\n            }\r\n            if (opt === 'opt1') {\r\n                console.log(acceptedFiles);\r\n                setOpt1Files(acceptedFiles.map(file => Object.assign(file, {\r\n                    preview: window.webkitURL.createObjectURL(file)\r\n                })));\r\n                setviewOpt1Img(true);\r\n                setOpt1Dropzone(false);\r\n            }\r\n            if (opt === 'opt2') {\r\n                setOpt2Files(acceptedFiles.map(file => Object.assign(file, {\r\n                    preview: window.webkitURL.createObjectURL(file)\r\n                })));\r\n                setviewOpt2Img(true);\r\n                setOpt2Dropzone(false);\r\n            }\r\n            if (opt === 'opt3') {\r\n                setOpt3Files(acceptedFiles.map(file => Object.assign(file, {\r\n                    preview: window.webkitURL.createObjectURL(file)\r\n                })));\r\n                setviewOpt3Img(true);\r\n                setOpt3Dropzone(false);\r\n            }\r\n            if (opt === 'opt4') {\r\n                setOpt4Files(acceptedFiles.map(file => Object.assign(file, {\r\n                    preview: window.webkitURL.createObjectURL(file)\r\n                })));\r\n                setviewOpt4Img(true);\r\n                setOpt4Dropzone(false);\r\n            }\r\n            if (opt === 'opt5') {\r\n                setOpt5Files(acceptedFiles.map(file => Object.assign(file, {\r\n                    preview: window.webkitURL.createObjectURL(file)\r\n                })));\r\n                setviewOpt5Img(true);\r\n                setOpt5Dropzone(false);\r\n            }\r\n        }\r\n    });\r\n\r\n    const questionThumb = files.map(file => (\r\n        <div style={thumb} key={file.name}>\r\n            <div style={thumbInner}>\r\n                <img alt={file.name}\r\n                    src={file.preview}\r\n                    style={img}\r\n                />\r\n            </div>\r\n        </div>\r\n    ));\r\n\r\n    const opt1Thumb = opt1files.map(file => (\r\n        <div style={thumb} key={file.name}>\r\n            <div style={thumbInner}>\r\n                <img alt={file.name}\r\n                    src={file.preview}\r\n                    style={img}\r\n                />\r\n            </div>\r\n        </div>\r\n    ));\r\n\r\n    const opt2Thumb = opt2files.map(file => (\r\n        <div style={thumb} key={file.name}>\r\n            <div style={thumbInner}>\r\n                <img alt={file.name}\r\n                    src={file.preview}\r\n                    style={img}\r\n                />\r\n            </div>\r\n        </div>\r\n    ));\r\n\r\n    const opt3Thumb = opt3files.map(file => (\r\n        <div style={thumb} key={file.name}>\r\n            <div style={thumbInner}>\r\n                <img alt={file.name}\r\n                    src={file.preview}\r\n                    style={img}\r\n                />\r\n            </div>\r\n        </div>\r\n    ));\r\n\r\n    const opt4Thumb = opt4files.map(file => (\r\n        <div style={thumb} key={file.name}>\r\n            <div style={thumbInner}>\r\n                <img alt={file.name}\r\n                    src={file.preview}\r\n                    style={img}\r\n                />\r\n            </div>\r\n        </div>\r\n    ));\r\n\r\n    const opt5Thumb = opt5files.map(file => (\r\n        <div style={thumb} key={file.name}>\r\n            <div style={thumbInner}>\r\n                <img alt={file.name}\r\n                    src={file.preview}\r\n                    style={img}\r\n                />\r\n            </div>\r\n        </div>\r\n    ));\r\n\r\n    const deleteImage = (type) => {\r\n        if (type === 'question') {\r\n            setviewQuesImg(false);\r\n            setQuesDropzone(true);\r\n        }\r\n        if (type === 'opt1') {\r\n            setviewOpt1Img(false);\r\n            setOpt1Dropzone(true);\r\n        }\r\n        if (type === 'opt2') {\r\n            setviewOpt2Img(false);\r\n            setOpt2Dropzone(true);\r\n        }\r\n        if (type === 'opt3') {\r\n            setviewOpt3Img(false);\r\n            setOpt3Dropzone(true);\r\n        }\r\n        if (type === 'opt4') {\r\n            setviewOpt4Img(false);\r\n            setOpt4Dropzone(true);\r\n        }\r\n        if (type === 'opt5') {\r\n            setviewOpt5Img(false);\r\n            setOpt5Dropzone(true);\r\n        }\r\n    }\r\n\r\n    const saveQuestion = async () => {\r\n        setLoader(true);\r\n        try {\r\n            const formdata = new FormData();\r\n            formdata.append(\"cat_id\", categoryId);\r\n            formdata.append(\"sub_id\", subCategoryId);\r\n            formdata.append(\"q_type\", questionType);\r\n            if (questionType === 'I') {\r\n                if (files[0] !== undefined) {\r\n                    formdata.append(\"question\", files[0]);\r\n                } else {\r\n                    setLoader(false);\r\n                    Modal.error({\r\n                        title: 'Question is required'\r\n                    });\r\n                    return false;\r\n                }\r\n            } else {\r\n                if (question !== '') {\r\n                    let questionvalue = encode(question);\r\n                    formdata.append(\"question\", questionvalue);\r\n                } else {\r\n                    setLoader(false);\r\n                    Modal.error({\r\n                        title: 'Question is required'\r\n                    });\r\n                    return false;\r\n                }\r\n            }\r\n            formdata.append(\"quest_desc\", questionDesc);\r\n            formdata.append(\"opt_type1\", option1Type);\r\n            if (option1Type === 'I') {\r\n                if (opt1files[0] !== undefined) {\r\n                    formdata.append(\"opt_1\", opt1files[0]);\r\n                } else {\r\n                    setLoader(false);\r\n                    Modal.error({\r\n                        title: 'Option 1 is required'\r\n                    });\r\n                    return false;\r\n                }\r\n            } else {\r\n                if (option1 !== '') {\r\n                    let opt1value = encode(option1);\r\n                    formdata.append(\"opt_1\", opt1value);\r\n                } else {\r\n                    setLoader(false);\r\n                    Modal.error({\r\n                        title: 'Option 1 is required'\r\n                    });\r\n                    return false;\r\n                }\r\n            }\r\n            formdata.append(\"opt_type2\", option2Type);\r\n            if (option2Type === 'I') {\r\n                if (opt2files[0] !== undefined) {\r\n                    formdata.append(\"opt_2\", opt2files[0]);\r\n                } else {\r\n                    setLoader(false);\r\n                    Modal.error({\r\n                        title: 'Option 2 is required'\r\n                    });\r\n                    return false;\r\n                }\r\n            } else {\r\n                if (option2 !== '') {\r\n                    let opt2value = encode(option2);\r\n                    formdata.append(\"opt_2\", opt2value);\r\n                } else {\r\n                    setLoader(false);\r\n                    Modal.error({\r\n                        title: 'Option 2 is required'\r\n                    });\r\n                    return false;\r\n                }\r\n            }\r\n            formdata.append(\"opt_type3\", option3Type);\r\n            if (option3Type === 'I') {\r\n                if (opt3files[0] !== undefined) {\r\n                    formdata.append(\"opt_3\", opt3files[0]);\r\n                } else {\r\n                    setLoader(false);\r\n                    Modal.error({\r\n                        title: 'Option 3 is required'\r\n                    });\r\n                    return false;\r\n                }\r\n            } else {\r\n                if (option3 !== '') {\r\n                    let opt3value = encode(option3);\r\n                    formdata.append(\"opt_3\", opt3value);\r\n                } else {\r\n                    setLoader(false);\r\n                    Modal.error({\r\n                        title: 'Option 3 is required'\r\n                    });\r\n                    return false;\r\n                }\r\n            }\r\n            formdata.append(\"opt_type4\", option4Type);\r\n            if (option4Type === 'I') {\r\n                if (opt4files[0] !== undefined) {\r\n                    formdata.append(\"opt_4\", opt4files[0]);\r\n                } else {\r\n                    setLoader(false);\r\n                    Modal.error({\r\n                        title: 'Option 4 is required'\r\n                    });\r\n                    return false;\r\n                }\r\n            } else {\r\n                if (option4 !== '') {\r\n                    let opt4value = encode(option4);\r\n                    formdata.append(\"opt_4\", opt4value);\r\n                } else {\r\n                    setLoader(false);\r\n                    Modal.error({\r\n                        title: 'Option 4 is required'\r\n                    });\r\n                    return false;\r\n                }\r\n            }\r\n            formdata.append(\"opt_type5\", option5Type);\r\n            if (option5Type === 'I') {\r\n                formdata.append(\"opt_5\", opt5files[0]);\r\n            } else {\r\n                let opt5value = encode(option5);\r\n                formdata.append(\"opt_5\", opt5value);\r\n            }\r\n            if (correctAnswer !== '') {\r\n                formdata.append(\"crt_ans\", correctAnswer);\r\n            } else {\r\n                setLoader(false);\r\n                Modal.error({\r\n                    title: 'Correct answer is required'\r\n                });\r\n                return false;\r\n            }\r\n            if (difficultyLevel !== '') {\r\n                formdata.append(\"quest_level\", difficultyLevel);\r\n            } else {\r\n                setLoader(false);\r\n                Modal.error({\r\n                    title: 'Level is required'\r\n                });\r\n                return false;\r\n            }\r\n            formdata.append(\"quest_pos\", \"0\");\r\n            formdata.append(\"quest_ipaddr\", ipaddr);\r\n            if (screenmode !== 'Edit') {\r\n                await QuestionRepository.saveQuestion(formdata);\r\n                Modal.success({\r\n                    title: 'Question Added Successfully'\r\n                });\r\n                Router.back();\r\n            } else {\r\n                await QuestionRepository.updateQuestion(questionId, formdata);\r\n                Modal.success({\r\n                    title: 'Question Updated Successfully'\r\n                });\r\n                Router.back();\r\n            }\r\n            setLoader(false);\r\n        } catch (ex) {\r\n            setLoader(false);\r\n            Modal.error({\r\n                title: 'Something went wrong. Please try later'\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Spin spinning={loader} tip={'Loading...'}>\r\n                <HeaderDashboard />\r\n                <div className=\"dashboard-container\">\r\n                    <div className=\"row no-gutters\">\r\n                        <div className=\"col-md-2\">\r\n                            <div id=\"sidebar\">\r\n                                <Sidebar page={'Q Bank Sub Category'} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-10\">\r\n                            <div className=\"content content-width\" id=\"style-2\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-10\">\r\n                                        <h4 style={{ padding: '0.5%' }}>Add New Question for ({categoryName} - {subCategoryName})</h4>\r\n                                    </div>\r\n                                    <div className=\"col-md-2\">\r\n                                        <Button onClick={() => Router.back()} variant=\"contained\" color=\"primary\" className=\"jr-btn\">\r\n                                            <i className=\"zmdi zmdi-chevron-left zmdi-hc-fw\" />\r\n                                            <span>Back</span>\r\n                                        </Button>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-lg-12 col-sm-6 col-12\">\r\n                                    <div className=\"form-group\">\r\n                                        <h6>Question ID <span style={{ color: 'red' }}>*</span></h6>\r\n                                        <input\r\n                                            className=\"form-control\"\r\n                                            type=\"text\"\r\n                                            value={questionNo}\r\n                                            placeholder=\"\"\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-lg-12 col-sm-6 col-12\">\r\n                                    <FormControl component=\"fieldset\" required>\r\n                                        <h6>Question Type<span style={{ color: 'red' }}>*</span></h6>\r\n                                        <RadioGroup\r\n                                            className=\"d-flex flex-row\"\r\n                                            aria-label=\"questiontype\"\r\n                                            name=\"questiontype\"\r\n                                            value={questionType}\r\n                                            onChange={(e) => handleQuestionType(e, 'question')}\r\n                                        >\r\n                                            <FormControlLabel value=\"T\" control={<Radio color=\"primary\" />} label=\"Text\" />\r\n                                            <FormControlLabel value=\"I\" control={<Radio color=\"primary\" />} label=\"Image\" />\r\n                                        </RadioGroup>\r\n                                    </FormControl>\r\n                                </div>\r\n                                <div className=\"col-lg-12 col-sm-6 col-12\">\r\n                                    {questionType === 'T' &&\r\n                                        <div>\r\n                                            <h6>Question <span style={{ color: 'red' }}>*</span></h6>\r\n                                            <Editor\r\n                                                apiKey={TINY_EDITOR_KEY}\r\n                                                onInit={(evt, editor) => questionEditorRef.current = editor}\r\n                                                initialValue={questionInit}\r\n                                                value={question}\r\n                                                onEditorChange={(newText) => setQuestion(newText)}\r\n                                                init={{\r\n                                                    height: 500,\r\n                                                    menubar: false,\r\n                                                    plugins: 'print preview powerpaste casechange importcss tinydrive searchreplace autolink autosave save directionality advcode visualblocks visualchars fullscreen image link media mediaembed template codesample table charmap hr pagebreak nonbreaking anchor toc insertdatetime advlist lists checklist wordcount tinymcespellchecker a11ychecker textpattern noneditable help formatpainter permanentpen pageembed charmap  mentions quickbars linkchecker emoticons advtable export',\r\n                                                    toolbar: 'undo redo | bold italic underline strikethrough code subscript superscript | fontselect fontsizeselect formatselect | alignleft aligncenter alignright alignjustify | outdent indent |  numlist bullist checklist | forecolor backcolor casechange permanentpen formatpainter removeformat | pagebreak | charmap emoticons | fullscreen  preview save print | insertfile image media table pageembed template link anchor codesample | a11ycheck ltr rtl | tiny_mce_wiris_formulaEditor tiny_mce_wiris_formulaEditorChemistry',\r\n                                                    content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }',\r\n                                                    toolbar_drawer: 'sliding',\r\n                                                    external_plugins: { tiny_mce_wiris: 'https://www.wiris.net/demo/plugins/tiny_mce/plugin.js' },\r\n                                                    file_picker_callback: function (cb, value, meta) {\r\n                                                        var input = document.createElement('input');\r\n                                                        input.setAttribute('type', 'file');\r\n                                                        input.setAttribute('accept', 'image/*');\r\n                                                        input.onchange = function () {\r\n                                                            var file = this.files[0];\r\n                                                            const formData = new FormData();\r\n                                                            formData.append('image', file);\r\n                                                            QuestionRepository.imageUpload(formData).then(imageUploadResult => {\r\n                                                                if (imageUploadResult && imageUploadResult.data && imageUploadResult.data.statusCode === 200) {\r\n                                                                    cb(imageUploadResult.data.data);\r\n                                                                } else {\r\n                                                                    cb();\r\n                                                                }\r\n                                                            }).catch(e => {\r\n                                                                cb();\r\n                                                            });\r\n                                                        };\r\n                                                        input.click();\r\n                                                    },\r\n                                                    images_upload_handler: function (blob, success, failure) {\r\n                                                        var file = blob.blob();\r\n                                                        if (file && file.name) {\r\n                                                            const formData = new FormData();\r\n                                                            formData.append('image', file);\r\n                                                            QuestionRepository.imageUpload(formData).then(imageUploadResult => {\r\n                                                                if (imageUploadResult && imageUploadResult.data && imageUploadResult.data.statusCode === 200) {\r\n                                                                    success(imageUploadResult.data.data);\r\n                                                                } else {\r\n                                                                    failure();\r\n                                                                }\r\n                                                            }).catch(e => {\r\n                                                                failure();\r\n                                                            });\r\n                                                        }\r\n                                                    }\r\n                                                }}\r\n                                            />\r\n                                        </div>\r\n                                    }\r\n                                    {questionType === 'I' &&\r\n                                        <>\r\n                                            <h6>Question Image<span style={{ color: 'red' }}>*</span></h6>\r\n                                            <div className=\"dropzone-card\">\r\n                                                {viewQuesDropzone &&\r\n                                                    <div className=\"dropzone\">\r\n                                                        <div className=\"dropzone-file-btn\" style={{ width: '100%' }} {...getRootProps({\r\n                                                            onClick: event => setOpt('question')\r\n                                                        }\r\n                                                        )}>\r\n                                                            <input {...getInputProps()} />\r\n                                                            <p>Drag 'n' drop some files here, or click to select files</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                }\r\n                                                {viewQuesImg &&\r\n                                                    <div>\r\n                                                        <div className=\"dropzone-content\" style={thumbsContainer}>\r\n                                                            {screenmode === 'Edit' ? questionThumb : questionThumb}\r\n                                                        </div>\r\n                                                        <Button onClick={() => deleteImage('question')} variant=\"contained\" className=\"jr-btn bg-danger text-white\">\r\n                                                            <i className=\"fas fa-trash\" />\r\n                                                        </Button>\r\n                                                    </div>\r\n                                                }\r\n                                            </div>\r\n                                        </>\r\n                                    }\r\n                                </div>\r\n                                <div className=\"col-lg-12 col-sm-6 col-12\" style={{ marginTop: 15 }}>\r\n                                    <h6>Question Description</h6>\r\n                                    <textarea\r\n                                        id=\"required\" className=\"border-1 form-control chat-textarea\"\r\n                                        onChange={(e) => onDescriptionchange(e)}\r\n                                        value={questionDesc}\r\n                                        placeholder=\"Question Description\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"col-lg-12 col-sm-6 col-12\" style={{ marginTop: 15 }}>\r\n                                    <FormControl component=\"fieldset\" required>\r\n                                        <h6>Option Type 1<span style={{ color: 'red' }}>*</span></h6>\r\n                                        <RadioGroup\r\n                                            className=\"d-flex flex-row\"\r\n                                            aria-label=\"optiontype1\"\r\n                                            name=\"optiontype1\"\r\n                                            value={option1Type}\r\n                                            onChange={(e) => handleOptionType1(e, 'opt1')}\r\n                                        >\r\n                                            <FormControlLabel value=\"T\" control={<Radio color=\"primary\" />} label=\"Text\" />\r\n                                            <FormControlLabel value=\"I\" control={<Radio color=\"primary\" />} label=\"Image\" />\r\n                                        </RadioGroup>\r\n                                    </FormControl>\r\n                                </div>\r\n                                <div className=\"col-lg-12 col-sm-6 col-12\">\r\n                                    {option1Type === 'T' &&\r\n                                        <div>\r\n                                            <h6>Option 1 <span style={{ color: 'red' }}>*</span></h6>\r\n                                            <Editor\r\n                                                apiKey={TINY_EDITOR_KEY}\r\n                                                onInit={(evt, editor) => opt1EditorRef.current = editor}\r\n                                                initialValue={option1Init}\r\n                                                value={option1}\r\n                                                onEditorChange={(newText) => setOption1(newText)}\r\n                                                init={{\r\n                                                    height: 500,\r\n                                                    menubar: false,\r\n                                                    plugins: 'print preview powerpaste casechange importcss tinydrive searchreplace autolink autosave save directionality advcode visualblocks visualchars fullscreen image link media mediaembed template codesample table charmap hr pagebreak nonbreaking anchor toc insertdatetime advlist lists checklist wordcount tinymcespellchecker a11ychecker textpattern noneditable help formatpainter permanentpen pageembed charmap  mentions quickbars linkchecker emoticons advtable export',\r\n                                                    toolbar: 'undo redo | bold italic underline strikethrough code subscript superscript | fontselect fontsizeselect formatselect | alignleft aligncenter alignright alignjustify | outdent indent |  numlist bullist checklist | forecolor backcolor casechange permanentpen formatpainter removeformat | pagebreak | charmap emoticons | fullscreen  preview save print | insertfile image media table pageembed template link anchor codesample | a11ycheck ltr rtl | tiny_mce_wiris_formulaEditor tiny_mce_wiris_formulaEditorChemistry',\r\n                                                    content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }',\r\n                                                    toolbar_drawer: 'sliding',\r\n                                                    external_plugins: { tiny_mce_wiris: 'https://www.wiris.net/demo/plugins/tiny_mce/plugin.js' },\r\n                                                    file_picker_callback: function (cb, value, meta) {\r\n                                                        var input = document.createElement('input');\r\n                                                        input.setAttribute('type', 'file');\r\n                                                        input.setAttribute('accept', 'image/*');\r\n                                                        input.onchange = function () {\r\n                                                            var file = this.files[0];\r\n                                                            const formData = new FormData();\r\n                                                            formData.append('image', file);\r\n                                                            QuestionRepository.imageUpload(formData).then(imageUploadResult => {\r\n                                                                if (imageUploadResult && imageUploadResult.data && imageUploadResult.data.statusCode === 200) {\r\n                                                                    cb(imageUploadResult.data.data);\r\n                                                                } else {\r\n                                                                    cb();\r\n                                                                }\r\n                                                            }).catch(e => {\r\n                                                                cb();\r\n                                                            });\r\n                                                        };\r\n                                                        input.click();\r\n                                                    },\r\n                                                    images_upload_handler: function (blob, success, failure) {\r\n                                                        var file = blob.blob();\r\n                                                        if (file && file.name) {\r\n                                                            const formData = new FormData();\r\n                                                            formData.append('image', file);\r\n                                                            QuestionRepository.imageUpload(formData).then(imageUploadResult => {\r\n                                                                if (imageUploadResult && imageUploadResult.data && imageUploadResult.data.statusCode === 200) {\r\n                                                                    success(imageUploadResult.data.data);\r\n                                                                } else {\r\n                                                                    failure();\r\n                                                                }\r\n                                                            }).catch(e => {\r\n                                                                failure();\r\n                                                            });\r\n                                                        }\r\n                                                    }\r\n                                                }}\r\n                                            />\r\n                                        </div>\r\n                                    }\r\n                                    {option1Type === 'I' &&\r\n                                        <>\r\n                                            <h6>Image Option 1<span style={{ color: 'red' }}>*</span></h6>\r\n                                            <div className=\"dropzone-card\">\r\n                                                {viewOpt1Dropzone &&\r\n                                                    <div className=\"dropzone\">\r\n                                                        <div className='dropzone-file-btn' style={{ width: '100%' }}\r\n                                                            {...getRootProps({ onClick: event => setOpt('opt1') })}>\r\n                                                            <input {...getInputProps()} />\r\n                                                            <p>Drag 'n' drop some files here, or click to select files</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                }\r\n                                                {viewOpt1Img &&\r\n                                                    <div>\r\n                                                        <div className=\"dropzone-content\" style={thumbsContainer}>\r\n                                                            {screenmode === 'Edit' ? opt1Thumb : opt1Thumb}\r\n                                                        </div>\r\n                                                        <Button onClick={() => deleteImage('opt1')} variant=\"contained\" className=\"jr-btn bg-danger text-white\">\r\n                                                            <i className=\"fas fa-trash\" />\r\n                                                        </Button>\r\n                                                    </div>\r\n                                                }\r\n                                            </div>\r\n                                        </>\r\n                                    }\r\n                                </div>\r\n                                <div className=\"col-lg-12 col-sm-6 col-12\" style={{ marginTop: 10 }}>\r\n                                    <FormControl component=\"fieldset\" required>\r\n                                        <h6>Option Type 2<span style={{ color: 'red' }}>*</span></h6>\r\n                                        <RadioGroup\r\n                                            className=\"d-flex flex-row\"\r\n                                            aria-label=\"optiontype2\"\r\n                                            name=\"optiontype2\"\r\n                                            value={option2Type}\r\n                                            onChange={(e) => handleOptionType2(e, 'opt2')}\r\n                                        >\r\n                                            <FormControlLabel value=\"T\" control={<Radio color=\"primary\" />} label=\"Text\" />\r\n                                            <FormControlLabel value=\"I\" control={<Radio color=\"primary\" />} label=\"Image\" />\r\n                                        </RadioGroup>\r\n                                    </FormControl>\r\n                                </div>\r\n                                <div className=\"col-lg-12 col-sm-6 col-12\">\r\n                                    {option2Type === 'T' &&\r\n                                        <div>\r\n                                            <h6>Option 2 <span style={{ color: 'red' }}>*</span></h6>\r\n                                            <Editor\r\n                                                apiKey={TINY_EDITOR_KEY}\r\n                                                onInit={(evt, editor) => opt2EditorRef.current = editor}\r\n                                                initialValue={option2Init}\r\n                                                value={option2}\r\n                                                onEditorChange={(newText) => setOption2(newText)}\r\n                                                init={{\r\n                                                    height: 500,\r\n                                                    menubar: false,\r\n                                                    plugins: 'print preview powerpaste casechange importcss tinydrive searchreplace autolink autosave save directionality advcode visualblocks visualchars fullscreen image link media mediaembed template codesample table charmap hr pagebreak nonbreaking anchor toc insertdatetime advlist lists checklist wordcount tinymcespellchecker a11ychecker textpattern noneditable help formatpainter permanentpen pageembed charmap  mentions quickbars linkchecker emoticons advtable export',\r\n                                                    toolbar: 'undo redo | bold italic underline strikethrough code subscript superscript | fontselect fontsizeselect formatselect | alignleft aligncenter alignright alignjustify | outdent indent |  numlist bullist checklist | forecolor backcolor casechange permanentpen formatpainter removeformat | pagebreak | charmap emoticons | fullscreen  preview save print | insertfile image media table pageembed template link anchor codesample | a11ycheck ltr rtl | tiny_mce_wiris_formulaEditor tiny_mce_wiris_formulaEditorChemistry',\r\n                                                    content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }',\r\n                                                    toolbar_drawer: 'sliding',\r\n                                                    external_plugins: { tiny_mce_wiris: 'https://www.wiris.net/demo/plugins/tiny_mce/plugin.js' },\r\n                                                    file_picker_callback: function (cb, value, meta) {\r\n                                                        var input = document.createElement('input');\r\n                                                        input.setAttribute('type', 'file');\r\n                                                        input.setAttribute('accept', 'image/*');\r\n                                                        input.onchange = function () {\r\n                                                            var file = this.files[0];\r\n                                                            const formData = new FormData();\r\n                                                            formData.append('image', file);\r\n                                                            QuestionRepository.imageUpload(formData).then(imageUploadResult => {\r\n                                                                if (imageUploadResult && imageUploadResult.data && imageUploadResult.data.statusCode === 200) {\r\n                                                                    cb(imageUploadResult.data.data);\r\n                                                                } else {\r\n                                                                    cb();\r\n                                                                }\r\n                                                            }).catch(e => {\r\n                                                                cb();\r\n                                                            });\r\n                                                        };\r\n                                                        input.click();\r\n                                                    },\r\n                                                    images_upload_handler: function (blob, success, failure) {\r\n                                                        var file = blob.blob();\r\n                                                        if (file && file.name) {\r\n                                                            const formData = new FormData();\r\n                                                            formData.append('image', file);\r\n                                                            QuestionRepository.imageUpload(formData).then(imageUploadResult => {\r\n                                                                if (imageUploadResult && imageUploadResult.data && imageUploadResult.data.statusCode === 200) {\r\n                                                                    success(imageUploadResult.data.data);\r\n                                                                } else {\r\n                                                                    failure();\r\n                                                                }\r\n                                                            }).catch(e => {\r\n                                                                failure();\r\n                                                            });\r\n                                                        }\r\n                                                    }\r\n                                                }}\r\n                                            />\r\n                                        </div>\r\n                                    }\r\n                                    {option2Type === 'I' &&\r\n                                        <div>\r\n                                            <h6>Image Option 2<span style={{ color: 'red' }}>*</span></h6>\r\n                                            <div className=\"dropzone-card\">\r\n                                                {viewOpt2Dropzone &&\r\n                                                    <div className=\"dropzone\">\r\n                                                        <div className='dropzone-file-btn' style={{ width: '100%' }} {...getRootProps({ onClick: event => setOpt('opt2') })}>\r\n                                                            <input {...getInputProps()} />\r\n                                                            <p>Drag 'n' drop some files here, or click to select files</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                }\r\n                                                {viewOpt2Img &&\r\n                                                    <div>\r\n                                                        <div className=\"dropzone-content\" style={thumbsContainer}>\r\n                                                            {screenmode === 'Edit' ? opt2Thumb : opt2Thumb}\r\n                                                        </div>\r\n                                                        <Button onClick={() => deleteImage('opt2')} variant=\"contained\" className=\"jr-btn bg-danger text-white\">\r\n                                                            <i className=\"fas fa-trash\" />\r\n                                                        </Button>\r\n                                                    </div>\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                                <div className=\"col-lg-12 col-sm-6 col-12\" style={{ marginTop: 10 }}>\r\n                                    <FormControl component=\"fieldset\" required>\r\n                                        <h6>Option Type 3<span style={{ color: 'red' }}>*</span></h6>\r\n                                        <RadioGroup\r\n                                            className=\"d-flex flex-row\"\r\n                                            aria-label=\"optiontype3\"\r\n                                            name=\"optiontype3\"\r\n                                            value={option3Type}\r\n                                            onChange={(e) => handleOptionType3(e, 'opt3')}\r\n                                        >\r\n                                            <FormControlLabel value=\"T\" control={<Radio color=\"primary\" />} label=\"Text\" />\r\n                                            <FormControlLabel value=\"I\" control={<Radio color=\"primary\" />} label=\"Image\" />\r\n                                        </RadioGroup>\r\n                                    </FormControl>\r\n                                </div>\r\n                                <div className=\"col-lg-12 col-sm-6 col-12\">\r\n                                    {option3Type === 'T' &&\r\n                                        <div>\r\n                                            <h6>Option 3 <span style={{ color: 'red' }}>*</span></h6>\r\n                                            <Editor\r\n                                                apiKey={TINY_EDITOR_KEY}\r\n                                                onInit={(evt, editor) => opt3EditorRef.current = editor}\r\n                                                initialValue={option3Init}\r\n                                                value={option3}\r\n                                                onEditorChange={(newText) => setOption3(newText)}\r\n                                                init={{\r\n                                                    height: 500,\r\n                                                    menubar: false,\r\n                                                    plugins: 'print preview powerpaste casechange importcss tinydrive searchreplace autolink autosave save directionality advcode visualblocks visualchars fullscreen image link media mediaembed template codesample table charmap hr pagebreak nonbreaking anchor toc insertdatetime advlist lists checklist wordcount tinymcespellchecker a11ychecker textpattern noneditable help formatpainter permanentpen pageembed charmap  mentions quickbars linkchecker emoticons advtable export',\r\n                                                    toolbar: 'undo redo | bold italic underline strikethrough code subscript superscript | fontselect fontsizeselect formatselect | alignleft aligncenter alignright alignjustify | outdent indent |  numlist bullist checklist | forecolor backcolor casechange permanentpen formatpainter removeformat | pagebreak | charmap emoticons | fullscreen  preview save print | insertfile image media table pageembed template link anchor codesample | a11ycheck ltr rtl | tiny_mce_wiris_formulaEditor tiny_mce_wiris_formulaEditorChemistry',\r\n                                                    content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }',\r\n                                                    toolbar_drawer: 'sliding',\r\n                                                    external_plugins: { tiny_mce_wiris: 'https://www.wiris.net/demo/plugins/tiny_mce/plugin.js' },\r\n                                                    file_picker_callback: function (cb, value, meta) {\r\n                                                        var input = document.createElement('input');\r\n                                                        input.setAttribute('type', 'file');\r\n                                                        input.setAttribute('accept', 'image/*');\r\n                                                        input.onchange = function () {\r\n                                                            var file = this.files[0];\r\n                                                            const formData = new FormData();\r\n                                                            formData.append('image', file);\r\n                                                            QuestionRepository.imageUpload(formData).then(imageUploadResult => {\r\n                                                                if (imageUploadResult && imageUploadResult.data && imageUploadResult.data.statusCode === 200) {\r\n                                                                    cb(imageUploadResult.data.data);\r\n                                                                } else {\r\n                                                                    cb();\r\n                                                                }\r\n                                                            }).catch(e => {\r\n                                                                cb();\r\n                                                            });\r\n                                                        };\r\n                                                        input.click();\r\n                                                    },\r\n                                                    images_upload_handler: function (blob, success, failure) {\r\n                                                        var file = blob.blob();\r\n                                                        if (file && file.name) {\r\n                                                            const formData = new FormData();\r\n                                                            formData.append('image', file);\r\n                                                            QuestionRepository.imageUpload(formData).then(imageUploadResult => {\r\n                                                                if (imageUploadResult && imageUploadResult.data && imageUploadResult.data.statusCode === 200) {\r\n                                                                    success(imageUploadResult.data.data);\r\n                                                                } else {\r\n                                                                    failure();\r\n                                                                }\r\n                                                            }).catch(e => {\r\n                                                                failure();\r\n                                                            });\r\n                                                        }\r\n                                                    }\r\n                                                }}\r\n                                            />\r\n                                        </div>\r\n                                    }\r\n                                    {option3Type === 'I' &&\r\n                                        <div>\r\n                                            <h6>Image Option 3<span style={{ color: 'red' }}>*</span></h6>\r\n                                            <div className=\"dropzone-card\">\r\n                                                {viewOpt3Dropzone &&\r\n                                                    <div className=\"dropzone\">\r\n                                                        <div className='dropzone-file-btn' style={{ width: '100%' }} {...getRootProps({ onClick: event => setOpt('opt3') })}>\r\n                                                            <input {...getInputProps()} />\r\n                                                            <p>Drag 'n' drop some files here, or click to select files</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                }\r\n                                                {viewOpt3Img &&\r\n                                                    <div>\r\n                                                        <div className=\"dropzone-content\" style={thumbsContainer}>\r\n                                                            {screenmode === 'Edit' ? opt3Thumb : opt3Thumb}\r\n                                                        </div>\r\n                                                        <Button onClick={() => deleteImage('opt3')} variant=\"contained\" className=\"jr-btn bg-danger text-white\">\r\n                                                            <i className=\"fas fa-trash\" />\r\n                                                        </Button>\r\n                                                    </div>\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                                <div className=\"col-lg-12 col-sm-6 col-12\" style={{ marginTop: 10 }}>\r\n                                    <FormControl component=\"fieldset\" required>\r\n                                        <h6>Option Type 4<span style={{ color: 'red' }}>*</span></h6>\r\n                                        <RadioGroup\r\n                                            className=\"d-flex flex-row\"\r\n                                            aria-label=\"questiontype\"\r\n                                            name=\"questiontype\"\r\n                                            value={option4Type}\r\n                                            onChange={(e) => handleOptionType4(e, 'opt4')}\r\n                                        >\r\n                                            <FormControlLabel value=\"T\" control={<Radio color=\"primary\" />} label=\"Text\" />\r\n                                            <FormControlLabel value=\"I\" control={<Radio color=\"primary\" />} label=\"Image\" />\r\n                                        </RadioGroup>\r\n                                    </FormControl>\r\n                                </div>\r\n                                <div className=\"col-lg-12 col-sm-6 col-12\">\r\n                                    {option4Type === 'T' &&\r\n                                        <div>\r\n                                            <h6>Option 4 <span style={{ color: 'red' }}>*</span></h6>\r\n                                            <Editor\r\n                                                apiKey={TINY_EDITOR_KEY}\r\n                                                onInit={(evt, editor) => opt4EditorRef.current = editor}\r\n                                                initialValue={option4Init}\r\n                                                value={option4}\r\n                                                onEditorChange={(newText) => setOption4(newText)}\r\n                                                init={{\r\n                                                    height: 500,\r\n                                                    menubar: false,\r\n                                                    plugins: 'print preview powerpaste casechange importcss tinydrive searchreplace autolink autosave save directionality advcode visualblocks visualchars fullscreen image link media mediaembed template codesample table charmap hr pagebreak nonbreaking anchor toc insertdatetime advlist lists checklist wordcount tinymcespellchecker a11ychecker textpattern noneditable help formatpainter permanentpen pageembed charmap  mentions quickbars linkchecker emoticons advtable export',\r\n                                                    toolbar: 'undo redo | bold italic underline strikethrough code subscript superscript | fontselect fontsizeselect formatselect | alignleft aligncenter alignright alignjustify | outdent indent |  numlist bullist checklist | forecolor backcolor casechange permanentpen formatpainter removeformat | pagebreak | charmap emoticons | fullscreen  preview save print | insertfile image media table pageembed template link anchor codesample | a11ycheck ltr rtl | tiny_mce_wiris_formulaEditor tiny_mce_wiris_formulaEditorChemistry',\r\n                                                    content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }',\r\n                                                    toolbar_drawer: 'sliding',\r\n                                                    external_plugins: { tiny_mce_wiris: 'https://www.wiris.net/demo/plugins/tiny_mce/plugin.js' },\r\n                                                    file_picker_callback: function (cb, value, meta) {\r\n                                                        var input = document.createElement('input');\r\n                                                        input.setAttribute('type', 'file');\r\n                                                        input.setAttribute('accept', 'image/*');\r\n                                                        input.onchange = function () {\r\n                                                            var file = this.files[0];\r\n                                                            const formData = new FormData();\r\n                                                            formData.append('image', file);\r\n                                                            QuestionRepository.imageUpload(formData).then(imageUploadResult => {\r\n                                                                if (imageUploadResult && imageUploadResult.data && imageUploadResult.data.statusCode === 200) {\r\n                                                                    cb(imageUploadResult.data.data);\r\n                                                                } else {\r\n                                                                    cb();\r\n                                                                }\r\n                                                            }).catch(e => {\r\n                                                                cb();\r\n                                                            });\r\n                                                        };\r\n                                                        input.click();\r\n                                                    },\r\n                                                    images_upload_handler: function (blob, success, failure) {\r\n                                                        var file = blob.blob();\r\n                                                        if (file && file.name) {\r\n                                                            const formData = new FormData();\r\n                                                            formData.append('image', file);\r\n                                                            QuestionRepository.imageUpload(formData).then(imageUploadResult => {\r\n                                                                if (imageUploadResult && imageUploadResult.data && imageUploadResult.data.statusCode === 200) {\r\n                                                                    success(imageUploadResult.data.data);\r\n                                                                } else {\r\n                                                                    failure();\r\n                                                                }\r\n                                                            }).catch(e => {\r\n                                                                failure();\r\n                                                            });\r\n                                                        }\r\n                                                    }\r\n                                                }}\r\n                                            />\r\n                                        </div>\r\n                                    }\r\n                                    {option4Type === 'I' &&\r\n                                        <div>\r\n                                            <h6>Image Option 4<span style={{ color: 'red' }}>*</span></h6>\r\n                                            <div className=\"dropzone-card\">\r\n                                                {viewOpt4Dropzone &&\r\n                                                    <div className=\"dropzone\">\r\n                                                        <div className='dropzone-file-btn' style={{ width: '100%' }} {...getRootProps({ onClick: event => setOpt('opt4') })}>\r\n                                                            <input {...getInputProps()} />\r\n                                                            <p>Drag 'n' drop some files here, or click to select files</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                }\r\n                                                {viewOpt4Img &&\r\n                                                    <div>\r\n                                                        <div className=\"dropzone-content\" style={thumbsContainer}>\r\n                                                            {screenmode === 'Edit' ? opt4Thumb : opt4Thumb}\r\n                                                        </div>\r\n                                                        <Button onClick={() => deleteImage('opt4')} variant=\"contained\" className=\"jr-btn bg-danger text-white\">\r\n                                                            <i className=\"fas fa-trash\" />\r\n                                                        </Button>\r\n                                                    </div>\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                                <div className=\"col-lg-12 col-sm-6 col-12\" style={{ marginTop: 10 }}>\r\n                                    <FormControl component=\"fieldset\" required>\r\n                                        <h6>Option Type 5<span style={{ color: 'red' }}>*</span></h6>\r\n                                        <RadioGroup\r\n                                            className=\"d-flex flex-row\"\r\n                                            aria-label=\"questiontype\"\r\n                                            name=\"questiontype\"\r\n                                            value={option5Type}\r\n                                            onChange={(e) => handleOptionType5(e, 'opt5')}\r\n                                        >\r\n                                            <FormControlLabel value=\"T\" control={<Radio color=\"primary\" />} label=\"Text\" />\r\n                                            <FormControlLabel value=\"I\" control={<Radio color=\"primary\" />} label=\"Image\" />\r\n                                        </RadioGroup>\r\n                                    </FormControl>\r\n                                </div>\r\n                                <div className=\"col-lg-12 col-sm-6 col-12\">\r\n                                    {option5Type === 'T' &&\r\n                                        <div>\r\n                                            <h6>Option 5 <span style={{ color: 'red' }}>*</span></h6>\r\n                                            <Editor\r\n                                                apiKey={TINY_EDITOR_KEY}\r\n                                                onInit={(evt, editor) => opt5EditorRef.current = editor}\r\n                                                initialValue={option5Init}\r\n                                                value={option5}\r\n                                                onEditorChange={(newText) => setOption5(newText)}\r\n                                                init={{\r\n                                                    height: 500,\r\n                                                    menubar: false,\r\n                                                    plugins: 'print preview powerpaste casechange importcss tinydrive searchreplace autolink autosave save directionality advcode visualblocks visualchars fullscreen image link media mediaembed template codesample table charmap hr pagebreak nonbreaking anchor toc insertdatetime advlist lists checklist wordcount tinymcespellchecker a11ychecker textpattern noneditable help formatpainter permanentpen pageembed charmap  mentions quickbars linkchecker emoticons advtable export',\r\n                                                    toolbar: 'undo redo | bold italic underline strikethrough code subscript superscript | fontselect fontsizeselect formatselect | alignleft aligncenter alignright alignjustify | outdent indent |  numlist bullist checklist | forecolor backcolor casechange permanentpen formatpainter removeformat | pagebreak | charmap emoticons | fullscreen  preview save print | insertfile image media table pageembed template link anchor codesample | a11ycheck ltr rtl | tiny_mce_wiris_formulaEditor tiny_mce_wiris_formulaEditorChemistry',\r\n                                                    content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }',\r\n                                                    toolbar_drawer: 'sliding',\r\n                                                    external_plugins: { tiny_mce_wiris: 'https://www.wiris.net/demo/plugins/tiny_mce/plugin.js' },\r\n                                                    file_picker_callback: function (cb, value, meta) {\r\n                                                        var input = document.createElement('input');\r\n                                                        input.setAttribute('type', 'file');\r\n                                                        input.setAttribute('accept', 'image/*');\r\n                                                        input.onchange = function () {\r\n                                                            var file = this.files[0];\r\n                                                            const formData = new FormData();\r\n                                                            formData.append('image', file);\r\n                                                            QuestionRepository.imageUpload(formData).then(imageUploadResult => {\r\n                                                                if (imageUploadResult && imageUploadResult.data && imageUploadResult.data.statusCode === 200) {\r\n                                                                    cb(imageUploadResult.data.data);\r\n                                                                } else {\r\n                                                                    cb();\r\n                                                                }\r\n                                                            }).catch(e => {\r\n                                                                cb();\r\n                                                            });\r\n                                                        };\r\n                                                        input.click();\r\n                                                    },\r\n                                                    images_upload_handler: function (blob, success, failure) {\r\n                                                        var file = blob.blob();\r\n                                                        if (file && file.name) {\r\n                                                            const formData = new FormData();\r\n                                                            formData.append('image', file);\r\n                                                            QuestionRepository.imageUpload(formData).then(imageUploadResult => {\r\n                                                                if (imageUploadResult && imageUploadResult.data && imageUploadResult.data.statusCode === 200) {\r\n                                                                    success(imageUploadResult.data.data);\r\n                                                                } else {\r\n                                                                    failure();\r\n                                                                }\r\n                                                            }).catch(e => {\r\n                                                                failure();\r\n                                                            });\r\n                                                        }\r\n                                                    }\r\n                                                }}\r\n                                            />\r\n                                        </div>\r\n                                    }\r\n                                    {option5Type === 'I' &&\r\n                                        <div>\r\n                                            <h6>Image Option 5<span style={{ color: 'red' }}>*</span></h6>\r\n                                            <div className=\"dropzone-card\">\r\n                                                {viewOpt5Dropzone &&\r\n                                                    <div className=\"dropzone\">\r\n                                                        <div className='dropzone-file-btn' style={{ width: '100%' }} {...getRootProps({ onClick: event => setOpt('opt5') })}>\r\n                                                            <input {...getInputProps()} />\r\n                                                            <p>Drag 'n' drop some files here, or click to select files</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                }\r\n                                                {viewOpt5Img &&\r\n                                                    <div>\r\n                                                        <div className=\"dropzone-content\" style={thumbsContainer}>\r\n                                                            {screenmode === 'Edit' ? opt5Thumb : opt5Thumb}\r\n                                                        </div>\r\n                                                        <Button onClick={() => deleteImage('opt5')} variant=\"contained\" className=\"jr-btn bg-danger text-white\">\r\n                                                            <i className=\"fas fa-trash\" />\r\n                                                        </Button>\r\n                                                    </div>\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                                <div style={{ paddingTop: '2%' }} className=\"col-lg-12 col-sm-6 col-12\">\r\n                                    <input onChange={(e) => onCorrectAnsChange(e)} value={correctAnswer} type=\"text\" placeholder=\"Correct Answer\" className=\"form-control form-control-lg\" />\r\n                                </div>\r\n                                <div style={{ paddingTop: '2%' }} className=\"col-lg-12 col-sm-6 col-12\">\r\n                                    <FormControl component=\"fieldset\" required>\r\n                                        <h6>Difficulty Level<span style={{ color: 'red' }}>*</span></h6>\r\n                                        <RadioGroup\r\n                                            className=\"d-flex flex-row\"\r\n                                            aria-label=\"difficultylevel\"\r\n                                            name=\"difficultylevel\"\r\n                                            value={difficultyLevel}\r\n                                            onChange={(e) => handleDifficultyLevel(e)}\r\n                                        >\r\n                                            <FormControlLabel value=\"1\" control={<Radio color=\"primary\" />} label=\"Level 1\" />\r\n                                            <FormControlLabel value=\"2\" control={<Radio color=\"primary\" />} label=\"Level 2\" />\r\n                                            <FormControlLabel value=\"3\" control={<Radio color=\"primary\" />} label=\"Level 3\" />\r\n                                            <FormControlLabel value=\"4\" control={<Radio color=\"primary\" />} label=\"Level 4\" />\r\n                                        </RadioGroup>\r\n                                    </FormControl>\r\n                                </div>\r\n                                <div style={{ paddingTop: '2%', textAlign: 'right' }} className=\"col-lg-6 col-sm-6 col-12\">\r\n                                    <Button onClick={() => saveQuestion()} variant=\"contained\" color=\"primary\" className=\"jr-btn text-white\">\r\n                                        Submit\r\n                                    </Button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Spin>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default AddEditQuestion;\r\n"]},"metadata":{},"sourceType":"module"}