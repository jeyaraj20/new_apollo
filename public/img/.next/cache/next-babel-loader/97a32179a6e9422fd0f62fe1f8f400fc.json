{"ast":null,"code":"import { all, put, call, takeEvery } from 'redux-saga/effects';\nimport { actionTypes, getAllAnnouncementsSuccess, getInactiveAnnouncementsSuccess } from './action';\nimport AnnouncementsRepository from '../../repositories/AnnouncementsRepository';\n\nfunction* getAllAnnouncementsSaga({\n  payload\n}) {\n  try {\n    const data = yield call(AnnouncementsRepository.getAllAnnouncements, payload);\n    yield put(getAllAnnouncementsSuccess(data));\n  } catch (err) {\n    yield put(getAllAnnouncementsSuccess(null));\n  }\n}\n\nfunction* getInactiveAnnouncementsSaga({\n  payload\n}) {\n  try {\n    const data = yield call(AnnouncementsRepository.getInactiveAnnouncements, payload);\n    yield put(getInactiveAnnouncementsSuccess(data));\n  } catch (err) {\n    yield put(getInactiveAnnouncementsSuccess(null));\n  }\n}\n\nexport default function* rootSaga() {\n  yield all([takeEvery(actionTypes.GET_ALL_ANNOUNCEMENTS_REQUEST, getAllAnnouncementsSaga)]);\n  yield all([takeEvery(actionTypes.GET_INACTIVE_ANNOUNCEMENTS_REQUEST, getInactiveAnnouncementsSaga)]);\n}","map":{"version":3,"sources":["D:/Question_cloud/question_cloud_admin_web_new/store/Announcements/saga.js"],"names":["all","put","call","takeEvery","actionTypes","getAllAnnouncementsSuccess","getInactiveAnnouncementsSuccess","AnnouncementsRepository","getAllAnnouncementsSaga","payload","data","getAllAnnouncements","err","getInactiveAnnouncementsSaga","getInactiveAnnouncements","rootSaga","GET_ALL_ANNOUNCEMENTS_REQUEST","GET_INACTIVE_ANNOUNCEMENTS_REQUEST"],"mappings":"AAAA,SAASA,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,SAAzB,QAA0C,oBAA1C;AAEA,SAASC,WAAT,EAAsBC,0BAAtB,EAAkDC,+BAAlD,QAAyF,UAAzF;AAEA,OAAOC,uBAAP,MAAoC,4CAApC;;AAEA,UAAUC,uBAAV,CAAkC;AAAEC,EAAAA;AAAF,CAAlC,EAA+C;AAC3C,MAAI;AACA,UAAMC,IAAI,GAAG,MAAMR,IAAI,CAACK,uBAAuB,CAACI,mBAAzB,EAA8CF,OAA9C,CAAvB;AACA,UAAMR,GAAG,CAACI,0BAA0B,CAACK,IAAD,CAA3B,CAAT;AACH,GAHD,CAGE,OAAOE,GAAP,EAAY;AACV,UAAMX,GAAG,CAACI,0BAA0B,CAAC,IAAD,CAA3B,CAAT;AACH;AACJ;;AAED,UAAUQ,4BAAV,CAAuC;AAAEJ,EAAAA;AAAF,CAAvC,EAAoD;AAChD,MAAI;AACA,UAAMC,IAAI,GAAG,MAAMR,IAAI,CAACK,uBAAuB,CAACO,wBAAzB,EAAmDL,OAAnD,CAAvB;AACA,UAAMR,GAAG,CAACK,+BAA+B,CAACI,IAAD,CAAhC,CAAT;AACH,GAHD,CAGE,OAAOE,GAAP,EAAY;AACV,UAAMX,GAAG,CAACK,+BAA+B,CAAC,IAAD,CAAhC,CAAT;AACH;AACJ;;AAED,eAAe,UAAUS,QAAV,GAAqB;AAChC,QAAMf,GAAG,CAAC,CAACG,SAAS,CAACC,WAAW,CAACY,6BAAb,EAA4CR,uBAA5C,CAAV,CAAD,CAAT;AACA,QAAMR,GAAG,CAAC,CAACG,SAAS,CAACC,WAAW,CAACa,kCAAb,EAAiDJ,4BAAjD,CAAV,CAAD,CAAT;AACH","sourcesContent":["import { all, put, call, takeEvery } from 'redux-saga/effects';\r\n\r\nimport { actionTypes, getAllAnnouncementsSuccess, getInactiveAnnouncementsSuccess } from './action';\r\n\r\nimport AnnouncementsRepository from '../../repositories/AnnouncementsRepository';\r\n\r\nfunction* getAllAnnouncementsSaga({ payload }) {\r\n    try {\r\n        const data = yield call(AnnouncementsRepository.getAllAnnouncements, payload);\r\n        yield put(getAllAnnouncementsSuccess(data));\r\n    } catch (err) {\r\n        yield put(getAllAnnouncementsSuccess(null));\r\n    }\r\n}\r\n\r\nfunction* getInactiveAnnouncementsSaga({ payload }) {\r\n    try {\r\n        const data = yield call(AnnouncementsRepository.getInactiveAnnouncements, payload);\r\n        yield put(getInactiveAnnouncementsSuccess(data));\r\n    } catch (err) {\r\n        yield put(getInactiveAnnouncementsSuccess(null));\r\n    }\r\n}\r\n\r\nexport default function* rootSaga() {\r\n    yield all([takeEvery(actionTypes.GET_ALL_ANNOUNCEMENTS_REQUEST, getAllAnnouncementsSaga)]);\r\n    yield all([takeEvery(actionTypes.GET_INACTIVE_ANNOUNCEMENTS_REQUEST, getInactiveAnnouncementsSaga)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}