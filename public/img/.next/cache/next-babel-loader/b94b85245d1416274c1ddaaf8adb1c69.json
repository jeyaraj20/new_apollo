{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\Question_cloud\\\\question_cloud_admin_web_new\\\\components\\\\tables\\\\State.jsx\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Checkbox, Table } from 'antd';\n\nvar TableState = function TableState(_ref) {\n  var allState = _ref.allState,\n      editModalOnClick = _ref.editModalOnClick,\n      deleteOneAnnouncements = _ref.deleteOneAnnouncements,\n      onSelectAll = _ref.onSelectAll,\n      onSelectOne = _ref.onSelectOne,\n      selectAll = _ref.selectAll,\n      selectedHomeCatIds = _ref.selectedHomeCatIds,\n      mainPositionOnChange = _ref.mainPositionOnChange,\n      posotionChangeCategorys = _ref.posotionChangeCategorys;\n  var columns = [{\n    title: 'Announcements',\n    dataIndex: 'Announcements'\n  }, {\n    title: 'Position',\n    dataIndex: 'position'\n  }, {\n    title: 'Edit',\n    dataIndex: 'edit'\n  }, {\n    title: 'Delete',\n    dataIndex: 'delete'\n  }, {\n    title: __jsx(Checkbox, {\n      checked: selectAll,\n      onClick: function onClick(e) {\n        return onSelectAll(e.target.checked);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 14\n      }\n    }),\n    dataIndex: 'check'\n  }];\n  var data = allState.map(function (a) {\n    var position = posotionChangeCategorys.filter(function (p) {\n      return p.AnnouncementsId === a.Announcements_id;\n    });\n    var obj = {\n      key: a.Announcements_id,\n      Announcements: a.Announcements,\n      position: __jsx(\"input\", {\n        type: \"text\",\n        onChange: function onChange(event) {\n          return mainPositionOnChange(a.Announcements_id, event.target.value);\n        },\n        style: {\n          width: '50px',\n          textAlign: 'center',\n          padding: '0px'\n        },\n        value: position && position.length > 0 ? position[0].position : a.Announcements_pos,\n        className: \"form-control form-control-lg\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }\n      }),\n      edit: __jsx(\"i\", {\n        className: \"fas fa-pen\",\n        onClick: function onClick() {\n          return editModalOnClick(a);\n        },\n        style: {\n          cursor: 'pointer'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 14\n        }\n      }),\n      \"delete\": __jsx(\"i\", {\n        className: \"fa fa-trash\",\n        onClick: function onClick() {\n          return deleteOneAnnouncements(a);\n        },\n        style: {\n          cursor: 'pointer'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }\n      }),\n      check: __jsx(Checkbox, {\n        onClick: function onClick() {\n          return onSelectOne(a.Announcements_id);\n        },\n        checked: selectedHomeCatIds.indexOf(a.Announcements_id) >= 0,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }\n      })\n    };\n    return obj;\n  });\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, __jsx(Table, {\n    columns: columns,\n    dataSource: data,\n    pagination: false,\n    bordered: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  })));\n};\n\n_c = TableState;\nexport default TableState;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableState\");","map":{"version":3,"sources":["D:/Question_cloud/question_cloud_admin_web_new/components/tables/State.jsx"],"names":["React","Checkbox","Table","TableState","allState","editModalOnClick","deleteOneAnnouncements","onSelectAll","onSelectOne","selectAll","selectedHomeCatIds","mainPositionOnChange","posotionChangeCategorys","columns","title","dataIndex","e","target","checked","data","map","a","position","filter","p","AnnouncementsId","Announcements_id","obj","key","Announcements","event","value","width","textAlign","padding","length","Announcements_pos","edit","cursor","check","indexOf"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Checkbox, Table } from 'antd';\r\n\r\nconst TableState= ({ allState, editModalOnClick,deleteOneAnnouncements, onSelectAll, onSelectOne, selectAll, selectedHomeCatIds, mainPositionOnChange, posotionChangeCategorys }) => {\r\n  const columns = [\r\n  \r\n    {\r\n      title: 'Announcements',\r\n      dataIndex: 'Announcements',\r\n    },\r\n    {\r\n      title: 'Position',\r\n      dataIndex: 'position',\r\n    },\r\n    {\r\n      title: 'Edit',\r\n      dataIndex: 'edit',\r\n    },\r\n    {\r\n      title: 'Delete',\r\n      dataIndex: 'delete',\r\n    },\r\n    {\r\n      title: <Checkbox checked={selectAll} onClick={(e) => onSelectAll(e.target.checked)}></Checkbox>,\r\n      dataIndex: 'check'\r\n    }\r\n  ];\r\n  \r\n  let data = allState.map(a => {\r\n    let position = posotionChangeCategorys.filter(p => p.AnnouncementsId === a.Announcements_id);\r\n    let obj = {\r\n      key: a.Announcements_id,\r\n      Announcements: a.Announcements,\r\n      position: (\r\n        <input\r\n          type=\"text\"\r\n          onChange={event => mainPositionOnChange(a.Announcements_id, event.target.value)}\r\n          style={{ width: '50px', textAlign: 'center', padding: '0px' }}\r\n          value={position && position.length > 0 ? position[0].position : a.Announcements_pos}\r\n          className=\"form-control form-control-lg\"\r\n        />\r\n      ),\r\n      edit: (<i className=\"fas fa-pen\" onClick={() => editModalOnClick(a)} style={{ cursor: 'pointer' }}></i>),\r\n      delete : (<i className=\"fa fa-trash\" onClick={() => deleteOneAnnouncements(a)} style={{cursor: 'pointer'}}></i>),\r\n\r\n      check: (\r\n        <Checkbox\r\n          onClick={() => onSelectOne(a.Announcements_id)}\r\n          checked={selectedHomeCatIds.indexOf(a.Announcements_id) >= 0}\r\n        />\r\n      )\r\n    }\r\n    return (obj);\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Table columns={columns} dataSource={data} pagination={false} bordered />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableState;\r\n"]},"metadata":{},"sourceType":"module"}