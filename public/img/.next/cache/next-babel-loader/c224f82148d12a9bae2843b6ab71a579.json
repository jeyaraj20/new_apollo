{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(getAllAnnouncementsSaga),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(getInactiveAnnouncementsSaga),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport { all, put, call, takeEvery } from 'redux-saga/effects';\nimport { actionTypes, getAllAnnouncementsSuccess, getInactiveAnnouncementsSuccess } from './action';\nimport AnnouncementsRepository from '../../repositories/AnnouncementsRepository';\n\nfunction getAllAnnouncementsSaga(_ref) {\n  var payload, data;\n  return _regeneratorRuntime.wrap(function getAllAnnouncementsSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          payload = _ref.payload;\n          _context.prev = 1;\n          _context.next = 4;\n          return call(AnnouncementsRepository.getAllAnnouncements, payload);\n\n        case 4:\n          data = _context.sent;\n          _context.next = 7;\n          return put(getAllAnnouncementsSuccess(data));\n\n        case 7:\n          _context.next = 13;\n          break;\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](1);\n          _context.next = 13;\n          return put(getAllAnnouncementsSuccess(null));\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[1, 9]]);\n}\n\nfunction getInactiveAnnouncementsSaga(_ref2) {\n  var payload, data;\n  return _regeneratorRuntime.wrap(function getInactiveAnnouncementsSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          payload = _ref2.payload;\n          _context2.prev = 1;\n          _context2.next = 4;\n          return call(AnnouncementsRepository.getInactiveAnnouncements, payload);\n\n        case 4:\n          data = _context2.sent;\n          _context2.next = 7;\n          return put(getInactiveAnnouncementsSuccess(data));\n\n        case 7:\n          _context2.next = 13;\n          break;\n\n        case 9:\n          _context2.prev = 9;\n          _context2.t0 = _context2[\"catch\"](1);\n          _context2.next = 13;\n          return put(getInactiveAnnouncementsSuccess(null));\n\n        case 13:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[1, 9]]);\n}\n\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return all([takeEvery(actionTypes.GET_ALL_ANNOUNCEMENTS_REQUEST, getAllAnnouncementsSaga)]);\n\n        case 2:\n          _context3.next = 4;\n          return all([takeEvery(actionTypes.GET_INACTIVE_ANNOUNCEMENTS_REQUEST, getInactiveAnnouncementsSaga)]);\n\n        case 4:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}","map":{"version":3,"sources":["F:/newapollo/store/Announcements/saga.js"],"names":["getAllAnnouncementsSaga","getInactiveAnnouncementsSaga","rootSaga","all","put","call","takeEvery","actionTypes","getAllAnnouncementsSuccess","getInactiveAnnouncementsSuccess","AnnouncementsRepository","payload","getAllAnnouncements","data","getInactiveAnnouncements","GET_ALL_ANNOUNCEMENTS_REQUEST","GET_INACTIVE_ANNOUNCEMENTS_REQUEST"],"mappings":";;oDAMUA,uB;qDASAC,4B;qDASeC,Q;;AAxBzB,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,SAAzB,QAA0C,oBAA1C;AAEA,SAASC,WAAT,EAAsBC,0BAAtB,EAAkDC,+BAAlD,QAAyF,UAAzF;AAEA,OAAOC,uBAAP,MAAoC,4CAApC;;AAEA,SAAUV,uBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoCW,UAAAA,OAApC,QAAoCA,OAApC;AAAA;AAAA;AAEqB,iBAAMN,IAAI,CAACK,uBAAuB,CAACE,mBAAzB,EAA8CD,OAA9C,CAAV;;AAFrB;AAEcE,UAAAA,IAFd;AAAA;AAGQ,iBAAMT,GAAG,CAACI,0BAA0B,CAACK,IAAD,CAA3B,CAAT;;AAHR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAKQ,iBAAMT,GAAG,CAACI,0BAA0B,CAAC,IAAD,CAA3B,CAAT;;AALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASA,SAAUP,4BAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyCU,UAAAA,OAAzC,SAAyCA,OAAzC;AAAA;AAAA;AAEqB,iBAAMN,IAAI,CAACK,uBAAuB,CAACI,wBAAzB,EAAmDH,OAAnD,CAAV;;AAFrB;AAEcE,UAAAA,IAFd;AAAA;AAGQ,iBAAMT,GAAG,CAACK,+BAA+B,CAACI,IAAD,CAAhC,CAAT;;AAHR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAKQ,iBAAMT,GAAG,CAACK,+BAA+B,CAAC,IAAD,CAAhC,CAAT;;AALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASA,eAAe,SAAUP,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACX,iBAAMC,GAAG,CAAC,CAACG,SAAS,CAACC,WAAW,CAACQ,6BAAb,EAA4Cf,uBAA5C,CAAV,CAAD,CAAT;;AADW;AAAA;AAEX,iBAAMG,GAAG,CAAC,CAACG,SAAS,CAACC,WAAW,CAACS,kCAAb,EAAiDf,4BAAjD,CAAV,CAAD,CAAT;;AAFW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { all, put, call, takeEvery } from 'redux-saga/effects';\r\n\r\nimport { actionTypes, getAllAnnouncementsSuccess, getInactiveAnnouncementsSuccess } from './action';\r\n\r\nimport AnnouncementsRepository from '../../repositories/AnnouncementsRepository';\r\n\r\nfunction* getAllAnnouncementsSaga({ payload }) {\r\n    try {\r\n        const data = yield call(AnnouncementsRepository.getAllAnnouncements, payload);\r\n        yield put(getAllAnnouncementsSuccess(data));\r\n    } catch (err) {\r\n        yield put(getAllAnnouncementsSuccess(null));\r\n    }\r\n}\r\n\r\nfunction* getInactiveAnnouncementsSaga({ payload }) {\r\n    try {\r\n        const data = yield call(AnnouncementsRepository.getInactiveAnnouncements, payload);\r\n        yield put(getInactiveAnnouncementsSuccess(data));\r\n    } catch (err) {\r\n        yield put(getInactiveAnnouncementsSuccess(null));\r\n    }\r\n}\r\n\r\nexport default function* rootSaga() {\r\n    yield all([takeEvery(actionTypes.GET_ALL_ANNOUNCEMENTS_REQUEST, getAllAnnouncementsSaga)]);\r\n    yield all([takeEvery(actionTypes.GET_INACTIVE_ANNOUNCEMENTS_REQUEST, getInactiveAnnouncementsSaga)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}