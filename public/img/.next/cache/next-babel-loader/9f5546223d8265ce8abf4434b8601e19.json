{"ast":null,"code":"var _jsxFileName = \"D:\\\\Question_cloud\\\\question_cloud_admin_web_new\\\\pages\\\\examinationCalendar\\\\exams\\\\index.jsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Modal, Spin, notification, Pagination, Tabs, Select } from 'antd';\nimport Link from 'next/link';\nimport Button from '@material-ui/core/Button';\nimport HeaderDashboard from '../../../components/header/HeaderDashboard';\nimport Sidebar from '../../../components/sections/sidebar';\nimport TableExams from '../../../components/tables/TableExams';\nimport { getQuery } from '../../../helper/auth';\nimport { getActiveExams, getInactiveExams } from '../../../store/exams/action';\nimport ExaminationCalendarRepository from '../../../repositories/ExaminationCalendarRepository';\n\nconst Home = props => {\n  const {\n    TabPane\n  } = Tabs;\n  const {\n    Option\n  } = Select;\n  const dispatch = useDispatch();\n  const {\n    auth\n  } = useSelector(({\n    auth\n  }) => auth);\n  const {\n    allExaminationCalendary,\n    totalActiveCount,\n    inactiveExaminationCalendar,\n    totalInactiveCount\n  } = useSelector(({\n    Exams\n  }) => Exams);\n  const {\n    0: showModal,\n    1: setShowModal\n  } = useState(false);\n  const {\n    0: mainCatId,\n    1: setMainCatId\n  } = useState('');\n  const {\n    0: mainCatName,\n    1: setMainCatName\n  } = useState('');\n  const {\n    0: loader,\n    1: setLoader\n  } = useState(false);\n  const {\n    0: currentPage,\n    1: setCurrentPage\n  } = useState(1);\n  const {\n    0: pageSizeTotal,\n    1: setPageSizeTotal\n  } = useState(10);\n  const {\n    0: tab,\n    1: setTab\n  } = useState('');\n  const {\n    0: selectAll,\n    1: setSelectAll\n  } = useState(false);\n  const {\n    0: selectedCatIds,\n    1: setSelectedCatIds\n  } = useState([]);\n  const {\n    0: action,\n    1: setAction\n  } = useState('');\n  const {\n    0: errors,\n    1: setErrors\n  } = useState({});\n  const {\n    0: examinationDate,\n    1: setExaminationDate\n  } = useState('');\n  const {\n    0: notificationDate,\n    1: setNotificationDate\n  } = useState('');\n  const {\n    0: position,\n    1: setPosition\n  } = useState('');\n  const {\n    0: name,\n    1: setName\n  } = useState('');\n  const {\n    0: slug,\n    1: setSlug\n  } = useState('');\n  const {\n    0: search,\n    1: setSearch\n  } = useState('');\n  useEffect(() => {\n    let local = JSON.parse(localStorage.getItem('persist:QuestionCloudAdmin'));\n    let localAuth = local && local.auth ? JSON.parse(local.auth) : {};\n\n    if (localAuth && !localAuth.isLoggedIn) {\n      window.location.href = \"/\";\n    }\n  }, [auth]);\n  useEffect(() => {\n    let query = getQuery();\n    console.log(query.length, \"qwerty\");\n    setLoader(true);\n    let ctr = {\n      _start: currentPage === 1 ? 0 : (currentPage - 1) * pageSizeTotal,\n      _limit: pageSizeTotal,\n      mainExamId: query.exam_id,\n      status: \"Y\"\n    };\n    console.log(ctr, \"12345j\");\n    console.log(ctr, \"12345j\");\n    let ctr1 = {\n      _start: currentPage === 1 ? 0 : (currentPage - 1) * pageSizeTotal,\n      _limit: pageSizeTotal,\n      mainExamId: query.exam_id,\n      status: \"N\"\n    };\n    setMainCatId(query.exam_id);\n    setMainCatName(query.exam_name);\n    dispatch(getActiveExams(ctr));\n    dispatch(getInactiveExams(ctr1));\n    closeModalOnClick();\n    let tab = query.status === 'Y' ? 'active' : 'inactive';\n    setTab(tab);\n  }, []);\n  useEffect(() => {\n    setLoader(false);\n  }, [allExaminationCalendary]);\n\n  const editModalOnClick = async data => {\n    setLoader(true);\n    setMainCatName(data.exam_name);\n    setMainCatId(data.exam_id);\n    setLoader(false);\n    setShowModal(true);\n  };\n\n  const closeModalOnClick = () => {\n    setName('');\n    setPosition('');\n    setSlug('');\n    setErrors({});\n    setShowModal(false);\n  };\n\n  const pageSizeChange = async (page, pageSize) => {\n    setLoader(true);\n    let ctr = {\n      _start: page === 1 ? 0 : (page - 1) * pageSize,\n      _limit: pageSize,\n      exam_id: mainCatId\n    };\n\n    if (search) {\n      ctr.search = search;\n    }\n\n    if (tab === \"active\") {\n      ctr['status'] = 'Y';\n      dispatch(getActiveExams(ctr));\n    } else {\n      ctr['status'] = 'N';\n      dispatch(getInactiveExams(ctr));\n    }\n\n    setCurrentPage(page);\n    setPageSizeTotal(pageSize);\n  };\n\n  const changeTab = tab => {\n    setLoader(true);\n    let ctr = {\n      _start: 0,\n      _limit: 10,\n      exam_id: mainCatId\n    };\n\n    if (tab === \"active\") {\n      ctr['status'] = 'Y';\n      dispatch(getActiveExams(ctr));\n    } else {\n      ctr['status'] = 'N';\n      dispatch(getInactiveExams(ctr));\n    }\n\n    setCurrentPage(1);\n    setPageSizeTotal(10);\n    setSelectedCatIds([]);\n    setSelectAll(false);\n    setAction('');\n    setSearch('');\n    setTab(tab);\n  };\n\n  const onSelectAll = value => {\n    let array = [];\n\n    if (value) {\n      if (tab === 'active') {\n        array = allExaminationCalendary.map(h => h.exam_id);\n      } else {\n        array = inactiveExaminationCalendar.map(h => h.exam_id);\n      }\n    }\n\n    setSelectedCatIds(array);\n    setSelectAll(value);\n  };\n\n  const saveOnClick = () => {\n    if (mainCatId) {\n      edit();\n    } else {\n      save();\n    }\n  };\n\n  const onSelectOne = id => {\n    let array = [...selectedCatIds];\n    let array1 = tab === 'active' ? [...allExaminationCalendary] : tab === 'inactive' ? [...waitingQuestions] : [...inactiveExaminationCalendar];\n    let index = array.indexOf(id);\n\n    if (index >= 0) {\n      array.splice(index, 1);\n    } else {\n      array.push(id);\n    }\n\n    if (array.length === array1.length) {\n      setSelectAll(true);\n    } else {\n      setSelectAll(false);\n    }\n\n    setSelectedCatIds(array);\n  };\n\n  const actionOnChange = action => {\n    setAction(action);\n  };\n\n  const goOnClick = async () => {\n    let selectedHomeCatIdsArr = [...selectedCatIds];\n    let obj = {\n      qid: selectedHomeCatIdsArr\n    };\n\n    if (selectedHomeCatIdsArr && selectedHomeCatIdsArr.length > 0 && action) {\n      setLoader(true);\n\n      if (action === \"active\") {\n        obj['status'] = 'Y';\n        await ExaminationCalendarRepository.inactiveCategory(obj);\n        notification.success({\n          message: 'Quetions Updated Successfully.'\n        });\n      }\n\n      if (action === \"inactive\") {\n        obj['status'] = 'N';\n        await ExaminationCalendarRepository.inactiveCategory(obj);\n        notification.success({\n          message: 'Quetions Updated Successfully.'\n        });\n      }\n\n      if (action === \"delete\") {\n        await ExaminationCalendarRepository.deleteCategory(obj);\n        notification.success({\n          message: 'Quetions Deleted Successfully.'\n        });\n      }\n\n      setSelectedCatIds([]);\n      let ctr = {\n        _start: currentPage === 1 ? 0 : (currentPage - 1) * pageSizeTotal,\n        _limit: pageSizeTotal,\n        exam_id: mainCatId,\n        status: \"Y\"\n      };\n      let ctr1 = {\n        _start: currentPage === 1 ? 0 : (currentPage - 1) * pageSizeTotal,\n        _limit: pageSizeTotal,\n        exam_id: mainCatId,\n        status: \"N\"\n      };\n\n      if (search) {\n        ctr.search = search;\n        ctr1.search = search;\n      }\n\n      dispatch(getActiveExams(ctr));\n      dispatch(getInactiveExams(ctr1));\n      closeModalOnClick();\n    } else {\n      if (!action) {\n        Modal.error({\n          title: 'Please Select Action'\n        });\n      } else if (!selectedHomeCatIdsArr.length) {\n        Modal.error({\n          title: 'Please Select One Category'\n        });\n      }\n    }\n  };\n\n  const searchOnChange = search => {\n    setLoader(true);\n    let ctr = {\n      _start: 0,\n      _limit: 10,\n      exam_id: mainCatId\n    };\n    ctr['search'] = search;\n\n    if (tab === \"active\") {\n      ctr['status'] = 'Y';\n      dispatch(getActiveExams(ctr));\n    } else {\n      ctr['status'] = 'N';\n      dispatch(getInactiveExams(ctr));\n    }\n\n    setSearch(search);\n    setCurrentPage(1);\n  };\n\n  const resetOnClick = () => {\n    setLoader(true);\n    let ctr = {\n      _start: 0,\n      _limit: 10,\n      exam_id: mainCatId\n    };\n\n    if (tab === \"active\") {\n      ctr['status'] = 'Y';\n      dispatch(getActiveExams(ctr));\n    } else {\n      ctr['status'] = 'N';\n      dispatch(getInactiveExams(ctr));\n    }\n\n    setSearch('');\n    setCurrentPage(1);\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 9\n    }\n  }, __jsx(Modal, {\n    visible: showModal,\n    okText: 'Save',\n    onCancel: closeModalOnClick,\n    title: mainCatId ? \"Edit Q Bank Sub Category\" : \"Add New Q Bank Sub Category\",\n    width: 800,\n    onOk: saveOnClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 15\n    }\n  }, __jsx(Spin, {\n    spinning: loader,\n    tip: 'Loading...',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 18\n    }\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 29\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 33\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 37\n    }\n  }, \"Exam Main Name \", __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 59\n    }\n  }, \"*\")), __jsx(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    value: name,\n    placeholder: \"\",\n    onChange: e => nameOnChange(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 37\n    }\n  }), errors['name'] && __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 41\n    }\n  }, errors['name'])), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 33\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 37\n    }\n  }, \"Exam slug \", __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 54\n    }\n  }, \"*\")), __jsx(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    value: name,\n    placeholder: \"\",\n    onChange: e => slugOnChange(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 37\n    }\n  }), errors['name'] && __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 41\n    }\n  }, errors['name'])), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 33\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 37\n    }\n  }, \"Position \", __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 53\n    }\n  }, \"*\")), __jsx(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    value: position,\n    placeholder: \"\",\n    onChange: e => positionOnChange(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 37\n    }\n  }), errors['position'] && __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 41\n    }\n  }, errors['position'])))))));\n};\n\nexport default Home;","map":{"version":3,"sources":["D:/Question_cloud/question_cloud_admin_web_new/pages/examinationCalendar/exams/index.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","Modal","Spin","notification","Pagination","Tabs","Select","Link","Button","HeaderDashboard","Sidebar","TableExams","getQuery","getActiveExams","getInactiveExams","ExaminationCalendarRepository","Home","props","TabPane","Option","dispatch","auth","allExaminationCalendary","totalActiveCount","inactiveExaminationCalendar","totalInactiveCount","Exams","showModal","setShowModal","mainCatId","setMainCatId","mainCatName","setMainCatName","loader","setLoader","currentPage","setCurrentPage","pageSizeTotal","setPageSizeTotal","tab","setTab","selectAll","setSelectAll","selectedCatIds","setSelectedCatIds","action","setAction","errors","setErrors","examinationDate","setExaminationDate","notificationDate","setNotificationDate","position","setPosition","name","setName","slug","setSlug","search","setSearch","local","JSON","parse","localStorage","getItem","localAuth","isLoggedIn","window","location","href","query","console","log","length","ctr","_start","_limit","mainExamId","exam_id","status","ctr1","exam_name","closeModalOnClick","editModalOnClick","data","pageSizeChange","page","pageSize","changeTab","onSelectAll","value","array","map","h","saveOnClick","edit","save","onSelectOne","id","array1","waitingQuestions","index","indexOf","splice","push","actionOnChange","goOnClick","selectedHomeCatIdsArr","obj","qid","inactiveCategory","success","message","deleteCategory","error","title","searchOnChange","resetOnClick","color","e","nameOnChange","target","slugOnChange","positionOnChange"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Modal, Spin, notification, Pagination, Tabs, Select } from 'antd';\r\nimport Link from 'next/link';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport HeaderDashboard from '../../../components/header/HeaderDashboard';\r\nimport Sidebar from '../../../components/sections/sidebar';\r\nimport TableExams from '../../../components/tables/TableExams';\r\n\r\nimport { getQuery } from '../../../helper/auth';\r\nimport { getActiveExams, getInactiveExams } from '../../../store/exams/action';\r\nimport ExaminationCalendarRepository from '../../../repositories/ExaminationCalendarRepository';\r\n\r\nconst Home = (props) => {\r\n\r\n    const { TabPane } = Tabs;\r\n    const { Option } = Select;\r\n    const dispatch = useDispatch();\r\n\r\n    const { auth } = useSelector(({ auth }) => auth);\r\n    const {\r\n        allExaminationCalendary,\r\n        totalActiveCount,\r\n        inactiveExaminationCalendar,\r\n        totalInactiveCount,\r\n    } = useSelector(({ Exams }) => Exams);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [mainCatId, setMainCatId] = useState('');\r\n    const [mainCatName, setMainCatName] = useState('');\r\n    const [loader, setLoader] = useState(false);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [pageSizeTotal, setPageSizeTotal] = useState(10);\r\n    const [tab, setTab] = useState('');\r\n    const [selectAll, setSelectAll] = useState(false);\r\n    const [selectedCatIds, setSelectedCatIds] = useState([]);\r\n    const [action, setAction] = useState('');\r\n    const [errors, setErrors] = useState({});\r\n    const [examinationDate, setExaminationDate] = useState('');\r\n    const [notificationDate, setNotificationDate] = useState('');\r\n    const [position, setPosition] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [slug, setSlug] = useState('');\r\n    const [search, setSearch] = useState('');\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        let local = JSON.parse(localStorage.getItem('persist:QuestionCloudAdmin'));\r\n        let localAuth = local && local.auth ? JSON.parse(local.auth) : {};\r\n        if (localAuth && !localAuth.isLoggedIn) {\r\n            window.location.href = \"/\";\r\n        }\r\n    }, [auth]);\r\n\r\n    useEffect(() => {\r\n        let query = getQuery();\r\n        console.log(query.length,\"qwerty\")\r\n        setLoader(true);\r\n        let ctr = {\r\n            _start: currentPage === 1 ? 0 : ((currentPage - 1) * pageSizeTotal),\r\n            _limit: pageSizeTotal,\r\n            mainExamId: query.exam_id,\r\n            status: \"Y\"\r\n        };\r\n           console.log(ctr,\"12345j\")\r\n           console.log(ctr,\"12345j\")\r\n        let ctr1 = {\r\n            _start: currentPage === 1 ? 0 : ((currentPage - 1) * pageSizeTotal),\r\n            _limit: pageSizeTotal,\r\n            mainExamId: query.exam_id,\r\n            status: \"N\"\r\n        };\r\n       \r\n        setMainCatId(query.exam_id);\r\n        setMainCatName(query.exam_name);\r\n        dispatch(getActiveExams(ctr));\r\n        dispatch(getInactiveExams(ctr1));\r\n        closeModalOnClick();\r\n        let tab = query.status === 'Y' ? 'active'  : 'inactive';\r\n        setTab(tab);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setLoader(false);\r\n    }, [allExaminationCalendary]);\r\n\r\n    const editModalOnClick = async (data) => {\r\n        setLoader(true);\r\n      setMainCatName(data.exam_name);\r\n        setMainCatId(data.exam_id);\r\n        setLoader(false);\r\n       setShowModal(true);\r\n    }\r\n    const closeModalOnClick = () => {\r\n        setName('');\r\n        setPosition('');\r\n\r\n        setSlug('');\r\n        setErrors({});\r\n        setShowModal(false);\r\n    }\r\n    const pageSizeChange = async (page, pageSize) => {\r\n        setLoader(true);\r\n        let ctr = {\r\n            _start: page === 1 ? 0 : ((page - 1) * pageSize),\r\n            _limit: pageSize,\r\n            exam_id: mainCatId,\r\n        };\r\n        if (search) {\r\n            ctr.search = search;\r\n        }\r\n       \r\n       \r\n        if (tab === \"active\") {\r\n            ctr['status'] = 'Y';\r\n            dispatch(getActiveExams(ctr));\r\n        }  else {\r\n            ctr['status'] = 'N';\r\n            dispatch(getInactiveExams(ctr));\r\n        }\r\n        setCurrentPage(page);\r\n        setPageSizeTotal(pageSize);\r\n    }\r\n\r\n    const changeTab = (tab) => {\r\n        setLoader(true);\r\n        let ctr = {\r\n            _start: 0,\r\n            _limit: 10,\r\n            exam_id: mainCatId,\r\n        };\r\n        if (tab === \"active\") {\r\n            ctr['status'] = 'Y';\r\n            dispatch(getActiveExams(ctr));\r\n        } else {\r\n            ctr['status'] = 'N';\r\n            dispatch(getInactiveExams(ctr));\r\n        }\r\n        setCurrentPage(1);\r\n        setPageSizeTotal(10);\r\n        setSelectedCatIds([]);\r\n        setSelectAll(false);\r\n        setAction('');\r\n        setSearch('');\r\n        setTab(tab);\r\n    }\r\n\r\n    const onSelectAll = (value) => {\r\n        let array = [];\r\n        if (value) {\r\n            if (tab === 'active') {\r\n                array = allExaminationCalendary.map(h => h.exam_id);\r\n            } else {\r\n                array = inactiveExaminationCalendar.map(h => h.exam_id);\r\n            }\r\n        }\r\n        setSelectedCatIds(array);\r\n        setSelectAll(value);\r\n    }\r\n    const saveOnClick = () => {\r\n        if (mainCatId) {\r\n            edit();\r\n        } else {\r\n            save();\r\n        }\r\n    }\r\n    const onSelectOne = (id) => {\r\n        let array = [...selectedCatIds];\r\n        let array1 = tab === 'active' ? [...allExaminationCalendary] : tab === 'inactive' ? [...waitingQuestions] : [...inactiveExaminationCalendar];\r\n        let index = array.indexOf(id);\r\n        if (index >= 0) {\r\n            array.splice(index, 1);\r\n        } else {\r\n            array.push(id);\r\n        }\r\n        if (array.length === array1.length) {\r\n            setSelectAll(true);\r\n        } else {\r\n            setSelectAll(false);\r\n        }\r\n        setSelectedCatIds(array);\r\n    }\r\n\r\n    const actionOnChange = (action) => {\r\n        setAction(action);\r\n    }\r\n\r\n    const goOnClick = async () => {\r\n        let selectedHomeCatIdsArr = [...selectedCatIds];\r\n        let obj = {\r\n            qid: selectedHomeCatIdsArr\r\n        };\r\n        if (selectedHomeCatIdsArr && selectedHomeCatIdsArr.length > 0 && action) {\r\n            setLoader(true);\r\n            if (action === \"active\") {\r\n                obj['status'] = 'Y';\r\n                await ExaminationCalendarRepository.inactiveCategory(obj);\r\n                notification.success({\r\n                    message: 'Quetions Updated Successfully.'\r\n                });\r\n            }\r\n            if (action === \"inactive\") {\r\n                obj['status'] = 'N';\r\n                await ExaminationCalendarRepository.inactiveCategory(obj);\r\n                notification.success({\r\n                    message: 'Quetions Updated Successfully.'\r\n                });\r\n            }\r\n            if (action === \"delete\") {\r\n                await ExaminationCalendarRepository.deleteCategory(obj);\r\n                notification.success({\r\n                    message: 'Quetions Deleted Successfully.'\r\n                });\r\n            }\r\n            setSelectedCatIds([]);\r\n            let ctr = {\r\n                _start: currentPage === 1 ? 0 : ((currentPage - 1) * pageSizeTotal),\r\n                _limit: pageSizeTotal,\r\n                exam_id: mainCatId,\r\n                status: \"Y\"\r\n            };\r\n            let ctr1 = {\r\n                _start: currentPage === 1 ? 0 : ((currentPage - 1) * pageSizeTotal),\r\n                _limit: pageSizeTotal,\r\n                exam_id: mainCatId,\r\n                status: \"N\"\r\n            };\r\n            if (search) {\r\n                ctr.search = search;\r\n                ctr1.search = search;\r\n            }\r\n          \r\n          \r\n         \r\n            dispatch(getActiveExams(ctr));\r\n            dispatch(getInactiveExams(ctr1));\r\n            closeModalOnClick();\r\n        } else {\r\n            if (!action) {\r\n                Modal.error({\r\n                    title: 'Please Select Action'\r\n                });\r\n            } else if (!selectedHomeCatIdsArr.length) {\r\n                Modal.error({\r\n                    title: 'Please Select One Category'\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    const searchOnChange = (search) => {\r\n        setLoader(true);\r\n        let ctr = {\r\n            _start: 0,\r\n            _limit: 10,\r\n            exam_id: mainCatId,\r\n        };\r\n        ctr['search'] = search;\r\n        if (tab === \"active\") {\r\n            ctr['status'] = 'Y';\r\n            dispatch(getActiveExams(ctr));\r\n        }  else {\r\n            ctr['status'] = 'N';\r\n            dispatch(getInactiveExams(ctr));\r\n        }\r\n        setSearch(search);\r\n        setCurrentPage(1);\r\n    }\r\n\r\n    const resetOnClick = () => {\r\n        setLoader(true);\r\n        let ctr = {\r\n            _start: 0,\r\n            _limit: 10,\r\n            exam_id: mainCatId,\r\n        };\r\n        if (tab === \"active\") {\r\n            ctr['status'] = 'Y';\r\n            dispatch(getActiveExams(ctr));\r\n        }  else {\r\n            ctr['status'] = 'N';\r\n            dispatch(getInactiveExams(ctr));\r\n        }\r\n        setSearch('');\r\n        setCurrentPage(1);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n              <Modal\r\n                    visible={showModal}\r\n                    okText={'Save'}\r\n                    onCancel={closeModalOnClick}\r\n                    title={mainCatId ? \"Edit Q Bank Sub Category\" : \"Add New Q Bank Sub Category\"}\r\n                    width={800}\r\n                    onOk={saveOnClick}>\r\n                 <Spin spinning={loader} tip={'Loading...'}>\r\n                        <div className='row'>\r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Exam Main Name <span style={{ color: 'red' }}>*</span></label>\r\n                                    <input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        value={name}\r\n                                        placeholder=\"\"\r\n                                        onChange={(e) => nameOnChange(e.target.value)}\r\n                                    />\r\n                                    {errors['name'] &&\r\n                                        <span style={{ color: 'red' }}>{errors['name']}</span>\r\n                                    }\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Exam slug <span style={{ color: 'red' }}>*</span></label>\r\n                                    <input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        value={name}\r\n                                        placeholder=\"\"\r\n                                        onChange={(e) => slugOnChange(e.target.value)}\r\n                                    />\r\n                                    {errors['name'] &&\r\n                                        <span style={{ color: 'red' }}>{errors['name']}</span>\r\n                                    }\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group\">\r\n                                    <label>Position <span style={{ color: 'red' }}>*</span></label>\r\n                                    <input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        value={position}\r\n                                        placeholder=\"\"\r\n                                        onChange={(e) => positionOnChange(e.target.value)}\r\n                                    />\r\n                                    {errors['position'] &&\r\n                                        <span style={{ color: 'red' }}>{errors['position']}</span>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Spin>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}