{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { actionTypes } from './action';\nexport const initState = {\n  allCity: [],\n  totalActiveCount: 0,\n  inactiveCity: [],\n  totalInactiveCount: 0\n};\n\nfunction reducer(state = initState, action) {\n  switch (action.type) {\n    case actionTypes.GET_ALL_CITY_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {\n        allCity: action.payload && action.payload.city && action.payload.city.length > 0 ? action.payload.city : [],\n        totalActiveCount: action.payload && action.payload.city && action.payload.city.length > 0 ? action.payload.count : 0\n      });\n\n    case actionTypes.GET_INACTIVE_CITY_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {\n        inactiveCity: action.payload && action.payload.city && action.payload.city.length > 0 ? action.payload.city : [],\n        totalInactiveCount: action.payload && action.payload.city && action.payload.city.length > 0 ? action.payload.count : 0\n      });\n\n    default:\n      return state;\n  }\n}\n\nexport default reducer;","map":{"version":3,"sources":["F:/newapollo/store/City/reducer.js"],"names":["actionTypes","initState","allCity","totalActiveCount","inactiveCity","totalInactiveCount","reducer","state","action","type","GET_ALL_CITY_SUCCESS","payload","city","length","count","GET_INACTIVE_CITY_SUCCESS"],"mappings":";;;;;;AAAA,SAASA,WAAT,QAA4B,UAA5B;AAEA,OAAO,MAAMC,SAAS,GAAG;AACrBC,EAAAA,OAAO,EAAE,EADY;AAErBC,EAAAA,gBAAgB,EAAE,CAFG;AAGrBC,EAAAA,YAAY,EAAE,EAHO;AAIrBC,EAAAA,kBAAkB,EAAE;AAJC,CAAlB;;AAOP,SAASC,OAAT,CAAiBC,KAAK,GAAGN,SAAzB,EAAoCO,MAApC,EAA4C;AACxC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,WAAW,CAACU,oBAAjB;AACI,6CACOH,KADP,GAEO;AACCL,QAAAA,OAAO,EAAEM,MAAM,CAACG,OAAP,IAAkBH,MAAM,CAACG,OAAP,CAAeC,IAAjC,IAAyCJ,MAAM,CAACG,OAAP,CAAeC,IAAf,CAAoBC,MAApB,GAA6B,CAAtE,GAA0EL,MAAM,CAACG,OAAP,CAAeC,IAAzF,GAAgG,EAD1G;AAECT,QAAAA,gBAAgB,EAAEK,MAAM,CAACG,OAAP,IAAkBH,MAAM,CAACG,OAAP,CAAeC,IAAjC,IAAyCJ,MAAM,CAACG,OAAP,CAAeC,IAAf,CAAoBC,MAApB,GAA6B,CAAtE,GAA0EL,MAAM,CAACG,OAAP,CAAeG,KAAzF,GAAiG;AAFpH,OAFP;;AAOJ,SAAKd,WAAW,CAACe,yBAAjB;AACI,6CACOR,KADP,GAEO;AACCH,QAAAA,YAAY,EAAEI,MAAM,CAACG,OAAP,IAAkBH,MAAM,CAACG,OAAP,CAAeC,IAAjC,IAAyCJ,MAAM,CAACG,OAAP,CAAeC,IAAf,CAAoBC,MAApB,GAA6B,CAAtE,GAA0EL,MAAM,CAACG,OAAP,CAAeC,IAAzF,GAAgG,EAD/G;AAECP,QAAAA,kBAAkB,EAAEG,MAAM,CAACG,OAAP,IAAkBH,MAAM,CAACG,OAAP,CAAeC,IAAjC,IAAyCJ,MAAM,CAACG,OAAP,CAAeC,IAAf,CAAoBC,MAApB,GAA6B,CAAtE,GAA0EL,MAAM,CAACG,OAAP,CAAeG,KAAzF,GAAiG;AAFtH,OAFP;;AAOJ;AACI,aAAOP,KAAP;AAlBR;AAoBH;;AAED,eAAeD,OAAf","sourcesContent":["import { actionTypes } from './action';\r\n\r\nexport const initState = {\r\n    allCity: [],\r\n    totalActiveCount: 0,\r\n    inactiveCity: [],\r\n    totalInactiveCount: 0,\r\n};\r\n\r\nfunction reducer(state = initState, action) {\r\n    switch (action.type) {\r\n        case actionTypes.GET_ALL_CITY_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...{\r\n                    allCity: action.payload && action.payload.city && action.payload.city.length > 0 ? action.payload.city : [],\r\n                    totalActiveCount: action.payload && action.payload.city && action.payload.city.length > 0 ? action.payload.count : 0\r\n                },\r\n            };\r\n        case actionTypes.GET_INACTIVE_CITY_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...{\r\n                    inactiveCity: action.payload && action.payload.city && action.payload.city.length > 0 ? action.payload.city : [],\r\n                    totalInactiveCount: action.payload && action.payload.city && action.payload.city.length > 0 ? action.payload.count : 0\r\n                },\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}