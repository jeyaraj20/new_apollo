{"ast":null,"code":"var _jsxFileName = \"D:\\\\Question_cloud\\\\question_cloud_admin_web_new\\\\pages\\\\changepassword\\\\view\\\\index.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Modal, Button, Checkbox, Spin, notification, Pagination, Tabs, Select } from 'antd';\nimport HeaderDashboard from '../../../components/header/HeaderDashboard';\nimport Sidebar from '../../../components/sections/sidebar';\nimport TableCity from '../../../components/tables/changepassword';\nimport { getAllCity, getInactiveCity } from '../../../store/City/action';\nimport LocationControllerRepository from '../../../repositories/LocationControllerRepository';\n\nconst Home = props => {\n  const {\n    TabPane\n  } = Tabs;\n  const {\n    Option\n  } = Select;\n  const dispatch = useDispatch();\n  const {\n    auth\n  } = useSelector(({\n    auth\n  }) => auth);\n  const {\n    allCity,\n    totalActiveCount,\n    inactiveCity,\n    totalInactiveCount\n  } = useSelector(({\n    City\n  }) => City);\n  const {\n    0: showModal,\n    1: setShowModal\n  } = useState(false);\n  const {\n    0: cityname,\n    1: setCityname\n  } = useState('');\n  const {\n    0: selectedHomeCatId,\n    1: setSelectedHomeCatId\n  } = useState('');\n  const {\n    0: errors,\n    1: setErrors\n  } = useState({});\n  const {\n    0: loader,\n    1: setLoader\n  } = useState(false);\n  const {\n    0: currentPage,\n    1: setCurrentPage\n  } = useState(1);\n  const {\n    0: pageSizeTotal,\n    1: setPageSizeTotal\n  } = useState(10);\n  const {\n    0: State,\n    1: setState\n  } = useState('');\n  const {\n    0: Citycode,\n    1: setCitycode\n  } = useState('');\n  const {\n    0: search,\n    1: setsearch\n  } = useState('');\n  const {\n    0: stateitems,\n    1: setStateItems\n  } = useState([]);\n  const {\n    0: activeState,\n    1: setactiveState\n  } = useState([]);\n  useEffect(() => {\n    let local = JSON.parse(localStorage.getItem('persist:QuestionCloudAdmin'));\n    let localAuth = local && local.auth ? JSON.parse(local.auth) : {};\n\n    if (localAuth && !localAuth.isLoggedIn) {\n      window.location.href = \"/\";\n    }\n  }, [auth]);\n\n  const handleRefresh = async () => {\n    const stateresult = await LocationControllerRepository.getState();\n    const {\n      state: stateres\n    } = stateresult;\n    console.log(stateresult, \"result\");\n    let itemArr = [];\n\n    for (let state of stateres) {\n      itemArr.push(__jsx(\"item\", {\n        value: state.state_id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 26\n        }\n      }, state.state_name));\n    }\n\n    console.log(itemArr);\n    setStateItems(itemArr);\n    setactiveState(itemArr);\n    setTimeout(() => {\n      setLoader(false);\n    }, 1000);\n  };\n\n  useEffect(() => {\n    setLoader(true);\n\n    async function fetchData() {\n      handleRefresh();\n    }\n\n    fetchData();\n  }, []);\n  useEffect(() => {\n    setLoader(true);\n    let ctr = {};\n    ctr._start = currentPage === 1 ? 0 : (currentPage - 1) * pageSizeTotal;\n    ctr._limit = pageSizeTotal;\n    dispatch(getAllCity(ctr));\n    dispatch(getInactiveCity(ctr));\n  }, []);\n  useEffect(() => {\n    setLoader(false);\n  }, [allCity, inactiveCity]);\n\n  const closeModalOnClick = () => {\n    setCityname('');\n    setCitycode('');\n    setSelectedHomeCatId('');\n    setState('');\n    setErrors({});\n    setShowModal(false);\n  };\n\n  const save = async () => {\n    if (cityname && Citycode) {\n      setLoader(true);\n      let obj = {\n        \"state_id\": stateId,\n        \"city_name\": cityname,\n        \"city_code\": Citycode\n      };\n\n      try {\n        await LocationControllerRepository.saveCity(obj);\n        notification.success({\n          message: 'State Added Successfully.'\n        });\n        let ctr = {};\n        ctr._start = currentPage === 1 ? 0 : (currentPage - 1) * pageSizeTotal;\n        ctr._limit = pageSizeTotal;\n\n        if (search) {\n          ctr.search = search;\n        }\n\n        dispatch(getAllCity(ctr));\n        dispatch(getInactiveCity(ctr));\n        closeModalOnClick();\n      } catch (e) {\n        notification.error({\n          message: 'State Added Failed.'\n        });\n      }\n    } else {\n      let errorObj = _objectSpread({}, errors);\n\n      if (!cityname) errorObj['cityname'] = \"Please Enter cityname\";\n      setErrors(errorObj);\n    }\n  };\n\n  const edit = async () => {\n    if (cityname && selectedHomeCatId && Citycode && cityname) {\n      setLoader(true);\n      let obj = {\n        \"city_id\": selectedHomeCatId,\n        \"city_name\": cityname,\n        \"city_code\": Citycode,\n        \"state_id\": stateId\n      };\n\n      try {\n        await LocationControllerRepository.editCity(selectedHomeCatId, obj);\n        notification.success({\n          message: 'State Updated Successfully.'\n        });\n        let ctr = {};\n        ctr._start = currentPage === 1 ? 0 : (currentPage - 1) * pageSizeTotal;\n        ctr._limit = pageSizeTotal;\n        dispatch(getAllCity(ctr));\n        dispatch(getInactiveCity(ctr));\n        closeModalOnClick();\n      } catch (e) {\n        notification.error({\n          message: 'State  Updated Failed.'\n        });\n      }\n    } else {\n      let errorObj = _objectSpread({}, errors);\n\n      if (!cityname) errorObj['cityname'] = \"Please Enter cityname\";\n      setErrors(errorObj);\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    style: {\n      marginBottom: '0rem',\n      padding: '10px 30px',\n      borderRadius: '0rem',\n      backgroundColor: '#eee'\n    },\n    className: \"page-heading d-sm-flex justify-content-sm-between align-items-sm-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  }, __jsx(\"h2\", {\n    className: \"title mb-3 mb-sm-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }, \"Change Password\")), __jsx(\"div\", {\n    style: {\n      padding: '5%'\n    },\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }\n  }, loader && __jsx(\"div\", {\n    className: \"loader-view w-100\",\n    style: {\n      height: 'calc(100vh - 120px)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 15\n    }\n  }, __jsx(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 17\n    }\n  })), !loader && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    className: \"row no-gutters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"col-lg-12 d-flex flex-column order-lg-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 19\n    }\n  }, __jsx(TextField, {\n    required: true,\n    disabled: true,\n    id: \"required\",\n    label: 'Username',\n    name: 'Username',\n    defaultValue: userName,\n    margin: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 21\n    }\n  }), __jsx(TextField, {\n    required: true,\n    autoComplete: 'off',\n    id: \"required\",\n    type: 'password',\n    label: 'Old Password',\n    name: 'OldPassword',\n    onChange: event => onOldPasswordChange(event.target.value),\n    onBlur: valiadateProperty,\n    value: oldPassword,\n    margin: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 21\n    }\n  }), __jsx(\"h6\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 21\n    }\n  }, errors['OldPassword']), __jsx(TextField, {\n    required: true,\n    autoComplete: 'off',\n    id: \"required\",\n    type: 'password',\n    label: 'New Password',\n    name: 'NewPassword',\n    onChange: event => onNewPasswordChange(event.target.value),\n    onBlur: valiadateProperty,\n    value: newPassword,\n    margin: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 21\n    }\n  }), __jsx(\"h6\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 21\n    }\n  }, errors['NewPassword']), __jsx(TextField, {\n    required: true,\n    type: 'password',\n    autoComplete: 'off',\n    id: \"required\",\n    label: 'Confirm Password',\n    name: 'ConfirmPassword',\n    onChange: event => onConfirmPasswordChange(event.target.value),\n    onBlur: valiadateProperty,\n    value: confirmPassword,\n    margin: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 21\n    }\n  }), __jsx(\"h6\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 21\n    }\n  }, errors['ConfirmPassword']), __jsx(\"div\", {\n    style: {\n      paddingTop: '2%',\n      textAlign: 'center'\n    },\n    className: \"col-lg-12 col-sm-12 col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 21\n    }\n  }, __jsx(Button, {\n    onClick: () => changePassword(),\n    variant: \"contained\",\n    color: \"primary\",\n    className: \"jr-btn text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 23\n    }\n  }, \"Submit\")))), __jsx(Snackbar, {\n    className: \"mb-3 bg-info\",\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    },\n    open: showMessage,\n    message: alertMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 17\n    }\n  }))));\n};\n\nexport default Home;","map":{"version":3,"sources":["D:/Question_cloud/question_cloud_admin_web_new/pages/changepassword/view/index.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","Modal","Button","Checkbox","Spin","notification","Pagination","Tabs","Select","HeaderDashboard","Sidebar","TableCity","getAllCity","getInactiveCity","LocationControllerRepository","Home","props","TabPane","Option","dispatch","auth","allCity","totalActiveCount","inactiveCity","totalInactiveCount","City","showModal","setShowModal","cityname","setCityname","selectedHomeCatId","setSelectedHomeCatId","errors","setErrors","loader","setLoader","currentPage","setCurrentPage","pageSizeTotal","setPageSizeTotal","State","setState","Citycode","setCitycode","search","setsearch","stateitems","setStateItems","activeState","setactiveState","local","JSON","parse","localStorage","getItem","localAuth","isLoggedIn","window","location","href","handleRefresh","stateresult","getState","state","stateres","console","log","itemArr","push","state_id","state_name","setTimeout","fetchData","ctr","_start","_limit","closeModalOnClick","save","obj","stateId","saveCity","success","message","e","error","errorObj","edit","editCity","marginBottom","padding","borderRadius","backgroundColor","height","userName","event","onOldPasswordChange","target","value","valiadateProperty","oldPassword","color","onNewPasswordChange","newPassword","onConfirmPasswordChange","confirmPassword","paddingTop","textAlign","changePassword","vertical","horizontal","showMessage","alertMessage"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Modal, Button, Checkbox, Spin, notification, Pagination, Tabs, Select } from 'antd';\r\nimport HeaderDashboard from '../../../components/header/HeaderDashboard';\r\nimport Sidebar from '../../../components/sections/sidebar';\r\nimport TableCity from '../../../components/tables/changepassword';\r\nimport { getAllCity, getInactiveCity } from '../../../store/City/action';\r\nimport LocationControllerRepository from '../../../repositories/LocationControllerRepository';\r\n\r\nconst Home = (props) => {\r\n\r\n    const { TabPane } = Tabs;\r\n    const { Option } = Select;\r\n    const dispatch = useDispatch();\r\n    const { auth } = useSelector(({ auth }) => auth);\r\n    const { allCity, totalActiveCount, inactiveCity, totalInactiveCount } = useSelector(({ City }) => City);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [cityname, setCityname] = useState('');\r\n    const [selectedHomeCatId, setSelectedHomeCatId] = useState('');\r\n    const [errors, setErrors] = useState({});\r\n    const [loader, setLoader] = useState(false);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [pageSizeTotal, setPageSizeTotal] = useState(10);\r\n    const [State, setState] = useState('');\r\n    const [Citycode, setCitycode] = useState('');\r\n    const [search, setsearch] = useState('');\r\n    const [stateitems, setStateItems] = useState([]);\r\n    const [activeState, setactiveState] = useState([]);\r\n\r\n    useEffect(() => {\r\n        let local = JSON.parse(localStorage.getItem('persist:QuestionCloudAdmin'));\r\n        let localAuth = local && local.auth ? JSON.parse(local.auth) : {};\r\n        if (localAuth && !localAuth.isLoggedIn) {\r\n            window.location.href = \"/\";\r\n        }\r\n    }, [auth]);\r\n    \r\n    const handleRefresh = async () => {\r\n        const stateresult = await LocationControllerRepository.getState();\r\n        const { state: stateres } = stateresult;\r\n        console.log(stateresult, \"result\")\r\n        let itemArr = [];\r\n        for (let state of stateres) {\r\n            itemArr.push(<item value={state.state_id}>{state.state_name}</item>)\r\n        }\r\n        console.log(itemArr)\r\n        setStateItems(itemArr);\r\n        setactiveState(itemArr)\r\n        setTimeout(() => {\r\n            setLoader(false)\r\n        }, 1000);\r\n    }\r\n    useEffect(() => {\r\n        setLoader(true);\r\n        async function fetchData() {\r\n            handleRefresh()\r\n        }\r\n        fetchData();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setLoader(true);\r\n        let ctr = {};\r\n        ctr._start = currentPage === 1 ? 0 : ((currentPage - 1) * pageSizeTotal);\r\n        ctr._limit = pageSizeTotal;\r\n        dispatch(getAllCity(ctr));\r\n        dispatch(getInactiveCity(ctr));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setLoader(false);\r\n    }, [allCity, inactiveCity]);\r\n\r\n    \r\n\r\n\r\n    const closeModalOnClick = () => {\r\n        setCityname('');\r\n        setCitycode('');\r\n        setSelectedHomeCatId('');\r\n        setState('');\r\n        setErrors({});\r\n        setShowModal(false);\r\n    }\r\n\r\n    \r\n    const save = async () => {\r\n        if (cityname && Citycode) {\r\n            setLoader(true);\r\n            let obj = {\r\n                \"state_id\": stateId,\r\n                \"city_name\": cityname,\r\n                \"city_code\": Citycode\r\n            }\r\n            try {\r\n                await LocationControllerRepository.saveCity(obj);\r\n                notification.success({\r\n                    message: 'State Added Successfully.'\r\n                })\r\n                let ctr = {};\r\n                ctr._start = currentPage === 1 ? 0 : ((currentPage - 1) * pageSizeTotal);\r\n                ctr._limit = pageSizeTotal;\r\n\r\n                if (search) {\r\n                    ctr.search = search;\r\n                }\r\n                dispatch(getAllCity(ctr));\r\n                dispatch(getInactiveCity(ctr));\r\n                closeModalOnClick();\r\n            } catch (e) {\r\n                notification.error({\r\n                    message: 'State Added Failed.'\r\n                });\r\n            }\r\n        } else {\r\n            let errorObj = { ...errors };\r\n            if (!cityname) errorObj['cityname'] = \"Please Enter cityname\";\r\n            setErrors(errorObj);\r\n        }\r\n    }\r\n\r\n    const edit = async () => {\r\n        if (cityname && selectedHomeCatId && Citycode && cityname) {\r\n            setLoader(true);\r\n            let obj = {\r\n                \"city_id\": selectedHomeCatId,\r\n                \"city_name\": cityname,\r\n                \"city_code\": Citycode,\r\n                \"state_id\": stateId,\r\n            }\r\n            try {\r\n                await LocationControllerRepository.editCity(selectedHomeCatId, obj);\r\n                notification.success({\r\n                    message: 'State Updated Successfully.'\r\n                });\r\n                let ctr = {};\r\n                ctr._start = currentPage === 1 ? 0 : ((currentPage - 1) * pageSizeTotal);\r\n                ctr._limit = pageSizeTotal;\r\n                dispatch(getAllCity(ctr));\r\n                dispatch(getInactiveCity(ctr));\r\n                closeModalOnClick();\r\n            } catch (e) {\r\n                notification.error({\r\n                    message: 'State  Updated Failed.'\r\n                });\r\n            }\r\n        } else {\r\n            let errorObj = { ...errors };\r\n            if (!cityname) errorObj['cityname'] = \"Please Enter cityname\";\r\n            setErrors(errorObj);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n          <div style={{ marginBottom: '0rem', padding: '10px 30px', borderRadius: '0rem', backgroundColor: '#eee' }} className=\"page-heading d-sm-flex justify-content-sm-between align-items-sm-center\">\r\n            <h2 className=\"title mb-3 mb-sm-0\">Change Password</h2>\r\n          </div>\r\n          <div style={{ padding: '5%' }} className=\"col-12\">\r\n            {loader &&\r\n              <div className=\"loader-view w-100\"\r\n                style={{ height: 'calc(100vh - 120px)' }}>\r\n                <CircularProgress />\r\n              </div>\r\n            }\r\n            {!loader &&\r\n              <div>\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-lg-12 d-flex flex-column order-lg-1\">\r\n                    <TextField\r\n                      required\r\n                      disabled={true}\r\n                      id=\"required\"\r\n                      label={'Username'}\r\n                      name={'Username'}\r\n                      defaultValue={userName}\r\n                      margin=\"none\" />\r\n                    <TextField\r\n                      required\r\n                      autoComplete={'off'}\r\n                      id=\"required\"\r\n                      type={'password'}\r\n                      label={'Old Password'}\r\n                      name={'OldPassword'}\r\n                      onChange={(event) => onOldPasswordChange(event.target.value)}\r\n                      onBlur={valiadateProperty}\r\n                      value={oldPassword}\r\n                      margin=\"normal\" />\r\n                    <h6 style={{ color: 'red' }}>{errors['OldPassword']}</h6>\r\n                    <TextField\r\n                      required\r\n                      autoComplete={'off'}\r\n                      id=\"required\"\r\n                      type={'password'}\r\n                      label={'New Password'}\r\n                      name={'NewPassword'}\r\n                      onChange={(event) => onNewPasswordChange(event.target.value)}\r\n                      onBlur={valiadateProperty}\r\n                      value={newPassword}\r\n                      margin=\"normal\" />\r\n                    <h6 style={{ color: 'red' }}>{errors['NewPassword']}</h6>\r\n                    <TextField\r\n                      required\r\n                      type={'password'}\r\n                      autoComplete={'off'}\r\n                      id=\"required\"\r\n                      label={'Confirm Password'}\r\n                      name={'ConfirmPassword'}\r\n                      onChange={(event) => onConfirmPasswordChange(event.target.value)}\r\n                      onBlur={valiadateProperty}\r\n                      value={confirmPassword}\r\n                      margin=\"normal\" />\r\n                    <h6 style={{ color: 'red' }}>{errors['ConfirmPassword']}</h6>\r\n                    <div style={{ paddingTop: '2%', textAlign: 'center' }} className=\"col-lg-12 col-sm-12 col-12\">\r\n                      <Button onClick={() => changePassword()} variant=\"contained\" color=\"primary\" className=\"jr-btn text-white\">Submit</Button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <Snackbar\r\n                  className=\"mb-3 bg-info\"\r\n                  anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                  open={showMessage}\r\n                  message={alertMessage}\r\n                />\r\n              </div>\r\n            }\r\n          </div>\r\n        </>\r\n      );\r\n};\r\n\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}