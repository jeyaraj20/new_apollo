{"ast":null,"code":"import Repository, { apiUrl } from './Repository';\n\nclass AuthRepository {\n  constructor(callback) {\n    this.callback = callback;\n  }\n\n  async getAllCoupon(status) {\n    console.log(\"1234\", payload);\n    const reponse = await Repository.get(`${apiUrl}/coupon/status/Y?_start=${payload._start}&_limit=${payload._limit}`).then(response => {\n      return response.data;\n    }).catch(error => ({\n      error: JSON.stringify(error)\n    }));\n    return reponse;\n  }\n\n  async getInactiveCoupon(status) {\n    const reponse = await Repository.get(`${apiUrl}/coupon/status/N?_start=${payload._start}&_limit=${payload._limit}`).then(response => {\n      return response.data;\n    }).catch(error => ({\n      error: JSON.stringify(error)\n    }));\n    return reponse;\n  }\n\n  async saveCoupon(formdata) {\n    console.log(\"12345689\");\n    const reponse = await Repository.post(`${apiUrl}/coupon/`, formdata).then(response => {\n      return response.data;\n    }).catch(error => ({\n      error: JSON.stringify(error)\n    }));\n    return reponse;\n  }\n\n  async updateCoupon(categoryId, formdata) {\n    console.log(\"12345689\");\n    const reponse = await Repository.put(`${apiUrl}/coupon/id/${categoryId}`, formdata).then(response => {\n      return response.data;\n    }).catch(error => ({\n      error: JSON.stringify(error)\n    }));\n    return reponse;\n  }\n\n  async changeStatus(data) {\n    const reponse = await Repository.put(`${apiUrl}/coupon/status`, data).then(response => {\n      return response.data;\n    }).catch(error => ({\n      error: JSON.stringify(error)\n    }));\n    return reponse;\n  }\n\n  async deleteCoupon(data) {\n    const reponse = await Repository.delete(`${apiUrl}/coupon/`, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      data: data\n    }).then(response => {\n      return response.data;\n    }).catch(error => ({\n      error: JSON.stringify(error)\n    }));\n    ;\n    return reponse;\n  }\n\n  async getAlldurations(payload) {\n    console.log(\"1234\", payload);\n    const reponse = await Repository.get(`${apiUrl}/coupon/duration/?_start=${payload._start}&_limit=${payload._limit}`).then(response => {\n      return response.data;\n    }).catch(error => ({\n      error: JSON.stringify(error)\n    }));\n    return reponse;\n  }\n\n}\n\nexport default new AuthRepository();","map":{"version":3,"sources":["D:/Question_cloud/question_cloud_admin_web_new/repositories/CouponRepository.js"],"names":["Repository","apiUrl","AuthRepository","constructor","callback","getAllCoupon","status","console","log","payload","reponse","get","_start","_limit","then","response","data","catch","error","JSON","stringify","getInactiveCoupon","saveCoupon","formdata","post","updateCoupon","categoryId","put","changeStatus","deleteCoupon","delete","headers","getAlldurations"],"mappings":"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","sourcesContent":["import Repository, { apiUrl } from './Repository';\r\n\r\nclass AuthRepository {\r\n    constructor(callback) {\r\n        this.callback = callback;\r\n    }\r\n    async getAllCoupon(status) {\r\n        console.log(\"1234\", payload)\r\n        const reponse = await Repository.get(`${apiUrl}/coupon/status/Y?_start=${payload._start}&_limit=${payload._limit}`)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n            .catch(error => ({ error: JSON.stringify(error) }));\r\n        return reponse;\r\n    }\r\n    async getInactiveCoupon(status) {\r\n        const reponse = await Repository.get(`${apiUrl}/coupon/status/N?_start=${payload._start}&_limit=${payload._limit}`)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n\r\n            .catch(error => ({ error: JSON.stringify(error) }));\r\n        return reponse;\r\n    }\r\n    async saveCoupon(formdata) {\r\n        console.log(\"12345689\")\r\n        const reponse = await Repository.post(`${apiUrl}/coupon/`, formdata)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n            .catch(error => ({ error: JSON.stringify(error) }));\r\n        return reponse;\r\n    }\r\n    async updateCoupon(categoryId, formdata) {\r\n        console.log(\"12345689\")\r\n        const reponse = await Repository.put(`${apiUrl}/coupon/id/${categoryId}`, formdata)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n            .catch(error => ({ error: JSON.stringify(error) }));\r\n        return reponse;\r\n    }\r\n    async changeStatus(data) {\r\n        const reponse = await Repository.put(`${apiUrl}/coupon/status`, data)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n            .catch(error => ({ error: JSON.stringify(error) }));\r\n        return reponse;\r\n    }\r\n    async deleteCoupon(data) {\r\n        const reponse = await Repository.delete(`${apiUrl}/coupon/`, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            data: data\r\n        }).then(response => {\r\n            return response.data;\r\n        }).catch(error => ({ error: JSON.stringify(error) }));;\r\n        return reponse;\r\n    }\r\n    async getAlldurations(payload) {\r\n        console.log(\"1234\", payload)\r\n        const reponse = await Repository.get(`${apiUrl}/coupon/duration/?_start=${payload._start}&_limit=${payload._limit}`)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n            .catch(error => ({ error: JSON.stringify(error) }));\r\n        return reponse;\r\n    }\r\n\r\n}\r\n\r\nexport default new AuthRepository();\r\n\r\n"]},"metadata":{},"sourceType":"module"}