{"ast":null,"code":"import Repository, { apiUrl } from './Repository';\n\nclass AuthRepository {\n  constructor(callback) {\n    this.callback = callback;\n  }\n\n  async getActiveExams(payload) {\n    console.log(payload, \"12345qw\");\n    const reponse = await Repository.get(`${apiUrl}/examinationCalendar/sub?status='Y'&&mainExamId=${'u'}&&_start=${payload._start}&_limit=${payload._limit}`).then(response => {\n      return response.data;\n    }).catch(error => ({\n      error: JSON.stringify(error)\n    }));\n    return reponse;\n  }\n\n  async getInactiveExams(payload) {\n    const reponse = await Repository.get(`${apiUrl}/examinationCalendar/sub?status='N'&&_start=${payload._start}&_limit=${payload._limit}`).then(response => {\n      return response.data;\n    }).catch(error => ({\n      error: JSON.stringify(error)\n    }));\n    return reponse;\n  }\n\n  async getActiveMain(payload) {\n    const reponse = await Repository.get(`${apiUrl}/examinationCalendar/main?status=${'Y'}&&_start=${payload._start}&_limit=${payload._limit}`).then(response => {\n      return response.data;\n    }).catch(error => ({\n      error: JSON.stringify(error)\n    }));\n    return reponse;\n  }\n\n  async getInactiveMain(payload) {\n    const reponse = await Repository.get(`${apiUrl}/examinationCalendar/main?status=${'N'}&&_start=${payload._start}&_limit=${payload._limit}`).then(response => {\n      return response.data;\n    }).catch(error => ({\n      error: JSON.stringify(error)\n    }));\n    return reponse;\n  }\n\n  async saveExaminationCalendar(formdata) {\n    console.log(\"12345689\");\n    const reponse = await Repository.post(`${apiUrl}/examinationCalendar/`, formdata).then(response => {\n      return response.data;\n    }).catch(error => ({\n      error: JSON.stringify(error)\n    }));\n    return reponse;\n  }\n\n  async editExaminationCalendar(categoryId, formdata) {\n    console.log(\"12345689\");\n    const reponse = await Repository.put(`${apiUrl}/examinationCalendar/ExamId/${categoryId}`, formdata).then(response => {\n      return response.data;\n    }).catch(error => ({\n      error: JSON.stringify(error)\n    }));\n    return reponse;\n  }\n\n  async inactiveCategory(formdata) {\n    console.log(\"12345689\");\n    const reponse = await Repository.post(`${apiUrl}/examinationCalendar/status/`, formdata).then(response => {\n      return response.data;\n    }).catch(error => ({\n      error: JSON.stringify(error)\n    }));\n    return reponse;\n  } // position\n\n\n  async changePosition(formdata) {\n    console.log(\"hj\");\n    const reponse = await Repository.post(`${apiUrl}/examinationCalendar/position/`, formdata).then(response => {\n      return response.data;\n    }).catch(error => ({\n      error: JSON.stringify(error)\n    }));\n    return reponse;\n  }\n\n  async deleteCategory(data) {\n    const reponse = await Repository.delete(`${apiUrl}/examinationCalendar/`, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      data: data\n    }).then(response => {\n      return response.data;\n    }).catch(error => ({\n      error: JSON.stringify(error)\n    }));\n    ;\n    return reponse;\n  }\n\n}\n\nexport default new AuthRepository();","map":{"version":3,"sources":["D:/Question_cloud/question_cloud_admin_web_new/repositories/ExaminationCalendarRepository.js"],"names":["Repository","apiUrl","AuthRepository","constructor","callback","getActiveExams","payload","console","log","reponse","get","_start","_limit","then","response","data","catch","error","JSON","stringify","getInactiveExams","getActiveMain","getInactiveMain","saveExaminationCalendar","formdata","post","editExaminationCalendar","categoryId","put","inactiveCategory","changePosition","deleteCategory","delete","headers"],"mappings":"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","sourcesContent":["import Repository, { apiUrl } from './Repository';\r\n\r\nclass AuthRepository {\r\n    constructor(callback) {\r\n        this.callback = callback;\r\n    }\r\n    async getActiveExams(payload) {\r\n        console.log(payload,\"12345qw\")\r\n        const reponse = await Repository.get(`${apiUrl}/examinationCalendar/sub?status='Y'&&mainExamId=${'u'}&&_start=${payload._start}&_limit=${payload._limit}`)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n            .catch(error => ({ error: JSON.stringify(error) }));\r\n        return reponse;\r\n    }\r\n    async getInactiveExams(payload) {\r\n        const reponse = await Repository.get(`${apiUrl}/examinationCalendar/sub?status='N'&&_start=${payload._start}&_limit=${payload._limit}`)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n            .catch(error => ({ error: JSON.stringify(error) }));\r\n        return reponse;\r\n    }\r\n    async getActiveMain(payload) {\r\n        const reponse = await Repository.get(`${apiUrl}/examinationCalendar/main?status=${'Y'}&&_start=${payload._start}&_limit=${payload._limit}`)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n            .catch(error => ({ error: JSON.stringify(error) }));\r\n        return reponse;\r\n    }\r\n    async getInactiveMain(payload) {\r\n        const reponse = await Repository.get(`${apiUrl}/examinationCalendar/main?status=${'N'}&&_start=${payload._start}&_limit=${payload._limit}`)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n\r\n            .catch(error => ({ error: JSON.stringify(error) }));\r\n        return reponse;\r\n    }\r\n    async saveExaminationCalendar(formdata) {\r\n        console.log(\"12345689\")\r\n        const reponse = await Repository.post(`${apiUrl}/examinationCalendar/`, formdata)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n            .catch(error => ({ error: JSON.stringify(error) }));\r\n        return reponse;\r\n    }\r\n    async editExaminationCalendar(categoryId, formdata) {\r\n        console.log(\"12345689\")\r\n        const reponse = await Repository.put(`${apiUrl}/examinationCalendar/ExamId/${categoryId}`, formdata)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n            .catch(error => ({ error: JSON.stringify(error) }));\r\n        return reponse;\r\n    }\r\n    async inactiveCategory(formdata) {\r\n        console.log(\"12345689\")\r\n        const reponse = await Repository.post(`${apiUrl}/examinationCalendar/status/`, formdata)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n            .catch(error => ({ error: JSON.stringify(error) }));\r\n        return reponse;\r\n    }\r\n   // position\r\n   async changePosition(formdata){\r\n    console.log(\"hj\")\r\n    const reponse = await Repository.post(`${apiUrl}/examinationCalendar/position/`, formdata)\r\n        .then(response => {\r\n            return response.data;\r\n        })\r\n        .catch(error => ({ error: JSON.stringify(error) }));\r\n    return reponse;\r\n}\r\nasync deleteCategory(data) {\r\n    const reponse = await Repository.delete(`${apiUrl}/examinationCalendar/`, {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        data: data\r\n    }).then(response => {\r\n        return response.data;\r\n    }).catch(error => ({ error: JSON.stringify(error) }));;\r\n    return reponse;\r\n}\r\n}\r\n\r\nexport default new AuthRepository();\r\n\r\n"]},"metadata":{},"sourceType":"module"}