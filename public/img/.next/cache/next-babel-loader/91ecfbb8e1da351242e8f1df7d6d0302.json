{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Question_cloud\\\\question_cloud_admin_web_new\\\\pages\\\\changepassword\\\\view\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Modal, Button, Checkbox, Spin, notification, Pagination, Tabs, Select } from 'antd';\nimport HeaderDashboard from '../../../components/header/HeaderDashboard';\nimport Sidebar from '../../../components/sections/sidebar';\nimport TableCity from '../../../components/tables/changepassword';\nimport { getAllCity, getInactiveCity } from '../../../store/City/action';\nimport LocationControllerRepository from '../../../repositories/LocationControllerRepository';\n\nvar Home = function Home(props) {\n  _s();\n\n  var TabPane = Tabs.TabPane;\n  var Option = Select.Option;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (_ref) {\n    var auth = _ref.auth;\n    return auth;\n  }),\n      auth = _useSelector.auth;\n\n  var _useSelector2 = useSelector(function (_ref2) {\n    var City = _ref2.City;\n    return City;\n  }),\n      allCity = _useSelector2.allCity,\n      totalActiveCount = _useSelector2.totalActiveCount,\n      inactiveCity = _useSelector2.inactiveCity,\n      totalInactiveCount = _useSelector2.totalInactiveCount;\n\n  var _useState = useState(false),\n      showModal = _useState[0],\n      setShowModal = _useState[1];\n\n  var _useState2 = useState(''),\n      cityname = _useState2[0],\n      setCityname = _useState2[1];\n\n  var _useState3 = useState(''),\n      selectedHomeCatId = _useState3[0],\n      setSelectedHomeCatId = _useState3[1];\n\n  var _useState4 = useState({}),\n      errors = _useState4[0],\n      setErrors = _useState4[1];\n\n  var _useState5 = useState(false),\n      loader = _useState5[0],\n      setLoader = _useState5[1];\n\n  var _useState6 = useState(1),\n      currentPage = _useState6[0],\n      setCurrentPage = _useState6[1];\n\n  var _useState7 = useState(10),\n      pageSizeTotal = _useState7[0],\n      setPageSizeTotal = _useState7[1];\n\n  var _useState8 = useState('active'),\n      tab = _useState8[0],\n      setTab = _useState8[1];\n\n  var _useState9 = useState(false),\n      selectAll = _useState9[0],\n      setSelectAll = _useState9[1];\n\n  var _useState10 = useState([]),\n      selectedHomeCatIds = _useState10[0],\n      setSelectedHomeCatIds = _useState10[1];\n\n  var _useState11 = useState(''),\n      action = _useState11[0],\n      setAction = _useState11[1];\n\n  var _useState12 = useState(''),\n      State = _useState12[0],\n      setState = _useState12[1];\n\n  var _useState13 = useState(''),\n      Citycode = _useState13[0],\n      setCitycode = _useState13[1];\n\n  var _useState14 = useState(''),\n      search = _useState14[0],\n      setsearch = _useState14[1];\n\n  var _useState15 = useState([]),\n      stateitems = _useState15[0],\n      setStateItems = _useState15[1];\n\n  var _useState16 = useState([]),\n      stateId = _useState16[0],\n      setStateId = _useState16[1];\n\n  var _useState17 = useState([]),\n      activeState = _useState17[0],\n      setactiveState = _useState17[1];\n\n  useEffect(function () {\n    var local = JSON.parse(localStorage.getItem('persist:QuestionCloudAdmin'));\n    var localAuth = local && local.auth ? JSON.parse(local.auth) : {};\n\n    if (localAuth && !localAuth.isLoggedIn) {\n      window.location.href = \"/\";\n    }\n  }, [auth]);\n\n  var handleStateChange = function handleStateChange(event, value) {\n    console.log(event, \"dsa\");\n    setStateId(event);\n  };\n\n  var handleRefresh = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var stateresult, stateres, itemArr, _iterator, _step, state;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return LocationControllerRepository.getState();\n\n            case 2:\n              stateresult = _context.sent;\n              stateres = stateresult.state;\n              console.log(stateresult, \"result\");\n              itemArr = [];\n              _iterator = _createForOfIteratorHelper(stateres);\n\n              try {\n                for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                  state = _step.value;\n                  itemArr.push(__jsx(\"item\", {\n                    value: state.state_id,\n                    __self: _this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 52,\n                      columnNumber: 26\n                    }\n                  }, state.state_name));\n                }\n              } catch (err) {\n                _iterator.e(err);\n              } finally {\n                _iterator.f();\n              }\n\n              console.log(itemArr);\n              setStateItems(itemArr);\n              setactiveState(itemArr);\n              setTimeout(function () {\n                setLoader(false);\n              }, 1000);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleRefresh() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    setLoader(true);\n\n    function fetchData() {\n      return _fetchData.apply(this, arguments);\n    }\n\n    function _fetchData() {\n      _fetchData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                handleRefresh();\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n      return _fetchData.apply(this, arguments);\n    }\n\n    fetchData();\n  }, []);\n  useEffect(function () {\n    setLoader(true);\n    var ctr = {};\n    ctr._start = currentPage === 1 ? 0 : (currentPage - 1) * pageSizeTotal;\n    ctr._limit = pageSizeTotal;\n    dispatch(getAllCity(ctr));\n    dispatch(getInactiveCity(ctr));\n  }, []);\n  useEffect(function () {\n    setLoader(false);\n  }, [allCity, inactiveCity]);\n\n  var addModalOnClick = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              setLoader(true);\n              setCitycode('');\n              setState('');\n              setSelectedHomeCatId('');\n              setLoader(false);\n              setShowModal(true);\n\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function addModalOnClick() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var editModalOnClick = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(data) {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              setLoader(true);\n              setSelectedHomeCatId(data.city_id);\n              setState(data.state);\n              setCityname(data.city_name);\n              setCitycode(data.city_code);\n              setLoader(false);\n              setShowModal(true);\n\n            case 7:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function editModalOnClick(_x) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var closeModalOnClick = function closeModalOnClick() {\n    setCityname('');\n    setCitycode('');\n    setSelectedHomeCatId('');\n    setState('');\n    setErrors({});\n    setShowModal(false);\n  };\n\n  var CitynameOnChange = function CitynameOnChange(cityname) {\n    var errorObj = _objectSpread({}, errors);\n\n    errorObj['cityname'] = '';\n    setCityname(cityname);\n    setErrors(errorObj);\n  };\n\n  var CitycodeOnChange = function CitycodeOnChange(Citycode) {\n    var errorObj = _objectSpread({}, errors);\n\n    errorObj['Citycode'] = '';\n    setCitycode(Citycode);\n    setErrors(errorObj);\n  };\n\n  var saveOnClick = function saveOnClick() {\n    if (selectedHomeCatId) {\n      edit();\n    } else {\n      save();\n    }\n  };\n\n  var save = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      var obj, ctr, errorObj;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              if (!(cityname && Citycode)) {\n                _context5.next = 21;\n                break;\n              }\n\n              setLoader(true);\n              obj = {\n                \"state_id\": stateId,\n                \"city_name\": cityname,\n                \"city_code\": Citycode\n              };\n              _context5.prev = 3;\n              _context5.next = 6;\n              return LocationControllerRepository.saveCity(obj);\n\n            case 6:\n              notification.success({\n                message: 'State Added Successfully.'\n              });\n              ctr = {};\n              ctr._start = currentPage === 1 ? 0 : (currentPage - 1) * pageSizeTotal;\n              ctr._limit = pageSizeTotal;\n\n              if (search) {\n                ctr.search = search;\n              }\n\n              dispatch(getAllCity(ctr));\n              dispatch(getInactiveCity(ctr));\n              closeModalOnClick();\n              _context5.next = 19;\n              break;\n\n            case 16:\n              _context5.prev = 16;\n              _context5.t0 = _context5[\"catch\"](3);\n              notification.error({\n                message: 'State Added Failed.'\n              });\n\n            case 19:\n              _context5.next = 24;\n              break;\n\n            case 21:\n              errorObj = _objectSpread({}, errors);\n              if (!cityname) errorObj['cityname'] = \"Please Enter cityname\";\n              setErrors(errorObj);\n\n            case 24:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[3, 16]]);\n    }));\n\n    return function save() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  var edit = /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n      var obj, ctr, errorObj;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              if (!(cityname && selectedHomeCatId && Citycode && cityname)) {\n                _context6.next = 20;\n                break;\n              }\n\n              setLoader(true);\n              obj = {\n                \"city_id\": selectedHomeCatId,\n                \"city_name\": cityname,\n                \"city_code\": Citycode,\n                \"state_id\": stateId\n              };\n              _context6.prev = 3;\n              _context6.next = 6;\n              return LocationControllerRepository.editCity(selectedHomeCatId, obj);\n\n            case 6:\n              notification.success({\n                message: 'State Updated Successfully.'\n              });\n              ctr = {};\n              ctr._start = currentPage === 1 ? 0 : (currentPage - 1) * pageSizeTotal;\n              ctr._limit = pageSizeTotal;\n              dispatch(getAllCity(ctr));\n              dispatch(getInactiveCity(ctr));\n              closeModalOnClick();\n              _context6.next = 18;\n              break;\n\n            case 15:\n              _context6.prev = 15;\n              _context6.t0 = _context6[\"catch\"](3);\n              notification.error({\n                message: 'State  Updated Failed.'\n              });\n\n            case 18:\n              _context6.next = 23;\n              break;\n\n            case 20:\n              errorObj = _objectSpread({}, errors);\n              if (!cityname) errorObj['cityname'] = \"Please Enter cityname\";\n              setErrors(errorObj);\n\n            case 23:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[3, 15]]);\n    }));\n\n    return function edit() {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n\n  var searchOnChange = function searchOnChange(search) {\n    setLoader(true);\n    var ctr = {};\n    ctr._start = 0;\n    ctr._limit = pageSizeTotal;\n    ctr.search = search;\n\n    if (search) {\n      ctr.search = search;\n    }\n\n    if (tab === 'active') {\n      dispatch(getAllCity(ctr));\n    } else {\n      dispatch(getInactiveCity(ctr));\n    }\n\n    setsearch(search);\n    setCurrentPage(1);\n  };\n\n  var pageSizeChange = /*#__PURE__*/function () {\n    var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(page, pageSize) {\n      var ctr;\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              setLoader(true);\n              ctr = {};\n              ctr._start = page === 1 ? 0 : (page - 1) * pageSize;\n              ctr._limit = pageSize;\n\n              if (tab === \"active\") {\n                dispatch(getAllCity(ctr));\n              } else {\n                dispatch(getInactiveCity(ctr));\n              }\n\n              setCurrentPage(page);\n              setPageSizeTotal(pageSize);\n\n            case 7:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n\n    return function pageSizeChange(_x2, _x3) {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n\n  var changeTab = function changeTab(tab) {\n    setLoader(true);\n    var ctr = {};\n    ctr._start = 0;\n    ctr._limit = 10;\n\n    if (tab === \"active\") {\n      dispatch(getAllCity(ctr));\n    } else {\n      dispatch(getInactiveCity(ctr));\n    }\n\n    setCurrentPage(1);\n    setPageSizeTotal(10);\n    setSelectedHomeCatIds([]);\n    setSelectAll(false);\n    setAction('');\n    setsearch('');\n    setTab(tab);\n  };\n\n  var onSelectAll = function onSelectAll(value) {\n    var array = [];\n\n    if (value) {\n      if (tab === 'active') {\n        array = allCity.map(function (h) {\n          return h.city_id;\n        });\n      } else {\n        array = inactiveCity.map(function (h) {\n          return h.city_id;\n        });\n      }\n    }\n\n    setSelectedHomeCatIds(array);\n    setSelectAll(value);\n  };\n\n  var onSelectOne = function onSelectOne(id) {\n    var array = _toConsumableArray(selectedHomeCatIds);\n\n    var array1 = tab === 'active' ? _toConsumableArray(allCity) : _toConsumableArray(inactiveCity);\n    var index = array.indexOf(id);\n\n    if (index >= 0) {\n      array.splice(index, 1);\n    } else {\n      array.push(id);\n    }\n\n    if (array.length === array1.length) {\n      setSelectAll(true);\n    } else {\n      setSelectAll(false);\n    }\n\n    setSelectedHomeCatIds(array);\n  };\n\n  var actionOnChange = function actionOnChange(action) {\n    setAction(action);\n  };\n\n  var goOnClick = /*#__PURE__*/function () {\n    var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n      var selectedHomeCatIdsArr, obj, ctr;\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              selectedHomeCatIdsArr = _toConsumableArray(selectedHomeCatIds);\n              obj = {\n                cityId: selectedHomeCatIdsArr\n              };\n\n              if (!(selectedHomeCatIdsArr && selectedHomeCatIdsArr.length > 0 && action)) {\n                _context8.next = 28;\n                break;\n              }\n\n              setLoader(true);\n\n              if (!(action === \"active\")) {\n                _context8.next = 9;\n                break;\n              }\n\n              obj['status'] = 'Y';\n              _context8.next = 8;\n              return LocationControllerRepository.inactiveCity(obj);\n\n            case 8:\n              notification.success({\n                message: 'State  Updated Successfully.'\n              });\n\n            case 9:\n              if (!(action === \"inactive\")) {\n                _context8.next = 14;\n                break;\n              }\n\n              obj['status'] = 'N';\n              _context8.next = 13;\n              return LocationControllerRepository.inactiveCity(obj);\n\n            case 13:\n              notification.success({\n                message: 'State  Updated Successfully.'\n              });\n\n            case 14:\n              if (!(action === \"delete\")) {\n                _context8.next = 19;\n                break;\n              }\n\n              obj['status'] = 'D';\n              _context8.next = 18;\n              return LocationControllerRepository.inactiveCity(obj);\n\n            case 18:\n              notification.success({\n                message: 'State  Deleted Successfully.'\n              });\n\n            case 19:\n              setSelectedHomeCatIds([]);\n              ctr = {};\n              ctr._start = currentPage === 1 ? 0 : (currentPage - 1) * pageSizeTotal;\n              ctr._limit = pageSizeTotal;\n\n              if (search) {\n                ctr.search = search;\n              }\n\n              dispatch(getAllCity(ctr));\n              dispatch(getInactiveCity(ctr));\n              _context8.next = 29;\n              break;\n\n            case 28:\n              if (!action) {\n                Modal.error({\n                  title: 'Please Select Action'\n                });\n              } else if (!selectedHomeCatIdsArr.length) {\n                Modal.error({\n                  title: 'Please Select One Category'\n                });\n              }\n\n            case 29:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }));\n\n    return function goOnClick() {\n      return _ref9.apply(this, arguments);\n    };\n  }();\n\n  console.log(stateId, \"sdfzxc\");\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    style: {\n      marginBottom: '0rem',\n      padding: '10px 30px',\n      borderRadius: '0rem',\n      backgroundColor: '#eee'\n    },\n    className: \"page-heading d-sm-flex justify-content-sm-between align-items-sm-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 11\n    }\n  }, __jsx(\"h2\", {\n    className: \"title mb-3 mb-sm-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 13\n    }\n  }, \"Change Password\")), __jsx(\"div\", {\n    style: {\n      padding: '5%'\n    },\n    className: \"col-12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 11\n    }\n  }, loader && __jsx(\"div\", {\n    className: \"loader-view w-100\",\n    style: {\n      height: 'calc(100vh - 120px)'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 15\n    }\n  }, __jsx(CircularProgress, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 17\n    }\n  })), !loader && __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    className: \"row no-gutters\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"col-lg-12 d-flex flex-column order-lg-1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 19\n    }\n  }, __jsx(TextField, {\n    required: true,\n    disabled: true,\n    id: \"required\",\n    label: 'Username',\n    name: 'Username',\n    defaultValue: userName,\n    margin: \"none\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 21\n    }\n  }), __jsx(TextField, {\n    required: true,\n    autoComplete: 'off',\n    id: \"required\",\n    type: 'password',\n    label: 'Old Password',\n    name: 'OldPassword',\n    onChange: function onChange(event) {\n      return onOldPasswordChange(event.target.value);\n    },\n    onBlur: valiadateProperty,\n    value: oldPassword,\n    margin: \"normal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 21\n    }\n  }), __jsx(\"h6\", {\n    style: {\n      color: 'red'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 21\n    }\n  }, errors['OldPassword']), __jsx(TextField, {\n    required: true,\n    autoComplete: 'off',\n    id: \"required\",\n    type: 'password',\n    label: 'New Password',\n    name: 'NewPassword',\n    onChange: function onChange(event) {\n      return onNewPasswordChange(event.target.value);\n    },\n    onBlur: valiadateProperty,\n    value: newPassword,\n    margin: \"normal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 21\n    }\n  }), __jsx(\"h6\", {\n    style: {\n      color: 'red'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 21\n    }\n  }, errors['NewPassword']), __jsx(TextField, {\n    required: true,\n    type: 'password',\n    autoComplete: 'off',\n    id: \"required\",\n    label: 'Confirm Password',\n    name: 'ConfirmPassword',\n    onChange: function onChange(event) {\n      return onConfirmPasswordChange(event.target.value);\n    },\n    onBlur: valiadateProperty,\n    value: confirmPassword,\n    margin: \"normal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 21\n    }\n  }), __jsx(\"h6\", {\n    style: {\n      color: 'red'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 21\n    }\n  }, errors['ConfirmPassword']), __jsx(\"div\", {\n    style: {\n      paddingTop: '2%',\n      textAlign: 'center'\n    },\n    className: \"col-lg-12 col-sm-12 col-12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 21\n    }\n  }, __jsx(Button, {\n    onClick: function onClick() {\n      return changePassword();\n    },\n    variant: \"contained\",\n    color: \"primary\",\n    className: \"jr-btn text-white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 23\n    }\n  }, \"Submit\")))), __jsx(Snackbar, {\n    className: \"mb-3 bg-info\",\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    },\n    open: showMessage,\n    message: alertMessage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 17\n    }\n  }))));\n};\n\n_s(Home, \"G4xILR0NEvU2gzIlMcxTHYO4L7k=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["D:/Question_cloud/question_cloud_admin_web_new/pages/changepassword/view/index.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","Modal","Button","Checkbox","Spin","notification","Pagination","Tabs","Select","HeaderDashboard","Sidebar","TableCity","getAllCity","getInactiveCity","LocationControllerRepository","Home","props","TabPane","Option","dispatch","auth","City","allCity","totalActiveCount","inactiveCity","totalInactiveCount","showModal","setShowModal","cityname","setCityname","selectedHomeCatId","setSelectedHomeCatId","errors","setErrors","loader","setLoader","currentPage","setCurrentPage","pageSizeTotal","setPageSizeTotal","tab","setTab","selectAll","setSelectAll","selectedHomeCatIds","setSelectedHomeCatIds","action","setAction","State","setState","Citycode","setCitycode","search","setsearch","stateitems","setStateItems","stateId","setStateId","activeState","setactiveState","local","JSON","parse","localStorage","getItem","localAuth","isLoggedIn","window","location","href","handleStateChange","event","value","console","log","handleRefresh","getState","stateresult","stateres","state","itemArr","push","state_id","state_name","setTimeout","fetchData","ctr","_start","_limit","addModalOnClick","editModalOnClick","data","city_id","city_name","city_code","closeModalOnClick","CitynameOnChange","errorObj","CitycodeOnChange","saveOnClick","edit","save","obj","saveCity","success","message","error","editCity","searchOnChange","pageSizeChange","page","pageSize","changeTab","onSelectAll","array","map","h","onSelectOne","id","array1","index","indexOf","splice","length","actionOnChange","goOnClick","selectedHomeCatIdsArr","cityId","title","marginBottom","padding","borderRadius","backgroundColor","height","userName","onOldPasswordChange","target","valiadateProperty","oldPassword","color","onNewPasswordChange","newPassword","onConfirmPasswordChange","confirmPassword","paddingTop","textAlign","changePassword","vertical","horizontal","showMessage","alertMessage"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Modal, Button, Checkbox, Spin, notification, Pagination, Tabs, Select } from 'antd';\r\nimport HeaderDashboard from '../../../components/header/HeaderDashboard';\r\nimport Sidebar from '../../../components/sections/sidebar';\r\nimport TableCity from '../../../components/tables/changepassword';\r\nimport { getAllCity, getInactiveCity } from '../../../store/City/action';\r\nimport LocationControllerRepository from '../../../repositories/LocationControllerRepository';\r\n\r\nconst Home = (props) => {\r\n\r\n    const { TabPane } = Tabs;\r\n    const { Option } = Select;\r\n    const dispatch = useDispatch();\r\n    const { auth } = useSelector(({ auth }) => auth);\r\n    const { allCity, totalActiveCount, inactiveCity, totalInactiveCount } = useSelector(({ City }) => City);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [cityname, setCityname] = useState('');\r\n    const [selectedHomeCatId, setSelectedHomeCatId] = useState('');\r\n    const [errors, setErrors] = useState({});\r\n    const [loader, setLoader] = useState(false);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [pageSizeTotal, setPageSizeTotal] = useState(10);\r\n    const [tab, setTab] = useState('active');\r\n    const [selectAll, setSelectAll] = useState(false);\r\n    const [selectedHomeCatIds, setSelectedHomeCatIds] = useState([]);\r\n    const [action, setAction] = useState('');\r\n    const [State, setState] = useState('');\r\n    const [Citycode, setCitycode] = useState('');\r\n    const [search, setsearch] = useState('');\r\n    const [stateitems, setStateItems] = useState([]);\r\n    const [stateId, setStateId] = useState([]);\r\n    const [activeState, setactiveState] = useState([]);\r\n\r\n    useEffect(() => {\r\n        let local = JSON.parse(localStorage.getItem('persist:QuestionCloudAdmin'));\r\n        let localAuth = local && local.auth ? JSON.parse(local.auth) : {};\r\n        if (localAuth && !localAuth.isLoggedIn) {\r\n            window.location.href = \"/\";\r\n        }\r\n    }, [auth]);\r\n    const handleStateChange = (event, value) => {\r\n        console.log(event, \"dsa\")\r\n        setStateId(event);\r\n    }\r\n    const handleRefresh = async () => {\r\n        const stateresult = await LocationControllerRepository.getState();\r\n        const { state: stateres } = stateresult;\r\n        console.log(stateresult, \"result\")\r\n        let itemArr = [];\r\n        for (let state of stateres) {\r\n            itemArr.push(<item value={state.state_id}>{state.state_name}</item>)\r\n        }\r\n        console.log(itemArr)\r\n        setStateItems(itemArr);\r\n        setactiveState(itemArr)\r\n        setTimeout(() => {\r\n            setLoader(false)\r\n        }, 1000);\r\n    }\r\n    useEffect(() => {\r\n        setLoader(true);\r\n        async function fetchData() {\r\n            handleRefresh()\r\n        }\r\n        fetchData();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setLoader(true);\r\n        let ctr = {};\r\n        ctr._start = currentPage === 1 ? 0 : ((currentPage - 1) * pageSizeTotal);\r\n        ctr._limit = pageSizeTotal;\r\n        dispatch(getAllCity(ctr));\r\n        dispatch(getInactiveCity(ctr));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setLoader(false);\r\n    }, [allCity, inactiveCity]);\r\n\r\n    const addModalOnClick = async () => {\r\n        setLoader(true);\r\n        setCitycode('');\r\n        setState('');\r\n        setSelectedHomeCatId('');\r\n        setLoader(false);\r\n        setShowModal(true);\r\n    }\r\n\r\n    const editModalOnClick = async (data) => {\r\n        setLoader(true);\r\n        setSelectedHomeCatId(data.city_id);\r\n        setState(data.state);\r\n        setCityname(data.city_name)\r\n        setCitycode(data.city_code)\r\n        setLoader(false);\r\n        setShowModal(true);\r\n    }\r\n\r\n    const closeModalOnClick = () => {\r\n        setCityname('');\r\n        setCitycode('');\r\n        setSelectedHomeCatId('');\r\n        setState('');\r\n        setErrors({});\r\n        setShowModal(false);\r\n    }\r\n\r\n    const CitynameOnChange = (cityname) => {\r\n        let errorObj = { ...errors };\r\n        errorObj['cityname'] = '';\r\n        setCityname(cityname);\r\n        setErrors(errorObj);\r\n    }\r\n    const CitycodeOnChange = (Citycode) => {\r\n        let errorObj = { ...errors };\r\n        errorObj['Citycode'] = '';\r\n        setCitycode(Citycode);\r\n        setErrors(errorObj);\r\n    }\r\n    const saveOnClick = () => {\r\n        if (selectedHomeCatId) {\r\n            edit();\r\n        } else {\r\n            save();\r\n        }\r\n    }\r\n\r\n    const save = async () => {\r\n        if (cityname && Citycode) {\r\n            setLoader(true);\r\n            let obj = {\r\n                \"state_id\": stateId,\r\n                \"city_name\": cityname,\r\n                \"city_code\": Citycode\r\n            }\r\n            try {\r\n                await LocationControllerRepository.saveCity(obj);\r\n                notification.success({\r\n                    message: 'State Added Successfully.'\r\n                })\r\n                let ctr = {};\r\n                ctr._start = currentPage === 1 ? 0 : ((currentPage - 1) * pageSizeTotal);\r\n                ctr._limit = pageSizeTotal;\r\n\r\n                if (search) {\r\n                    ctr.search = search;\r\n                }\r\n                dispatch(getAllCity(ctr));\r\n                dispatch(getInactiveCity(ctr));\r\n                closeModalOnClick();\r\n            } catch (e) {\r\n                notification.error({\r\n                    message: 'State Added Failed.'\r\n                });\r\n            }\r\n        } else {\r\n            let errorObj = { ...errors };\r\n            if (!cityname) errorObj['cityname'] = \"Please Enter cityname\";\r\n            setErrors(errorObj);\r\n        }\r\n    }\r\n\r\n    const edit = async () => {\r\n        if (cityname && selectedHomeCatId && Citycode && cityname) {\r\n            setLoader(true);\r\n            let obj = {\r\n                \"city_id\": selectedHomeCatId,\r\n                \"city_name\": cityname,\r\n                \"city_code\": Citycode,\r\n                \"state_id\": stateId,\r\n            }\r\n            try {\r\n                await LocationControllerRepository.editCity(selectedHomeCatId, obj);\r\n                notification.success({\r\n                    message: 'State Updated Successfully.'\r\n                });\r\n                let ctr = {};\r\n                ctr._start = currentPage === 1 ? 0 : ((currentPage - 1) * pageSizeTotal);\r\n                ctr._limit = pageSizeTotal;\r\n                dispatch(getAllCity(ctr));\r\n                dispatch(getInactiveCity(ctr));\r\n                closeModalOnClick();\r\n            } catch (e) {\r\n                notification.error({\r\n                    message: 'State  Updated Failed.'\r\n                });\r\n            }\r\n        } else {\r\n            let errorObj = { ...errors };\r\n            if (!cityname) errorObj['cityname'] = \"Please Enter cityname\";\r\n            setErrors(errorObj);\r\n        }\r\n    }\r\n\r\n    const searchOnChange = (search) => {\r\n        setLoader(true);\r\n        let ctr = {};\r\n        ctr._start = 0;\r\n        ctr._limit = pageSizeTotal;\r\n        ctr.search = search;\r\n        if (search) {\r\n            ctr.search = search;\r\n        }\r\n        if (tab === 'active') {\r\n            dispatch(getAllCity(ctr));\r\n        } else {\r\n            dispatch(getInactiveCity(ctr));\r\n        }\r\n        setsearch(search);\r\n        setCurrentPage(1);\r\n    }\r\n\r\n    const pageSizeChange = async (page, pageSize) => {\r\n        setLoader(true);\r\n        let ctr = {};\r\n        ctr._start = page === 1 ? 0 : ((page - 1) * pageSize);\r\n        ctr._limit = pageSize;\r\n\r\n        if (tab === \"active\") {\r\n            dispatch(getAllCity(ctr));\r\n        } else {\r\n            dispatch(getInactiveCity(ctr));\r\n        }\r\n        setCurrentPage(page);\r\n        setPageSizeTotal(pageSize);\r\n    }\r\n\r\n    const changeTab = (tab) => {\r\n        setLoader(true);\r\n        let ctr = {};\r\n        ctr._start = 0;\r\n        ctr._limit = 10;\r\n        if (tab === \"active\") {\r\n            dispatch(getAllCity(ctr));\r\n        } else {\r\n            dispatch(getInactiveCity(ctr));\r\n        }\r\n        setCurrentPage(1);\r\n        setPageSizeTotal(10);\r\n        setSelectedHomeCatIds([]);\r\n        setSelectAll(false);\r\n        setAction('');\r\n        setsearch('');\r\n        setTab(tab);\r\n    }\r\n\r\n    const onSelectAll = (value) => {\r\n        let array = [];\r\n        if (value) {\r\n            if (tab === 'active') {\r\n                array = allCity.map(h => h.city_id);\r\n            } else {\r\n                array = inactiveCity.map(h => h.city_id);\r\n            }\r\n        }\r\n        setSelectedHomeCatIds(array);\r\n        setSelectAll(value);\r\n    }\r\n\r\n    const onSelectOne = (id) => {\r\n        let array = [...selectedHomeCatIds];\r\n        let array1 = tab === 'active' ? [...allCity] : [...inactiveCity];\r\n        let index = array.indexOf(id);\r\n        if (index >= 0) {\r\n            array.splice(index, 1);\r\n        } else {\r\n            array.push(id);\r\n        }\r\n        if (array.length === array1.length) {\r\n            setSelectAll(true);\r\n        } else {\r\n            setSelectAll(false);\r\n        }\r\n        setSelectedHomeCatIds(array);\r\n    }\r\n\r\n    const actionOnChange = (action) => {\r\n        setAction(action);\r\n    }\r\n\r\n    const goOnClick = async () => {\r\n        let selectedHomeCatIdsArr = [...selectedHomeCatIds];\r\n        let obj = {\r\n            cityId: selectedHomeCatIdsArr\r\n        };\r\n        if (selectedHomeCatIdsArr && selectedHomeCatIdsArr.length > 0 && action) {\r\n            setLoader(true);\r\n            if (action === \"active\") {\r\n                obj['status'] = 'Y';\r\n                await LocationControllerRepository.inactiveCity(obj);\r\n                notification.success({\r\n                    message: 'State  Updated Successfully.'\r\n                });\r\n            }\r\n            if (action === \"inactive\") {\r\n                obj['status'] = 'N';\r\n                await LocationControllerRepository.inactiveCity(obj);\r\n                notification.success({\r\n                    message: 'State  Updated Successfully.'\r\n                });\r\n            }\r\n            if (action === \"delete\") {\r\n                obj['status'] = 'D';\r\n                await LocationControllerRepository.inactiveCity(obj);\r\n                notification.success({\r\n                    message: 'State  Deleted Successfully.'\r\n                });\r\n            }\r\n            setSelectedHomeCatIds([]);\r\n            let ctr = {};\r\n            ctr._start = currentPage === 1 ? 0 : ((currentPage - 1) * pageSizeTotal);\r\n            ctr._limit = pageSizeTotal;\r\n\r\n            if (search) {\r\n                ctr.search = search;\r\n            }\r\n            dispatch(getAllCity(ctr));\r\n            dispatch(getInactiveCity(ctr));\r\n        } else {\r\n            if (!action) {\r\n                Modal.error({\r\n                    title: 'Please Select Action'\r\n                });\r\n            } else if (!selectedHomeCatIdsArr.length) {\r\n                Modal.error({\r\n                    title: 'Please Select One Category'\r\n                });\r\n            }\r\n        }\r\n    }\r\n    console.log(stateId, \"sdfzxc\")\r\n    return (\r\n        <>\r\n          <div style={{ marginBottom: '0rem', padding: '10px 30px', borderRadius: '0rem', backgroundColor: '#eee' }} className=\"page-heading d-sm-flex justify-content-sm-between align-items-sm-center\">\r\n            <h2 className=\"title mb-3 mb-sm-0\">Change Password</h2>\r\n          </div>\r\n          <div style={{ padding: '5%' }} className=\"col-12\">\r\n            {loader &&\r\n              <div className=\"loader-view w-100\"\r\n                style={{ height: 'calc(100vh - 120px)' }}>\r\n                <CircularProgress />\r\n              </div>\r\n            }\r\n            {!loader &&\r\n              <div>\r\n                <div className=\"row no-gutters\">\r\n                  <div className=\"col-lg-12 d-flex flex-column order-lg-1\">\r\n                    <TextField\r\n                      required\r\n                      disabled={true}\r\n                      id=\"required\"\r\n                      label={'Username'}\r\n                      name={'Username'}\r\n                      defaultValue={userName}\r\n                      margin=\"none\" />\r\n                    <TextField\r\n                      required\r\n                      autoComplete={'off'}\r\n                      id=\"required\"\r\n                      type={'password'}\r\n                      label={'Old Password'}\r\n                      name={'OldPassword'}\r\n                      onChange={(event) => onOldPasswordChange(event.target.value)}\r\n                      onBlur={valiadateProperty}\r\n                      value={oldPassword}\r\n                      margin=\"normal\" />\r\n                    <h6 style={{ color: 'red' }}>{errors['OldPassword']}</h6>\r\n                    <TextField\r\n                      required\r\n                      autoComplete={'off'}\r\n                      id=\"required\"\r\n                      type={'password'}\r\n                      label={'New Password'}\r\n                      name={'NewPassword'}\r\n                      onChange={(event) => onNewPasswordChange(event.target.value)}\r\n                      onBlur={valiadateProperty}\r\n                      value={newPassword}\r\n                      margin=\"normal\" />\r\n                    <h6 style={{ color: 'red' }}>{errors['NewPassword']}</h6>\r\n                    <TextField\r\n                      required\r\n                      type={'password'}\r\n                      autoComplete={'off'}\r\n                      id=\"required\"\r\n                      label={'Confirm Password'}\r\n                      name={'ConfirmPassword'}\r\n                      onChange={(event) => onConfirmPasswordChange(event.target.value)}\r\n                      onBlur={valiadateProperty}\r\n                      value={confirmPassword}\r\n                      margin=\"normal\" />\r\n                    <h6 style={{ color: 'red' }}>{errors['ConfirmPassword']}</h6>\r\n                    <div style={{ paddingTop: '2%', textAlign: 'center' }} className=\"col-lg-12 col-sm-12 col-12\">\r\n                      <Button onClick={() => changePassword()} variant=\"contained\" color=\"primary\" className=\"jr-btn text-white\">Submit</Button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <Snackbar\r\n                  className=\"mb-3 bg-info\"\r\n                  anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                  open={showMessage}\r\n                  message={alertMessage}\r\n                />\r\n              </div>\r\n            }\r\n          </div>\r\n        </>\r\n      );\r\n};\r\n\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}