{"ast":null,"code":"var _jsxFileName = \"D:\\\\Question_cloud\\\\question_cloud_admin_web_new\\\\pages\\\\changepassword\\\\view\\\\index.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Modal, Button, Checkbox, Spin, notification, Pagination, Tabs, Select } from 'antd'; // import * as adminService from '../../../../../../services/adminService';\n// import auth from '../../../../../../services/authService';\n\nconst ChangePasswordForm = props => {\n  const {\n    0: showMessage,\n    1: setShowMessage\n  } = useState(false);\n  const {\n    0: alertMessage,\n    1: setAlertMessage\n  } = useState(\"\");\n  const {\n    0: userName,\n    1: setUserName\n  } = useState(\"\");\n  const {\n    0: userType,\n    1: setUserType\n  } = useState(\"\");\n  const {\n    0: userLoginType,\n    1: setUserLoginType\n  } = useState(\"\");\n  const {\n    0: oldPassword,\n    1: setOldPassword\n  } = useState(\"\");\n  const {\n    0: newPassword,\n    1: setNewPassword\n  } = useState(\"\");\n  const {\n    0: confirmPassword,\n    1: setConfirmPassword\n  } = useState(\"\");\n  const {\n    0: loader,\n    1: setLoader\n  } = useState(false);\n  const {\n    0: errors,\n    1: setErrors\n  } = useState({});\n  const schema = {\n    OldPassword: Joi.string().required(),\n    NewPassword: Joi.string().min(5).required(),\n    ConfirmPassword: Joi.string().required()\n  };\n\n  const valiadateProperty = e => {\n    let {\n      name,\n      value,\n      className\n    } = e.currentTarget;\n    const obj = {\n      [name]: value\n    };\n    const filedSchema = {\n      [name]: schema[name]\n    };\n    const {\n      error\n    } = Joi.validate(obj, filedSchema);\n    let message = error ? error.details[0].message : null;\n    setErrors(_objectSpread(_objectSpread({}, errors), {}, {\n      [name]: message,\n      \"errordetails\": null\n    }));\n  };\n\n  const handleRefresh = async () => {\n    setLoader(true);\n    setOldPassword('');\n    setNewPassword('');\n    setConfirmPassword('');\n    let user = auth.getCurrentUser();\n    console.log(user);\n    setUserName(user.user.name);\n    setUserType(user.user.type);\n    setUserLoginType(user.user.logintype);\n    setTimeout(() => {\n      setLoader(false);\n    }, 1000);\n  };\n\n  const onOldPasswordChange = oldpassword => {\n    setOldPassword(oldpassword);\n  };\n\n  const onNewPasswordChange = newpassword => {\n    setNewPassword(newpassword);\n  };\n\n  const onConfirmPasswordChange = confirmpassword => {\n    setConfirmPassword(confirmpassword);\n  };\n\n  const changePassword = async () => {\n    if (newPassword != confirmPassword) {\n      setErrors(_objectSpread(_objectSpread({}, errors), {}, {\n        ['ConfirmPassword']: 'Confirm Password must match New Password',\n        \"errordetails\": null\n      }));\n    } else {\n      if (oldPassword && newPassword && confirmPassword && errors['ConfirmPassword'] === null && errors['NewPassword'] === null && errors['OldPassword'] === null) {\n        try {\n          let obj = {};\n          obj.oldpassword = oldPassword;\n          obj.newpassword = newPassword;\n          obj.type = userType;\n          obj.logintype = userLoginType;\n          let res = await adminService.changePassword(obj);\n          console.log(res);\n          setAlertMessage('Password Changed Successfully');\n          await handleRefresh();\n          setShowMessage(true);\n          setTimeout(() => {\n            setShowMessage(false);\n          }, 1500);\n        } catch (err) {\n          console.log(err.response.data.error.message);\n          setAlertMessage(err.response.data.error.message);\n          setShowMessage(true);\n          setTimeout(() => {\n            setShowMessage(false);\n          }, 1500);\n        }\n      } else {\n        console.log(errors);\n\n        if (errors['ConfirmPassword'] != null || errors['NewPassword'] != null || errors['OldPassword'] != null) {\n          setAlertMessage('Please Check the errors');\n          setShowMessage(true);\n          setTimeout(() => {\n            setShowMessage(false);\n          }, 1500);\n        } else {\n          setAlertMessage('Please Give All Required Fields');\n          setShowMessage(true);\n          setTimeout(() => {\n            setShowMessage(false);\n          }, 1500);\n        }\n      }\n    }\n  };\n\n  useEffect(() => {\n    async function fetchData() {\n      await handleRefresh();\n    }\n\n    fetchData();\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    style: {\n      marginBottom: '0rem',\n      padding: '10px 30px',\n      borderRadius: '0rem',\n      backgroundColor: '#eee'\n    },\n    className: \"page-heading d-sm-flex justify-content-sm-between align-items-sm-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, __jsx(\"h2\", {\n    className: \"title mb-3 mb-sm-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, \"Change Password\")), __jsx(\"div\", {\n    style: {\n      padding: '5%'\n    },\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, loader && __jsx(\"div\", {\n    className: \"loader-view w-100\",\n    style: {\n      height: 'calc(100vh - 120px)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, __jsx(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  })), !loader && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"row no-gutters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"col-lg-12 d-flex flex-column order-lg-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 15\n    }\n  }, __jsx(TextField, {\n    required: true,\n    disabled: true,\n    id: \"required\",\n    label: 'Username',\n    name: 'Username',\n    defaultValue: userName,\n    margin: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }), __jsx(TextField, {\n    required: true,\n    autoComplete: 'off',\n    id: \"required\",\n    type: 'password',\n    label: 'Old Password',\n    name: 'OldPassword',\n    onChange: event => onOldPasswordChange(event.target.value),\n    onBlur: valiadateProperty,\n    value: oldPassword,\n    margin: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }), __jsx(\"h6\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 17\n    }\n  }, errors['OldPassword']), __jsx(TextField, {\n    required: true,\n    autoComplete: 'off',\n    id: \"required\",\n    type: 'password',\n    label: 'New Password',\n    name: 'NewPassword',\n    onChange: event => onNewPasswordChange(event.target.value),\n    onBlur: valiadateProperty,\n    value: newPassword,\n    margin: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 17\n    }\n  }), __jsx(\"h6\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }\n  }, errors['NewPassword']), __jsx(TextField, {\n    required: true,\n    type: 'password',\n    autoComplete: 'off',\n    id: \"required\",\n    label: 'Confirm Password',\n    name: 'ConfirmPassword',\n    onChange: event => onConfirmPasswordChange(event.target.value),\n    onBlur: valiadateProperty,\n    value: confirmPassword,\n    margin: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 17\n    }\n  }), __jsx(\"h6\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 17\n    }\n  }, errors['ConfirmPassword']), __jsx(\"div\", {\n    style: {\n      paddingTop: '2%',\n      textAlign: 'center'\n    },\n    className: \"col-lg-12 col-sm-12 col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 17\n    }\n  }, __jsx(Button, {\n    onClick: () => changePassword(),\n    variant: \"contained\",\n    color: \"primary\",\n    className: \"jr-btn text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 19\n    }\n  }, \"Submit\")))), __jsx(Snackbar, {\n    className: \"mb-3 bg-info\",\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    },\n    open: showMessage,\n    message: alertMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }\n  }))));\n};\n\nexport default ChangePasswordForm;","map":{"version":3,"sources":["D:/Question_cloud/question_cloud_admin_web_new/pages/changepassword/view/index.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","Modal","Button","Checkbox","Spin","notification","Pagination","Tabs","Select","ChangePasswordForm","props","showMessage","setShowMessage","alertMessage","setAlertMessage","userName","setUserName","userType","setUserType","userLoginType","setUserLoginType","oldPassword","setOldPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","loader","setLoader","errors","setErrors","schema","OldPassword","Joi","string","required","NewPassword","min","ConfirmPassword","valiadateProperty","e","name","value","className","currentTarget","obj","filedSchema","error","validate","message","details","handleRefresh","user","auth","getCurrentUser","console","log","type","logintype","setTimeout","onOldPasswordChange","oldpassword","onNewPasswordChange","newpassword","onConfirmPasswordChange","confirmpassword","changePassword","res","adminService","err","response","data","fetchData","marginBottom","padding","borderRadius","backgroundColor","height","event","target","color","paddingTop","textAlign","vertical","horizontal"],"mappings":"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","sourcesContent":[" import React, { useEffect, useState } from 'react';\r\n import { useDispatch, useSelector } from 'react-redux';\r\n import { Modal, Button, Checkbox, Spin, notification, Pagination, Tabs, Select } from 'antd';\r\n// import * as adminService from '../../../../../../services/adminService';\r\n// import auth from '../../../../../../services/authService';\r\n\r\n\r\n\r\nconst ChangePasswordForm = (props) => {\r\n  const [showMessage, setShowMessage] = useState(false);\r\n  const [alertMessage, setAlertMessage] = useState(\"\");\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [userType, setUserType] = useState(\"\");\r\n  const [userLoginType, setUserLoginType] = useState(\"\");\r\n  const [oldPassword, setOldPassword] = useState(\"\");\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [loader, setLoader] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const schema = {\r\n    OldPassword: Joi.string().required(),\r\n    NewPassword: Joi.string().min(5).required(),\r\n    ConfirmPassword: Joi.string().required(),\r\n  }\r\n\r\n  const valiadateProperty = (e) => {\r\n    let { name, value, className } = e.currentTarget;\r\n    const obj = { [name]: value };\r\n    const filedSchema = { [name]: schema[name] };\r\n    const { error } = Joi.validate(obj, filedSchema);\r\n\r\n    let message = error ? error.details[0].message : null;\r\n    setErrors({ ...errors, [name]: message, \"errordetails\": null })\r\n  }\r\n\r\n  const handleRefresh = async () => {\r\n    setLoader(true);\r\n    setOldPassword('');\r\n    setNewPassword('');\r\n    setConfirmPassword('');\r\n    let user = auth.getCurrentUser();\r\n    console.log(user);\r\n    setUserName(user.user.name);\r\n    setUserType(user.user.type);\r\n    setUserLoginType(user.user.logintype);\r\n    setTimeout(() => {\r\n      setLoader(false)\r\n    }, 1000);\r\n  }\r\n\r\n  const onOldPasswordChange = (oldpassword) => {\r\n    setOldPassword(oldpassword);\r\n  }\r\n\r\n  const onNewPasswordChange = (newpassword) => {\r\n    setNewPassword(newpassword);\r\n  }\r\n\r\n  const onConfirmPasswordChange = (confirmpassword) => {\r\n    setConfirmPassword(confirmpassword);\r\n  }\r\n\r\n  const changePassword = async () => {\r\n    if (newPassword != confirmPassword) {\r\n      setErrors({ ...errors, ['ConfirmPassword']: 'Confirm Password must match New Password', \"errordetails\": null })\r\n    } else {\r\n      if (oldPassword &&\r\n        newPassword &&\r\n        confirmPassword &&\r\n        errors['ConfirmPassword'] === null &&\r\n        errors['NewPassword'] === null &&\r\n        errors['OldPassword'] === null) {\r\n        try {\r\n          let obj = {};\r\n          obj.oldpassword = oldPassword;\r\n          obj.newpassword = newPassword;\r\n          obj.type = userType;\r\n          obj.logintype = userLoginType;\r\n          let res = await adminService.changePassword(obj);\r\n          console.log(res);\r\n          setAlertMessage('Password Changed Successfully');\r\n          await handleRefresh();\r\n          setShowMessage(true);\r\n          setTimeout(() => {\r\n            setShowMessage(false)\r\n          }, 1500);\r\n        } catch (err) {\r\n          console.log(err.response.data.error.message);\r\n          setAlertMessage(err.response.data.error.message);\r\n          setShowMessage(true);\r\n          setTimeout(() => {\r\n            setShowMessage(false)\r\n          }, 1500);\r\n        }\r\n      } else {\r\n        console.log(errors);\r\n        if (errors['ConfirmPassword'] != null ||\r\n          errors['NewPassword'] != null ||\r\n          errors['OldPassword'] != null) {\r\n          setAlertMessage('Please Check the errors');\r\n          setShowMessage(true);\r\n          setTimeout(() => {\r\n            setShowMessage(false)\r\n          }, 1500);\r\n        } else {\r\n          setAlertMessage('Please Give All Required Fields');\r\n          setShowMessage(true);\r\n          setTimeout(() => {\r\n            setShowMessage(false)\r\n          }, 1500);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      await handleRefresh()\r\n    }\r\n    fetchData();\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <>\r\n      <div style={{ marginBottom: '0rem', padding: '10px 30px', borderRadius: '0rem', backgroundColor: '#eee' }} className=\"page-heading d-sm-flex justify-content-sm-between align-items-sm-center\">\r\n        <h2 className=\"title mb-3 mb-sm-0\">Change Password</h2>\r\n      </div>\r\n      <div style={{ padding: '5%' }} className=\"col-12\">\r\n        {loader &&\r\n          <div className=\"loader-view w-100\"\r\n            style={{ height: 'calc(100vh - 120px)' }}>\r\n            <CircularProgress />\r\n          </div>\r\n        }\r\n        {!loader &&\r\n          <div>\r\n            <div className=\"row no-gutters\">\r\n              <div className=\"col-lg-12 d-flex flex-column order-lg-1\">\r\n                <TextField\r\n                  required\r\n                  disabled={true}\r\n                  id=\"required\"\r\n                  label={'Username'}\r\n                  name={'Username'}\r\n                  defaultValue={userName}\r\n                  margin=\"none\" />\r\n                <TextField\r\n                  required\r\n                  autoComplete={'off'}\r\n                  id=\"required\"\r\n                  type={'password'}\r\n                  label={'Old Password'}\r\n                  name={'OldPassword'}\r\n                  onChange={(event) => onOldPasswordChange(event.target.value)}\r\n                  onBlur={valiadateProperty}\r\n                  value={oldPassword}\r\n                  margin=\"normal\" />\r\n                <h6 style={{ color: 'red' }}>{errors['OldPassword']}</h6>\r\n                <TextField\r\n                  required\r\n                  autoComplete={'off'}\r\n                  id=\"required\"\r\n                  type={'password'}\r\n                  label={'New Password'}\r\n                  name={'NewPassword'}\r\n                  onChange={(event) => onNewPasswordChange(event.target.value)}\r\n                  onBlur={valiadateProperty}\r\n                  value={newPassword}\r\n                  margin=\"normal\" />\r\n                <h6 style={{ color: 'red' }}>{errors['NewPassword']}</h6>\r\n                <TextField\r\n                  required\r\n                  type={'password'}\r\n                  autoComplete={'off'}\r\n                  id=\"required\"\r\n                  label={'Confirm Password'}\r\n                  name={'ConfirmPassword'}\r\n                  onChange={(event) => onConfirmPasswordChange(event.target.value)}\r\n                  onBlur={valiadateProperty}\r\n                  value={confirmPassword}\r\n                  margin=\"normal\" />\r\n                <h6 style={{ color: 'red' }}>{errors['ConfirmPassword']}</h6>\r\n                <div style={{ paddingTop: '2%', textAlign: 'center' }} className=\"col-lg-12 col-sm-12 col-12\">\r\n                  <Button onClick={() => changePassword()} variant=\"contained\" color=\"primary\" className=\"jr-btn text-white\">Submit</Button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <Snackbar\r\n              className=\"mb-3 bg-info\"\r\n              anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n              open={showMessage}\r\n              message={alertMessage}\r\n            />\r\n          </div>\r\n        }\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChangePasswordForm;"]},"metadata":{},"sourceType":"module"}